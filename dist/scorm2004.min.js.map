{"version":3,"file":"scorm2004.min.js","mappings":"yBAgBA,IAAIA,EAAgB,SAASC,EAAGC,GAI9B,OAHAF,EAAgBG,OAAOC,gBAClB,CAAEC,UAAW,cAAgBC,OAAS,SAAUL,EAAGC,GAAKD,EAAEI,UAAYH,CAAG,GAC1E,SAAUD,EAAGC,GAAK,IAAK,IAAIK,KAAKL,EAAOC,OAAOK,UAAUC,eAAeC,KAAKR,EAAGK,KAAIN,EAAEM,GAAKL,EAAEK,GAAI,EAC7FP,EAAcC,EAAGC,EAC1B,EAEO,SAASS,EAAUV,EAAGC,GAC3B,GAAiB,mBAANA,GAA0B,OAANA,EAC3B,MAAM,IAAIU,UAAU,uBAAyBC,OAAOX,GAAK,iCAE7D,SAASY,IAAOC,KAAKC,YAAcf,CAAG,CADtCD,EAAcC,EAAGC,GAEjBD,EAAEO,UAAkB,OAANN,EAAaC,OAAOc,OAAOf,IAAMY,EAAGN,UAAYN,EAAEM,UAAW,IAAIM,EACjF,CAEO,IAAII,EAAW,WAQpB,OAPAA,EAAWf,OAAOgB,QAAU,SAAkBC,GAC1C,IAAK,IAAIC,EAAGC,EAAI,EAAGC,EAAIC,UAAUC,OAAQH,EAAIC,EAAGD,IAE5C,IAAK,IAAIf,KADTc,EAAIG,UAAUF,GACOnB,OAAOK,UAAUC,eAAeC,KAAKW,EAAGd,KAAIa,EAAEb,GAAKc,EAAEd,IAE9E,OAAOa,CACX,EACOF,EAASQ,MAAMX,KAAMS,UAC9B,EA0EO,SAASG,EAAUC,EAASC,EAAYC,EAAGC,GAEhD,OAAO,IAAKD,IAAMA,EAAIE,WAAU,SAAUC,EAASC,GAC/C,SAASC,EAAUC,GAAS,IAAMC,EAAKN,EAAUO,KAAKF,GAAS,CAAE,MAAOG,GAAKL,EAAOK,EAAI,CAAE,CAC1F,SAASC,EAASJ,GAAS,IAAMC,EAAKN,EAAiB,MAAEK,GAAS,CAAE,MAAOG,GAAKL,EAAOK,EAAI,CAAE,CAC7F,SAASF,EAAKI,GAJlB,IAAeL,EAIaK,EAAOC,KAAOT,EAAQQ,EAAOL,QAJ1CA,EAIyDK,EAAOL,MAJhDA,aAAiBN,EAAIM,EAAQ,IAAIN,GAAE,SAAUG,GAAWA,EAAQG,EAAQ,KAIjBO,KAAKR,EAAWK,EAAW,CAC7GH,GAAMN,EAAYA,EAAUL,MAAME,EAASC,GAAc,KAAKS,OAClE,GACF,CAEO,SAASM,EAAYhB,EAASiB,GACnC,IAAsGC,EAAGC,EAAG3B,EAAxG4B,EAAI,CAAEC,MAAO,EAAGC,KAAM,WAAa,GAAW,EAAP9B,EAAE,GAAQ,MAAMA,EAAE,GAAI,OAAOA,EAAE,EAAI,EAAG+B,KAAM,GAAIC,IAAK,IAAeC,EAAIlD,OAAOc,QAA4B,mBAAbqC,SAA0BA,SAAWnD,QAAQK,WACtL,OAAO6C,EAAEf,KAAOiB,EAAK,GAAIF,EAAS,MAAIE,EAAK,GAAIF,EAAU,OAAIE,EAAK,GAAsB,mBAAXC,SAA0BH,EAAEG,OAAOC,UAAY,WAAa,OAAO1C,IAAM,GAAIsC,EAC1J,SAASE,EAAKhC,GAAK,OAAO,SAAUmC,GAAK,OACzC,SAAcC,GACV,GAAIb,EAAG,MAAM,IAAIlC,UAAU,mCAC3B,KAAOyC,IAAMA,EAAI,EAAGM,EAAG,KAAOX,EAAI,IAAKA,OACnC,GAAIF,EAAI,EAAGC,IAAM3B,EAAY,EAARuC,EAAG,GAASZ,EAAU,OAAIY,EAAG,GAAKZ,EAAS,SAAO3B,EAAI2B,EAAU,SAAM3B,EAAEV,KAAKqC,GAAI,GAAKA,EAAET,SAAWlB,EAAIA,EAAEV,KAAKqC,EAAGY,EAAG,KAAKjB,KAAM,OAAOtB,EAE3J,OADI2B,EAAI,EAAG3B,IAAGuC,EAAK,CAAS,EAARA,EAAG,GAAQvC,EAAEgB,QACzBuB,EAAG,IACP,KAAK,EAAG,KAAK,EAAGvC,EAAIuC,EAAI,MACxB,KAAK,EAAc,OAAXX,EAAEC,QAAgB,CAAEb,MAAOuB,EAAG,GAAIjB,MAAM,GAChD,KAAK,EAAGM,EAAEC,QAASF,EAAIY,EAAG,GAAIA,EAAK,CAAC,GAAI,SACxC,KAAK,EAAGA,EAAKX,EAAEI,IAAIQ,MAAOZ,EAAEG,KAAKS,MAAO,SACxC,QACI,KAAMxC,EAAI4B,EAAEG,MAAM/B,EAAIA,EAAEK,OAAS,GAAKL,EAAEA,EAAEK,OAAS,KAAkB,IAAVkC,EAAG,IAAsB,IAAVA,EAAG,IAAW,CAAEX,EAAI,EAAG,QAAU,CAC3G,GAAc,IAAVW,EAAG,MAAcvC,GAAMuC,EAAG,GAAKvC,EAAE,IAAMuC,EAAG,GAAKvC,EAAE,IAAM,CAAE4B,EAAEC,MAAQU,EAAG,GAAI,KAAO,CACrF,GAAc,IAAVA,EAAG,IAAYX,EAAEC,MAAQ7B,EAAE,GAAI,CAAE4B,EAAEC,MAAQ7B,EAAE,GAAIA,EAAIuC,EAAI,KAAO,CACpE,GAAIvC,GAAK4B,EAAEC,MAAQ7B,EAAE,GAAI,CAAE4B,EAAEC,MAAQ7B,EAAE,GAAI4B,EAAEI,IAAIS,KAAKF,GAAK,KAAO,CAC9DvC,EAAE,IAAI4B,EAAEI,IAAIQ,MAChBZ,EAAEG,KAAKS,MAAO,SAEtBD,EAAKd,EAAKnC,KAAKkB,EAASoB,EAC5B,CAAE,MAAOT,GAAKoB,EAAK,CAAC,EAAGpB,GAAIQ,EAAI,CAAG,CAAE,QAAUD,EAAI1B,EAAI,CAAG,CACzD,GAAY,EAARuC,EAAG,GAAQ,MAAMA,EAAG,GAAI,MAAO,CAAEvB,MAAOuB,EAAG,GAAKA,EAAG,QAAK,EAAQjB,MAAM,EAC9E,CAtBgDL,CAAK,CAACd,EAAGmC,GAAK,CAAG,CAuBnE,CAE6BvD,OAAOc,OA2GXd,OAAOc,OA2DkB,mBAApB6C,iBAAiCA,gBA+B/D,IC7VA,cACE,WAAYC,GACV,QAAK,UAACA,EAAUC,aAAW,K,OAC3B,EAAKC,WAAaF,EAClB,EAAKG,KAAO,uB,CACd,CAeF,OApB8C,OAa5C,sBAAI,wBAAS,C,IAAb,WACE,OAAOnD,KAAKkD,UACd,E,gCAEA,YAAAE,WAAA,SAAWC,GACTrD,KAAKqD,QAAUA,CACjB,EACF,EApBA,CAA8CC,OAsB9C,cACE,WAAYN,GACV,QAAK,UAACA,IAAU,K,OAChB,EAAKG,KAAO,yB,CACd,CACF,OALgD,OAKhD,EALA,CAAgDI,GCnBhD,GD0BA,YACE,WAAYP,GACV,QAAK,UAACA,IAAU,K,OAChB,EAAKG,KAAO,2B,CACd,CAJgD,MAKlD,CALA,CAAkDI,GC1BlD,wBACE,KAAAC,YAAc,EACN,KAAAC,cAAe,CAiCzB,QA1BE,sBAAI,0BAAW,C,IAAf,WACE,OAAOzD,KAAKyD,YACd,E,gCAMA,sBAAI,yBAAU,C,IAAd,WACE,OAAOzD,KAAK0D,WACd,E,gCAKA,YAAAC,WAAA,WACE3D,KAAKyD,cAAe,CACtB,EAMA,YAAAG,aAAA,WACE5D,KAAK0D,aAAc,IAAIG,MAAOC,SAChC,EACF,EAnCA,IAwCA,2B,8CAEA,QAF0C,OAE1C,EAFA,CAA0CC,GCvCpCC,EAAoB,CACxBC,QAAS,IACTC,sBAAuB,IACvBC,YAAa,IACbC,WAAY,IACZC,oBAAqB,IACrBC,wBAAyB,IACzBC,qBAAsB,IACtBC,qBAAsB,IACtBC,oBAAqB,IACrBC,kBAAmB,IACnBC,iBAAkB,IAClBC,mBAAoB,IACpBC,kBAAmB,IACnBC,eAAgB,IAChBC,eAAgB,IAChBC,YAAa,IACbC,oBAAqB,IACrBC,oBAAqB,IACrBC,uBAAwB,IACxBC,qBAAsB,IACtBC,sBAAuB,IACvBC,sBAAuB,IACvBC,kBAAmB,IACnBC,kBAAmB,IACnBC,mBAAoB,IACpBC,cAAe,IACfC,mBAAoB,IACpBC,2BAA4B,KAuD9B,EALmB,CACjBC,QAhDW,OACR7B,GAAM,CACTQ,qBAAsB,IACtBE,kBAAmB,IACnBE,mBAAoB,IACpBE,eAAgB,IAChBC,eAAgB,IAChBC,YAAa,IACbI,qBAAsB,IACtBC,sBAAuB,IACvBC,sBAAuB,IACvBC,kBAAmB,IACnBC,kBAAmB,IACnBC,mBAAoB,IACpBC,cAAe,IACfC,mBAAoB,IACpBC,2BAA4B,MAiC5BE,UA9Ba,OACV9B,GAAM,CACTE,sBAAuB,IACvBC,YAAa,IACbC,WAAY,IACZC,oBAAqB,IACrBC,wBAAyB,IACzByB,sBAAuB,IACvBvB,qBAAsB,IACtBC,oBAAqB,IACrBC,kBAAmB,IACnBC,iBAAkB,IAClBC,mBAAoB,IACpBC,kBAAmB,IACnBC,eAAgB,IAChBG,oBAAqB,IACrBC,oBAAqB,IACrBC,uBAAwB,IACxBC,qBAAsB,IACtBC,sBAAuB,IACvBC,sBAAuB,IACvBE,kBAAmB,IACnBC,mBAAoB,IACpBC,cAAe,IACfC,mBAAoB,IACpBC,2BAA4B,OC3EjBI,EAAsB,EAAWH,QAK9C,cAUE,WAAYI,GAKV,QAAK,YAAE,K,OACP,EAAKC,WAAaD,EAAOE,SACzB,EAAKjD,WAAa+C,EAAOjD,WAAagD,EAAoB/B,QAC1D,EAAKmC,YAAcH,EAAOI,YAAcC,EACxC,EAAKC,WAAa,G,CACpB,CA+CF,OAnE8B,OA0B5B,sBAAI,wBAAS,C,IAAb,WACE,OAAOvG,KAAKkG,UACd,E,IAMA,SAAcM,GACZ,MAAM,IAAIxG,KAAKoG,YAAYpG,KAAKkD,WAClC,E,gCAMA,sBAAI,qBAAM,C,IAAV,WACE,OAAOlD,KAAKuG,WAAW7F,MACzB,E,IAMA,SAAW+F,GACT,MAAM,IAAIzG,KAAKoG,YAAYpG,KAAKkD,WAClC,E,gCAMA,YAAAwD,OAAA,WACE1G,KAAKwD,YAAa,EAElB,IADA,IAAM9B,EAAiC,CAAC,EAC/BnB,EAAI,EAAGA,EAAIP,KAAKuG,WAAW7F,OAAQH,IAC1CmB,EAAOnB,EAAI,IAAMP,KAAKuG,WAAWhG,GAGnC,cADOP,KAAKwD,WACL9B,CACT,EACF,EAnEA,CAA8BqC,GCiExB,EAA0B,CAE9B4C,aACE,iGACFC,cACE,oHACFC,eAAgB,cAChBC,kBAAmB,wBACnBC,oBAAqB,kBACrBC,2BAA4B,UAC5BC,sBAAuB,mDACvBC,4BAA6B,4BAC7BC,sBACE,sFACFC,mBAAoB,CAClB,IAAO,CACLC,aAAc,oBACdC,cACE,kGAEJ,IAAO,CACLD,aAAc,yBACdC,cACE,kGAEJ,IAAO,CACLD,aAAc,+BACdC,cACE,wKAEJ,IAAO,CACLD,aAAc,2CACdC,cACE,kKAEJ,IAAO,CACLD,aAAc,kBACdC,cACE,yEAEJ,IAAO,CACLD,aAAc,wBACdC,cACE,qNAEJ,IAAO,CACLD,aAAc,0CACdC,cACE,4IAEJ,IAAO,CACLD,aAAc,uBACdC,cACE,2EAEJ,IAAO,CACLD,aAAc,wBACdC,cACE,+EAEJ,IAAO,CACLD,aAAc,sBACdC,cACE,uHAEJ,IAAO,CACLD,aAAc,6BACdC,cACE,iIAEJ,IAAO,CACLD,aAAc,wCACdC,cACE,6LA0KR,EANmC,CACjCtD,OA3P8B,CAC9BuD,WAAY,OACZC,YAAa,QACbC,sBAAuB,EACvBC,kBAAmB,EACnBC,iBAAkB,EAClBC,gBAAiB,EACjBC,eAAgB,EAChBC,kBAAmB,EACnBC,gBAAiB,EACjBC,eAAgB,GAkPhBnC,QAAS,EACToC,KAnKQ,OACL,GACA,CACDtB,aACE,4GACFO,4BACE,yFACFD,sBACE,wEACFiB,8BACE,4IACFC,eAAgB,oBAChBC,yBAA0B,sBAC1BC,eAAgB,0DAuJlBvC,UApJoC,CAEpCa,aACE,uTACFG,kBAAmB,6BACnBD,eAAgB,qBAChBE,oBACE,yEACFC,2BAA4B,UAC5BC,sBAAuB,mDACvBC,4BACE,uDACFC,sBACE,uGACFC,mBAAoB,CAClB,EAAK,CACHC,aAAc,WACdC,cAAe,4DAEjB,IAAO,CACLD,aAAc,oBACdC,cACE,gGAEJ,IAAO,CACLD,aAAc,iCACdC,cAAe,oDAEjB,IAAO,CACLD,aAAc,sBACdC,cACE,oEAEJ,IAAO,CACLD,aAAc,8BACdC,cACE,mEAEJ,IAAO,CACLD,aAAc,8BACdC,cAAe,mDAEjB,IAAO,CACLD,aAAc,oCACdC,cACE,+EAEJ,IAAO,CACLD,aAAc,gCACdC,cACE,kEAEJ,IAAO,CACLD,aAAc,sCACdC,cACE,8EAEJ,IAAO,CACLD,aAAc,kCACdC,cACE,4EAEJ,IAAO,CACLD,aAAc,mCACdC,cACE,8EAEJ,IAAO,CACLD,aAAc,+BACdC,cACE,4EAEJ,IAAO,CACLD,aAAc,+BACdC,cACE,4EAEJ,IAAO,CACLD,aAAc,2BACdC,cACE,0EAEJ,IAAO,CACLD,aAAc,yBACdC,cACE,+JAEJ,IAAO,CACLD,aAAc,sBACdC,cACE,8HAEJ,IAAO,CACLD,aAAc,sBACdC,cACE,8HAEJ,IAAO,CACLD,aAAc,yBACdC,cACE,4HAEJ,IAAO,CACLD,aAAc,+BACdC,cACE,uGAEJ,IAAO,CACLD,aAAc,mCACdC,cACE,yMAEJ,IAAO,CACLD,aAAc,2CACdC,cACE,qLAEJ,IAAO,CACLD,aAAc,kCACdC,cACE,wEAEJ,IAAO,CACLD,aAAc,mCACdC,cACE,4EAEJ,IAAO,CACLD,aAAc,mCACdC,cACE,oHAEJ,IAAO,CACLD,aAAc,wCACdC,cACE,8HAEJ,IAAO,CACLD,aAAc,wCACdC,cACE,8LC/SFgB,EAAiB,EAAazC,QAAQuB,mBACtCmB,EAAc,EAAaN,KAAKb,mBAChCoB,EAAmB,EAAa1C,UAAUsB,mBAWhD,cAUE,WACEpE,EACAyF,EACAC,GAEA,QAAK,UAAC1F,IAAU,K,OASD,EAAA2F,iBAA2B,GAR1C,EAAKvF,WAAWqF,GAChB,EAAKG,cAAgBH,EACjBC,IACF,EAAKC,iBAAmBD,G,CAE5B,CAoBF,OAxCU,OA6BR,sBAAI,2BAAY,C,IAAhB,WACE,OAAO1I,KAAK4I,aACd,E,gCAMA,sBAAI,8BAAe,C,IAAnB,WACE,OAAO5I,KAAK2I,gBACd,E,gCACF,EAzCA,CACUpF,GA+FV,GAlDA,YAKE,WAAYP,G,MACN,CAAC,EAAEtD,eAAeC,KAAK2I,EAAgBxI,OAAOkD,IAChD,EAAK,UACHA,EACAsF,EAAexI,OAAOkD,IAAYqE,aAClCiB,EAAexI,OAAOkD,IAAYsE,gBACnC,KAED,EAAK,UACH,IACAgB,EAAe,KAAOjB,aACtBiB,EAAe,KAAOhB,gBACvB,IAEL,CAnB0C,MAoB5C,CApBA,CAA4CuB,GAyB5C,YAKE,WAAY7F,G,MACN,CAAC,EAAEtD,eAAeC,KAAK4I,EAAazI,OAAOkD,IAC7C,EAAK,UACHA,EACAuF,EAAYzI,OAAOkD,IAAYqE,aAC/BkB,EAAYzI,OAAOkD,IAAYsE,gBAChC,KAED,EAAK,UACH,IACAiB,EAAY,KAAOlB,aACnBkB,EAAY,KAAOjB,gBACpB,IAEL,CAnBuC,MAoBzC,CApBA,CAAyCuB,GAyBzC,YAKE,WAAY7F,G,MACN,CAAC,EAAEtD,eAAeC,KAAK6I,EAAkB1I,OAAOkD,IAClD,EAAK,UACHA,EACAwF,EAAiB1I,OAAOkD,IAAYqE,aACpCmB,EAAiB1I,OAAOkD,IAAYsE,gBACrC,KAED,EAAK,UACH,IACAkB,EAAiB,KAAOnB,aACxBmB,EAAiB,KAAOlB,gBACzB,IAEL,CACF,OApB8C,OAoB9C,EApBA,CAA8CuB,IC/GjCC,EAAmB,KAW1BC,EAA4B,CAChCC,EAX6B,GAAKF,EAYlCG,EAAGH,EACHI,EAfgC,GAgBhCC,EAjBgC,GA6D3B,SAASC,EAAwBC,GAEtC,IAAKA,GAAWA,GAAW,EACzB,MAAO,OAGT,IAAIC,EAAW,IACXC,EAAYF,EAChB,IAAK,IAAMG,KAAmBT,EAAc,CAC1C,IAAMU,EAAkBV,EAAaS,GACjCnI,EAAQqI,KAAKC,MAAMJ,EAAYE,GAG/BG,EAFJL,GAAwBE,GAEO,IAC7BF,EAAYM,OAAOA,OAAON,GAAWO,QAAQ,KAKvB,MAApBN,GAA2BD,EAAY,IACzClI,GAASkI,GAGPlI,KAECiI,EAASS,QAAQ,KAAO,GACH,MAApBP,GACoB,MAApBA,GACoB,MAApBA,KACyB,IAA3BF,EAASS,QAAQ,OAEjBT,GAAY,KAGdA,GAAY,UAAGjI,GAAK,OAAGmI,GAE3B,CACA,OAAOF,CACT,CAqCO,SAASU,EACdV,EACAW,GAMA,GAJ6B,iBAAlBA,IACTA,EAAgB,IAAIC,OAAOD,KAGxBX,IAAaA,EAASa,MAAMF,GAC/B,OAAO,EAGH,MACJ,IAAIC,OAAOD,GAAeG,KAAKd,IAAa,GADrCe,EAAK,KAAOC,GAAJ,KAAQ,MAAEC,EAAK,KAAEC,EAAO,KAAEnB,EAAO,KAE9C3H,EAAS,EAMb,OALAA,GAAUmI,OAAOR,IAAY,EAC7B3H,GAA4B,GAAlBmI,OAAOW,IAAmB,EACpC9I,GAA0B,KAAhBmI,OAAOU,IAAmB,EACpC7I,GAAyB,MAAfmI,OAAOS,IAA4B,EAC7C5I,GAA0B,QAAhBmI,OAAOQ,IAAmC,CAEtD,CAkDO,SAASI,EAAQC,GACtB,IAAMhJ,EAAuB,CAAC,EA8B9B,OAvBA,SAASiJ,EAAQC,EAAUC,GACzB,GAAIzL,OAAOwL,KAASA,EAClBlJ,EAAOmJ,GAAQD,OACV,GAAIrL,MAAMuL,QAAQF,GACvB,IAAK,IAAIrK,EAAI,EAAGwK,EAAIH,EAAIlK,OAAQH,EAAIwK,EAAGxK,IACrCoK,EAAQC,EAAIrK,GAAIsK,EAAO,IAAMtK,EAAI,KACvB,IAANwK,IAASrJ,EAAOmJ,GAAQ,QAEzB,CACL,IAAIG,GAAU,EAEd,IAAK,IAAMxL,KAAKoL,GACV,CAAC,GAAElL,eAAeC,KAAKiL,EAAKpL,KAC9BwL,GAAU,EACVL,EAAQC,EAAIpL,GAAIqL,EAAOA,EAAO,IAAMrL,EAAIA,IAIxCwL,GAAWH,IAAMnJ,EAAOmJ,GAAQ,CAAC,EACvC,CACF,CAEAF,CAAQD,EAAM,IACPhJ,CACT,CAsCO,SAASkI,EAAcqB,GAC5B,OAAIvB,KAAKC,MAAMsB,KAASA,GAAOnL,OAAOmL,GAAKlB,QAAQ,KAAO,EAAU,EACtDkB,EAAIhI,WAAWiI,MAAM,KAAK,GAC3BxK,QAAU,CACzB,CClRA,IAAMyK,EAAmB,EAAanH,OAChC,EAAsB,EAAW6B,QAiEhC,IAAMuF,EAA4B,CACvCC,YAAY,EACZC,kBAAmB,GACnBC,aAAa,EACbC,kBAAkB,EAClBC,cAAc,EACdC,iBAAkB,OAClBC,sBAAuB,iCACvBC,cAAc,EACdC,SAAUV,EAAiBpD,gBAC3B+D,uBAAuB,EACvBC,qBAAqB,EACrBC,eAAe,EACfC,WAAY,CAAC,EACbC,oBAAoB,EACpBC,gBAAiB,SAAgBC,G,gHACP,IAAbA,EAAP,OACiB,KAAAC,MAAKC,MAAM,GAAMF,EAASG,S,OAC7C,OACiB,QAFXC,EAAa,WAAW,aAG3B,CAAC,EAAE9M,eAAeC,KAAK6M,EAAY,UAc7B,CAAP,EAAO,CACL9K,OAAQ8K,EAAW9K,OACnBsB,UAAWwJ,EAAWxJ,UAClBwJ,EAAWxJ,UACXwJ,EAAW9K,SAAWyJ,EAAiB5D,WACrC,EACA,MAlBgB,MAApB6E,EAASK,OACJ,CAAP,EAAO,CACL/K,OAAQyJ,EAAiB5D,WACzBvE,UAAW,IAGN,CAAP,EAAO,CACLtB,OAAQyJ,EAAiB3D,YACzBxE,UAAW,M,OAcnB,MAAO,CAAP,EAAO,CACLtB,OAAQyJ,EAAiB3D,YACzBxE,UAAW,M,QAGf0J,eAAgB,SAAUC,GACxB,OAAOA,CACT,EACAC,aAAc,SAAUC,EAAcC,GACpC,OAAQD,GACN,KAAK1B,EAAiBpD,gBACpBgF,QAAQC,MAAMF,GACd,MACF,KAAK3B,EAAiBrD,kBACpBiF,QAAQE,KAAKH,GACb,MACF,KAAK3B,EAAiBtD,eACpBkF,QAAQG,KAAKJ,GACb,MACF,KAAK3B,EAAiBvD,gBAChBmF,QAAQI,MACVJ,QAAQI,MAAML,GAEdC,QAAQK,IAAIN,GAIpB,GAOF,aAWE,WAAsBO,EAAwBC,G,uBAC5C,GATM,KAAAC,UAAsBnC,EASxB,IAAeoC,EACjB,MAAM,IAAI3N,UAAU,+CAEtBG,KAAKyN,aAAetC,EAAiB1D,sBACrCzH,KAAK0N,cAAgB,IACrB1N,KAAK2N,cAAgB,GAErB3N,KAAK4N,aAAeP,EAEhBC,IACFtN,KAAKsN,SAAWA,GAElBtN,KAAK6N,YAAc7N,KAAKsN,SAASzB,SACjC7L,KAAK8L,sBAAwB9L,KAAKsN,SAASxB,qBAC7C,CA+sCF,OA7rCE,YAAAnI,WAAA,SACEmK,EACAC,EACAC,GAEA,IAAIC,EAAc9C,EAAiB3D,YAwBnC,OAtBIxH,KAAKkO,gBACPlO,KAAKmO,gBAAgBnO,KAAK4N,aAAazJ,YAAa4J,GAC3C/N,KAAKoO,eACdpO,KAAKmO,gBAAgBnO,KAAK4N,aAAaxJ,WAAY4J,IAE/ChO,KAAK8L,uBACP9L,KAAKqO,IAAIzK,eAGX5D,KAAKyN,aAAetC,EAAiBzD,kBACrC1H,KAAK0N,cAAgB,IACrBO,EAAc9C,EAAiB5D,WAC/BvH,KAAKsO,iBAAiBR,IAGxB9N,KAAKuO,OACHT,EACA,aAAeG,EACf9C,EAAiBtD,gBAEnB7H,KAAKwO,gBAAgBP,GAEdA,CACT,EAsBA,sBAAI,0BAAW,C,IAAf,WACE,OAAOjO,KAAK4N,YACd,E,gCAMA,sBAAI,uBAAQ,C,IAAZ,WACE,OAAO5N,KAAKuN,SACd,E,IAMA,SAAaD,GACXtN,KAAKuN,UAAY,OAAKvN,KAAKuN,WAAcD,EAC3C,E,gCAQA,YAAAmB,UAAA,SAAUX,EAAsBY,GAC9B,IAAIT,EAAc9C,EAAiB3D,YAEnC,GACExH,KAAK2O,WACHD,EACA1O,KAAK4N,aAAatJ,wBAClBtE,KAAK4N,aAAarJ,sBAEpB,CACAvE,KAAKyN,aAAetC,EAAiBxD,iBAErC,IAAMjG,EAAuB1B,KAAK4O,WAAU,QACZ,IAArBlN,EAAOsB,WAA6BtB,EAAOsB,UAAY,GAChEhD,KAAKmO,gBAAgBzM,EAAOsB,WAE9BiL,OACoB,IAAXvM,GAA0BA,EAAOA,OACpCA,EAAOA,OACPyJ,EAAiB3D,YAEnBkH,IAAiB1O,KAAK0N,cAAgB,KAE1CO,EAAc9C,EAAiB5D,WAC/BvH,KAAKsO,iBAAiBR,EACxB,CASA,OAPA9N,KAAKuO,OACHT,EACA,aAAeG,EACf9C,EAAiBtD,gBAEnB7H,KAAKwO,gBAAgBP,GAEdA,CACT,EAUA,YAAAY,SAAA,SACEf,EACAY,EACAI,GAEA,IAAIb,EAAsB,GAE1B,GACEjO,KAAK2O,WACHD,EACA1O,KAAK4N,aAAapJ,qBAClBxE,KAAK4N,aAAanJ,qBAEpB,CACIiK,IAAiB1O,KAAK0N,cAAgB,KAC1C,IACEO,EAAcjO,KAAK+O,YAAYD,EACjC,CAAE,MAAOtN,GACPyM,EAAcjO,KAAKgP,2BAA2BxN,EAAGyM,EACnD,CACAjO,KAAKsO,iBAAiBR,EAAcgB,EACtC,CAUA,OARA9O,KAAKuO,OACHT,EACA,eAAiBG,EACjB9C,EAAiBtD,eACjBiH,GAEF9O,KAAKwO,gBAAgBP,GAEdA,CACT,EAYA,YAAAgB,SAAA,SACEnB,EACAoB,EACAR,EACAI,EACAzN,QAEc8N,IAAV9N,IACFA,EAAQvB,OAAOuB,IAEjB,IAAI4M,EAAsB9C,EAAiB3D,YAE3C,GACExH,KAAK2O,WACHD,EACA1O,KAAK4N,aAAalJ,kBAClB1E,KAAK4N,aAAajJ,kBAEpB,CACI+J,IAAiB1O,KAAK0N,cAAgB,KAC1C,IACEO,EAAcjO,KAAKoP,YAAYN,EAAYzN,EAC7C,CAAE,MAAOG,GACPxB,KAAKgP,2BAA2BxN,EAAGyM,EACrC,CACAjO,KAAKsO,iBAAiBR,EAAcgB,EAAYzN,EAClD,CAyBA,YAvBoB8N,IAAhBlB,IACFA,EAAc9C,EAAiB3D,aAKE,MAA/B1H,OAAOE,KAAK0N,gBACV1N,KAAKsN,SAASjC,aAAerL,KAAKqP,UACpCrP,KAAKsP,eAC+B,IAAlCtP,KAAKsN,SAAShC,kBACd4D,GAKNlP,KAAKuO,OACHT,EACA,KAAOzM,EAAQ,aAAe4M,EAC9B9C,EAAiBtD,eACjBiH,GAEF9O,KAAKwO,gBAAgBP,GAEdA,CACT,EAQA,YAAAsB,OAAA,SAAOzB,EAAsBY,QAAA,IAAAA,IAAAA,GAAA,GAC3B1O,KAAKwP,uBAEL,IAAIvB,EAAc9C,EAAiB3D,YAEnC,GACExH,KAAK2O,WACHD,EACA1O,KAAK4N,aAAahJ,mBAClB5E,KAAK4N,aAAa/I,mBAEpB,CACA,IAAMnD,EAAS1B,KAAK4O,WAAU,GAC1BlN,EAAOsB,WAAatB,EAAOsB,UAAY,GACzChD,KAAKmO,gBAAgBzM,EAAOsB,WAE9BiL,OACoB,IAAXvM,GAA0BA,EAAOA,OACpCA,EAAOA,OACPyJ,EAAiB3D,YAEvBxH,KAAKuO,OACHT,EACA,YAAcG,EACd9C,EAAiBvD,gBACjB,eAGE8G,IAAiB1O,KAAK0N,cAAgB,KAE1C1N,KAAKsO,iBAAiBR,EACxB,CASA,OAPA9N,KAAKuO,OACHT,EACA,aAAeG,EACf9C,EAAiBtD,gBAEnB7H,KAAKwO,gBAAgBP,GAEdA,CACT,EAOA,YAAAwB,aAAA,SAAa3B,GACX,IAAMG,EAAcnO,OAAOE,KAAK0N,eAUhC,OARA1N,KAAKsO,iBAAiBR,GAEtB9N,KAAKuO,OACHT,EACA,aAAeG,EACf9C,EAAiBtD,gBAGZoG,CACT,EASA,YAAAyB,eAAA,SAAe5B,EAAsB6B,GACnC,IAAI1B,EAAc,GAalB,OAXqB,OAAjB0B,GAA0C,KAAjBA,IAC3B1B,EAAcjO,KAAK4P,0BAA0BD,GAC7C3P,KAAKsO,iBAAiBR,IAGxB9N,KAAKuO,OACHT,EACA,aAAeG,EACf9C,EAAiBtD,gBAGZoG,CACT,EASA,YAAA4B,cAAA,SAAc/B,EAAsB6B,GAClC,IAAI1B,EAAc,GAalB,OAXqB,OAAjB0B,GAA0C,KAAjBA,IAC3B1B,EAAcjO,KAAK4P,0BAA0BD,GAAc,GAC3D3P,KAAKsO,iBAAiBR,IAGxB9N,KAAKuO,OACHT,EACA,aAAeG,EACf9C,EAAiBtD,gBAGZoG,CACT,EAUA,YAAAU,WAAA,SACED,EACAoB,EACAC,GAEA,OAAI/P,KAAKgQ,oBACPhQ,KAAKmO,gBAAgB2B,IACd,IACEpB,IAAmB1O,KAAKoO,iBACjCpO,KAAKmO,gBAAgB4B,IACd,EAIX,EAUA,YAAAxB,OAAA,SACE0B,EACAnD,EACAD,EACAiC,GAEAhC,EAAa9M,KAAKkQ,cAAcD,EAAcnD,EAAYgC,GAEtDjC,GAAgB7M,KAAK6N,aACvB7N,KAAKsN,SAASV,aAAaC,EAAcC,EAE7C,EAUA,YAAAoD,cAAA,SACED,EACA5M,EACAyL,GASA,IAPA,IACIqB,EAAgB,GAIhBC,EALe,IAGnBD,GAAiBF,GAE0BvP,OAElCH,EAAI,EAAGA,EAAI6P,EAAW7P,IAC7B4P,GAAiB,IAKnB,GAFAA,GAAiB,KAEbrB,EAAY,CAKdsB,EAJ6B,IAE7BD,GAAiBrB,GAEgCpO,OAEjD,IAAK,IAAI2P,EAAI,EAAGA,EAAID,EAAWC,IAC7BF,GAAiB,GAErB,CAMA,OAJI9M,IACF8M,GAAiB9M,GAGZ8M,CACT,EASA,YAAAG,cAAA,SAAcC,EAAaC,GACzB,OAA8B,QAAvBD,aAAG,EAAHA,EAAKpG,MAAMqG,GACpB,EASQ,YAAAC,wBAAR,SACEC,EACAC,GAEA,OACEvR,OAAOM,eAAeC,KAAK+Q,EAAWC,IAIjC,MAHLvR,OAAOwR,yBACLxR,OAAOyR,eAAeH,GACtBC,IAEFA,KAAaD,CAEjB,EAWA,YAAAd,0BAAA,SACEkB,EACAC,GAEA,WAFA,IAAAA,IAAAA,GAAA,GAEM,IAAIzN,MACR,gEAEJ,EAUA,YAAAyL,YAAA,SAAYiC,GACV,MAAM,IAAI1N,MAAM,kDAClB,EAWA,YAAA8L,YAAA,SAAY4B,EAAqBC,GAC/B,MAAM,IAAI3N,MAAM,kDAClB,EAWA,YAAA4N,mBAAA,SACEC,EACArL,EACAgJ,EACAzN,GAEA,IAAKyN,GAA6B,KAAfA,EACjB,OAAO3D,EAAiB3D,YAa1B,IAVA,IAAM4J,EAAYtC,EAAW5D,MAAM,KAC/BwF,EAAuB1Q,KACvBiO,EAAc9C,EAAiB3D,YAC/B6J,GAAkB,EAEhBC,EAAsB,2CAAoCH,EAAU,aAAKrC,EAAU,8CACnFyC,EAAmBzL,EACrB9F,KAAK4N,aAAaxI,qBAClBpF,KAAK4N,aAAa3J,QAEbuN,EAAM,EAAGA,EAAMJ,EAAU1Q,OAAQ8Q,IAAO,CAC/C,IAAMb,EAAYS,EAAUI,GAE5B,GAAIA,IAAQJ,EAAU1Q,OAAS,EAE3BoF,GAC8B,aAA9B6K,EAAUc,UAAU,EAAG,IACY,mBAA5Bf,EAAUgB,eAEjB1R,KAAKmO,gBAAgBnO,KAAK4N,aAAapI,mBAC7BxF,KAAKyQ,wBAAwBC,EAAWC,IAIhD3Q,KAAKkO,iBACLlO,KAAKsQ,cAAcxB,EAAY,gCAE/B9O,KAAK2R,wBAAwB7C,EAAYzN,GAGtCyE,GAAoC,MAAvB9F,KAAK0N,gBACrBgD,EAAUC,GAAatP,EACvB4M,EAAc9C,EAAiB5D,aAXjCvH,KAAKmO,gBAAgBoD,EAAkBD,OAcpC,CAEL,KADAZ,EAAYA,EAAUC,IACN,CACd3Q,KAAKmO,gBAAgBoD,EAAkBD,GACvC,KACF,CAEA,GAAIZ,aAAqBkB,EAAU,CACjC,IAAMC,EAAQC,SAASV,EAAUI,EAAM,GAAI,IAG3C,IAAKO,MAAMF,GAAQ,CACjB,IAAMG,EAAOtB,EAAUnK,WAAWsL,GAElC,GAAIG,EACFtB,EAAYsB,EACZX,GAAkB,MACb,CACL,IAAMY,EAAWjS,KAAKkS,gBACpBpD,EACAzN,EACAgQ,GAEFA,GAAkB,EAEbY,GAGCvB,EAAUyB,aAAaF,EAAStO,aAEpC+M,EAAUnK,WAAWzD,KAAKmP,GAC1BvB,EAAYuB,GALZjS,KAAKmO,gBAAgBoD,EAAkBD,EAO3C,CAGAE,GACF,CACF,CACF,CACF,CAUA,OARIvD,IAAgB9C,EAAiB3D,aACnCxH,KAAKuO,OACH4C,EACA,oDAA6CrC,EAAU,uBAAezN,GACtE8J,EAAiBrD,mBAIdmG,CACT,EAkCA,YAAAmE,mBAAA,SACEjB,EACArL,EACAgJ,GAEA,IAAKA,GAA6B,KAAfA,EACjB,MAAO,GAaT,IAVA,IAAMsC,EAAYtC,EAAW5D,MAAM,KAC/BwF,EAAuB1Q,KACvB2Q,EAAY,KAEV0B,EAA4B,2CAAoClB,EAAU,aAAKrC,EAAU,+BACzFwC,EAAsB,2CAAoCH,EAAU,aAAKrC,EAAU,8CACnFyC,EAAmBzL,EACrB9F,KAAK4N,aAAaxI,qBAClBpF,KAAK4N,aAAa3J,QAEbuN,EAAM,EAAGA,EAAMJ,EAAU1Q,OAAQ8Q,IAAO,CAG/C,GAFAb,EAAYS,EAAUI,GAEjB1L,EAOE,CACL,GACwC,aAAtChG,OAAO6Q,GAAWc,UAAU,EAAG,IACI,mBAA5Bf,EAAUgB,eACjB,CACA,IAAMY,EAASxS,OAAO6Q,GAAWc,UAC/B,EACA3R,OAAO6Q,GAAWjQ,OAAS,GAE7B,OAAOgQ,EAAUgB,eAAeY,EAClC,CAAO,IAAKtS,KAAKyQ,wBAAwBC,EAAWC,GAElD,YADA3Q,KAAKmO,gBAAgBoD,EAAkBD,EAG3C,MApBE,GAAIE,IAAQJ,EAAU1Q,OAAS,IACxBV,KAAKyQ,wBAAwBC,EAAWC,GAE3C,YADA3Q,KAAKmO,gBAAgBoD,EAAkBD,GAqB7C,QAAkBnC,KADlBuB,EAAYA,EAAUC,IACO,CAC3B3Q,KAAKmO,gBAAgBoD,EAAkBD,GACvC,KACF,CAEA,GAAIZ,aAAqBkB,EAAU,CACjC,IAAMC,EAAQC,SAASV,EAAUI,EAAM,GAAI,IAG3C,IAAKO,MAAMF,GAAQ,CACjB,IAAMG,EAAOtB,EAAUnK,WAAWsL,GAElC,IAAIG,EAEG,CACLhS,KAAKmO,gBACHnO,KAAK4N,aAAatI,sBAClB+M,GAEF,KACF,CAPE3B,EAAYsB,EAUdR,GACF,CACF,CACF,CAEA,GAAId,QASF,OAAOA,EARF5K,IACe,cAAd6K,EACF3Q,KAAKmO,gBAAgB,EAAoBpJ,gBAClB,WAAd4L,GACT3Q,KAAKmO,gBAAgB,EAAoBnJ,aAMjD,EAOA,YAAAkJ,cAAA,WACE,OAAOlO,KAAKyN,eAAiBtC,EAAiBzD,iBAChD,EAOA,YAAAsI,iBAAA,WACE,OAAOhQ,KAAKyN,eAAiBtC,EAAiB1D,qBAChD,EAOA,YAAA2G,aAAA,WACE,OAAOpO,KAAKyN,eAAiBtC,EAAiBxD,gBAChD,EAQA,YAAA4K,GAAA,SAAGC,EAAsBC,GACvB,GAAKA,EAGL,IADA,IAAMC,EAAoBF,EAAatH,MAAM,KACpC3K,EAAI,EAAGA,EAAImS,EAAkBhS,OAAQH,IAAK,CACjD,IAAMoS,EAAgBD,EAAkBnS,GAAG2K,MAAM,KACjD,GAA6B,IAAzByH,EAAcjS,OAAc,OAEhC,IAAMuP,EAAe0C,EAAc,GAE/B7D,EAAa,KACb6D,EAAcjS,OAAS,IACzBoO,EAAa0D,EAAaI,QAAQ3C,EAAe,IAAK,KAGxDjQ,KAAK2N,cAAc7K,KAAK,CACtBmN,aAAcA,EACdnB,WAAYA,EACZ2D,SAAUA,IAGZzS,KAAKuO,OACH,KACA,gCAAyBvO,KAAK2N,cAAcjN,QAC5CyK,EAAiBtD,eACjBoI,EAEJ,CACF,EAQA,YAAA4C,IAAA,SAAIL,EAAsBC,GACxB,GAAKA,EAGL,IADA,IAAMC,EAAoBF,EAAatH,MAAM,K,WACpC3K,GACP,IAAMoS,EAAgBD,EAAkBnS,GAAG2K,MAAM,KACjD,GAA6B,IAAzByH,EAAcjS,O,qBAElB,IAAMuP,EAAe0C,EAAc,GAE/B7D,EAAa,KACb6D,EAAcjS,OAAS,IACzBoO,EAAa0D,EAAaI,QAAQ3C,EAAe,IAAK,KAGxD,IAAM6C,EAAc,EAAKnF,cAAcoF,WACrC,SAACC,GACC,OAAAA,EAAI/C,eAAiBA,GACrB+C,EAAIlE,aAAeA,GACnBkE,EAAIP,WAAaA,CAFjB,KAIiB,IAAjBK,IACF,EAAKnF,cAAcsF,OAAOH,EAAa,GACvC,EAAKvE,OACH,MACA,kCAA2B,EAAKZ,cAAcjN,QAC9CyK,EAAiBtD,eACjBoI,G,SAvBG1P,EAAI,EAAGA,EAAImS,EAAkBhS,OAAQH,IAAK,C,QAA1CA,G,qCA2BX,EAOA,YAAA2S,MAAA,SAAMV,GAEJ,IADA,IAAME,EAAoBF,EAAatH,MAAM,K,WACpC3K,GACP,IAAMoS,EAAgBD,EAAkBnS,GAAG2K,MAAM,KACjD,GAA6B,IAAzByH,EAAcjS,O,qBAElB,IAAMuP,EAAe0C,EAAc,GAE/B7D,EAAa,KACb6D,EAAcjS,OAAS,IACzBoO,EAAa0D,EAAaI,QAAQ3C,EAAe,IAAK,KAGxD,EAAKtC,cAAgB,EAAKA,cAAcwF,QACtC,SAACH,GACC,OAAAA,EAAI/C,eAAiBA,GAAgB+C,EAAIlE,aAAeA,CAAxD,G,SAbGvO,EAAI,EAAGA,EAAImS,EAAkBhS,OAAQH,IAAK,C,QAA1CA,G,qCAgBX,EASA,YAAA+N,iBAAA,SAAiB2B,EAAsBnB,EAAqBzN,GAC1DrB,KAAKuO,OACH0B,EACA5O,EACA8J,EAAiBtD,eACjBiH,GAEF,IAAK,IAAIvO,EAAI,EAAGA,EAAIP,KAAK2N,cAAcjN,OAAQH,IAAK,CAClD,IAAM6S,EAAWpT,KAAK2N,cAAcpN,GAC9B8S,EAAiBD,EAASnD,eAAiBA,EAC3CqD,IAA0BF,EAAStE,WACrCyE,GAAmB,EAMrBA,EAJAzE,GACAsE,EAAStE,YACyD,MAAlEsE,EAAStE,WAAW2C,UAAU2B,EAAStE,WAAWpO,OAAS,GAKnD,IAFNoO,EAAW/E,QACTqJ,EAAStE,WAAW2C,UAAU,EAAG2B,EAAStE,WAAWpO,OAAS,IAG/C0S,EAAStE,aAAeA,GAGzCuE,GAAoBC,IAAyBC,IAC/CvT,KAAKuO,OACH,mBACA,+BAAwB6E,EAASnD,cACjC9E,EAAiBtD,eACjBiH,GAEFsE,EAASX,SAAS3D,EAAYzN,GAElC,CACF,EAQA,YAAA8M,gBAAA,SAAgBqF,EAAqBnQ,GAC9BA,IACHA,EAAUrD,KAAK4P,0BAA0B4D,IAG3CxT,KAAKuO,OACH,kBACAiF,EAAc,KAAOnQ,EACrB8H,EAAiBpD,iBAGnB/H,KAAK0N,cAAgB5N,OAAO0T,EAC9B,EAOA,YAAAhF,gBAAA,SAAgBiF,QACEtE,IAAZsE,GAAyBA,IAAYtI,EAAiB3D,cACxDxH,KAAK0N,cAAgB,IAEzB,EAiBA,YAAAgG,sBAAA,SAAsBC,EAAiB7E,GAAvC,WACE,GAAK9O,KAAKgQ,mBAAV,CA6CA,IA0BIgD,EA1BEY,EAAc,qCACdC,EAAc,mCAEdnS,EAAStC,OAAO0U,KAAKH,GAAMI,KAAI,SAAUC,GAC7C,MAAO,CAAClU,OAAOkU,GAAML,EAAKK,GAC5B,IAGAtS,EAAOuS,MAAK,SAAU,EAAS,G,IACzBC,EADiBC,EAAC,KAAQC,GAAJ,KAAK,MAAI,KAEnC,OAAgD,QAA3CF,EAAOG,EAAYF,EAAGC,EAAGR,KAGkB,QAA3CM,EAAOG,EAAYF,EAAGC,EAAGP,IAFrBK,EAMLC,EAAIC,GACE,EAEND,EAAIC,EACC,EAEF,CACT,IAGA1S,EAAO4S,SAAQ,SAACC,IACdvB,EAAM,CAAC,GACHuB,EAAQ,IAAMA,EAAQ,GAC1B,EAAKC,aD18BJ,SAAmB9J,GAGxB,GAAItL,OAAOsL,KAAUA,GAAQnL,MAAMuL,QAAQJ,GAAO,OAAOA,EACzD,IAAM+J,EAAQ,0BACR/S,EAAuB,CAAC,EAE9B,IAAK,IAAMlC,KAAKkL,EACd,GAAI,CAAC,EAAEhL,eAAeC,KAAK+K,EAAMlL,GAAI,CAKnC,IAJA,IAAIoL,EAAMlJ,EACNmJ,EAAO,GACP6J,EAAID,EAAMrK,KAAK5K,GAEZkV,GACL9J,EAAMA,EAAIC,KAAUD,EAAIC,GAAQ6J,EAAE,GAAK,GAAK,CAAC,GAC7C7J,EAAO6J,EAAE,IAAMA,EAAE,GACjBA,EAAID,EAAMrK,KAAK5K,GAGjBoL,EAAIC,GAAQH,EAAKlL,EACnB,CAGF,OAAOkC,EAAO,KAAOA,CACvB,CCk7BwBiT,CAAU3B,GAAMlE,EACpC,GAvEA,MAJE/B,QAAQC,MACN,8EAaJ,SAASqH,EACPF,EACAC,EACAQ,GAEA,IAEIC,EAFEC,EAAUX,EAAEhK,MAAMyK,GAGxB,GAAgB,OAAZE,GAAuD,QAAlCD,EAAUT,EAAEjK,MAAMyK,IAAsB,CAC/D,IAAMG,EAAQlL,OAAOiL,EAAQ,IACvBE,EAAQnL,OAAOgL,EAAQ,IAC7B,OAAIE,IAAUC,EACO,OAAfF,EAAQ,IACF,EACgB,SAAfA,EAAQ,GACE,OAAfD,EAAQ,GACH,GAEC,EAGH,EAGJE,EAAQC,CACjB,CAEA,OAAO,IACT,CAkCF,EAQA,YAAAR,aAAA,SAAab,EAAiB7E,GAC5B,GAAK9O,KAAKgQ,oBAYV,IAAK,IAAMgE,KALXlF,OAA4BK,IAAfL,EAA2BA,EAAa,MAErD9O,KAAKiV,aAAetB,EAGFA,EAChB,GAAI,CAAC,EAAEjU,eAAeC,KAAKgU,EAAMK,IAAQL,EAAKK,GAAM,CAClD,IAAMkB,GAAqBpG,EAAaA,EAAa,IAAM,IAAMkF,EAC3D3S,EAAQsS,EAAKK,GAEnB,GAAI3S,EAAkB,WACpB,IAAK,IAAId,EAAI,EAAGA,EAAIc,EAAkB,WAAEX,OAAQH,IAC9CP,KAAKwU,aACHnT,EAAkB,WAAEd,GACpB2U,EAAoB,IAAM3U,QAGrBc,EAAMpB,cAAgBb,OAC/BY,KAAKwU,aAAanT,EAAO6T,GAEzBlV,KAAKoP,YAAY8F,EAAmB7T,EAExC,OA5BA0L,QAAQC,MACN,oEA6BN,EAOA,YAAAmI,sBAAA,WACE,IAAM9G,EAAMrO,KAAKqO,IAGjB,OAAOhC,KAAK+I,UAAU,CAAE/G,IAAG,GAC7B,EAMA,YAAAgH,sBAAA,WAGE,OAAOhJ,KAAKC,MAAMtM,KAAKmV,wBACzB,EAmBA,YAAAG,mBAAA,SACEC,EACAtP,EACAuP,GAHF,gBAGE,IAAAA,IAAAA,GAAA,GAEA,IAAMC,EAAMzV,KACN0V,EAA6B,CACjChU,OAAQyJ,EAAiB3D,YACzBxE,UAAWhD,KAAKqN,YAAYpJ,SA8CxB0R,EAvzCV,SACEC,EACAC,EACAL,GAEA,IAAIM,EAEJ,YAJA,IAAAN,IAAAA,GAAA,GAIO,W,IAAqB,sDAC1B,IAAMO,EAAU/V,KAOVgW,EAAUR,IAAcM,EAE1BA,GAASG,aAAaH,GAC1BA,EAAUI,YARI,WACZJ,EAAU,KACLN,GAAWI,EAAKjV,MAAMoV,EAASI,EACtC,GAK4BN,GAExBG,GAASJ,EAAKjV,MAAMoV,EAASI,EACnC,CACF,CAiyC6BC,EA3CT,SACdb,EACAtP,EACAqH,GAAkB,qC,8DAIC,O,sBADjBrH,EAASqH,EAASZ,eAAezG,GAChB,GAAMoQ,MAAMd,EAAK,CAChCe,OAAQ,OACRxU,KACEmE,aAAkB1G,MAAQ0G,EAAOsQ,KAAK,KAAOlK,KAAK+I,UAAUnP,GAC9DuQ,QAAS,OACJlJ,EAASrB,YAAU,CACtB,eAAgBqB,EAAS3B,wBAE3B8K,YAAanJ,EAASpB,mBAAqB,eAAYiD,EACvDuH,WAAW,K,cATPtK,EAAW,SAaqB,mBAA7BkB,EAASnB,gBAAhB,MACI,GAAMmB,EAASnB,gBAAgBC,I,cAA/B,W,aACA,SAAMA,EAASuH,Q,OAAf,W,iBAaN,OAhBMjS,EAAM,EAMV0K,EAASK,QAAU,KACnBL,EAASK,QAAU,OACA,IAAlB/K,EAAOA,QACNA,EAAOA,SAAWyJ,EAAiB5D,YAErCkO,EAAInH,iBAAiB,iBAErBmH,EAAInH,iBAAiB,eAGhB,CAAP,EAAO5M,G,OAIP,O,WAFA1B,KAAKuO,OAAO,qBAAsB,EAAGpD,EAAiBpD,iBACtD0N,EAAInH,iBAAiB,eACd,CAAP,EAAOoH,G,0BAIgC,IAAKF,GAGhD,OAFAG,EAAiBJ,EAAKtP,EAAQjG,KAAKsN,UAE5B,CACL5L,OAAQyJ,EAAiB5D,WACzBvE,UAAW,EAEf,EAQA,YAAAsM,eAAA,SAAeqH,EAAclE,GAC3BzS,KAAKqP,SAAW,IAAIuH,EAAgB5W,KAAM2W,EAAMlE,GAChDzS,KAAKuO,OACH,iBACA,YACApD,EAAiBvD,gBACjB,GAEJ,EAKA,YAAA4H,qBAAA,WACMxP,KAAKqP,WACPrP,KAAKqP,SAASwH,SACd7W,KAAKqP,cAAWF,EAChBnP,KAAKuO,OACH,uBACA,UACApD,EAAiBvD,gBACjB,IAGN,EAEQ,YAAAoH,2BAAR,SAAmCxN,EAAQyM,GAYzC,OAXIzM,aAAaqH,GACf7I,KAAK0N,cAAgB5N,OAAO0B,EAAEwB,WAC9BiL,EAAc9C,EAAiB3D,cAE3BhG,aAAa8B,OAAS9B,EAAE6B,QAC1B0J,QAAQC,MAAMxL,EAAE6B,SAEhB0J,QAAQC,MAAMxL,GAEhBxB,KAAKmO,gBAAgBnO,KAAK4N,aAAa3J,UAElCgK,CACT,EACF,EAzuCA,G,IA8uCA,aAYE,WAAY6I,EAAUH,EAAclE,GAV5B,KAAAsE,YAAa,EAWnB/W,KAAKgX,KAAOF,EACZ9W,KAAKqP,SAAW6G,WAAWlW,KAAKiX,QAAQC,KAAKlX,MAAO2W,GACpD3W,KAAKmX,UAAY1E,CACnB,CAoBF,OAfE,YAAAoE,OAAA,WACE7W,KAAK+W,YAAa,EACd/W,KAAKqP,UACP4G,aAAajW,KAAKqP,SAEtB,EAKA,YAAA4H,QAAA,WACOjX,KAAK+W,YACR/W,KAAKgX,KAAKzH,OAAOvP,KAAKmX,UAE1B,EACF,EApCA,GCr4CM,EAAU,CACdC,aAAc,aACdC,cAAe,cACfC,QAAS,wDACTC,YAAa,oDAEbC,WAAY,SACZC,YAAa,eACbC,WAAY,6BAEZC,cAAe,gCACfC,YAAa,aAEbC,SAAU,cAEVC,UAAW,iDACXC,WAAY,+DACZC,QAAS,+BACTC,QACE,+EACFC,UACE,oEACFC,SAAU,wBAEVC,YAAa,QACbC,YAAa,SACbC,YAAa,WACbC,gBAAiB,WACjBC,WAAY,QAoEd,EALc,CACZvQ,KA9DW,OACR,GACA,CACD0P,cAAe,iBA4DjB9R,QAAS,EACTC,UA1DgB,CAChB2S,aAAc,6BACdC,aAAc,6BACdC,cAAe,8BACfC,cAAe,8BACfC,eAAgB,+BAChBC,QAAS,gDAETC,iBACE,2EAEFC,UAAW,8DAEXC,mBACE,sEAEFC,kBACE,4EAEF5B,QACE,2RACFC,YACE,6HACFC,WAAY,SACZC,YAAa,eACbC,WAAY,oCACZC,cAAe,0BACfwB,mBAAoB,0BACpBC,kBACE,yEAEFxB,YAAa,OAEbC,SAAU,cACVwB,cAAe,YAEfC,WAAY,iDACZC,WAAY,4BACZvB,QAAS,qCACTC,QACE,kGACFC,UACE,8EACFC,SACE,6GAEFqB,WAAY,yBACZC,UAAW,8DAEXC,aAAc,OACdrB,YAAa,MACbC,YAAa,MACbE,WAAY,OACZmB,eAAgB,QC7EX,SAASC,EACdvY,EACAwY,EACA7W,EACAqD,EACAyT,GAEA,GAAqB,iBAAVzY,EACT,OAAO,EAET,IAAM0Y,EAAc,IAAI7P,OAAO2P,GACzBG,EAAU3Y,EAAM8I,MAAM4P,GAC5B,GAAID,GAA8B,KAAVzY,EACtB,OAAO,EAET,QAAc8N,IAAV9N,IAAwB2Y,GAA0B,KAAfA,EAAQ,GAC7C,MAAM,IAAI3T,EAAWrD,GAEvB,OAAO,CACT,CAWO,SAASiX,EACd5Y,EACA6Y,EACAlX,EACAqD,GAEA,IAAM8T,EAASD,EAAahP,MAAM,KAElC,IADA7J,GAAgB,IACH8Y,EAAO,GAAI,CACtB,GAAkB,MAAdA,EAAO,IAAc9Y,GAAS8Y,EAAO,GACvC,OAAO,EAEP,MAAM,IAAI9T,EAAWrD,EAEzB,CACE,MAAM,IAAIqD,EAAWrD,EAEzB,CChDO,SAASoX,EACd/Y,EACAwY,EACAC,GAEA,OAAOF,EACLvY,EACAwY,EACA,EAAW/T,UAAUJ,cACrB2U,EACAP,EAEJ,CAQO,SAASQ,EACdjZ,EACA6Y,GAEA,OAAOD,EACL5Y,EACA6Y,EACA,EAAWpU,UAAUH,mBACrB0U,EAEJ,CC/BA,kBAUE,aACE,QAAK,YAAE,K,OAVD,EAAAnU,WAAa,EAAaJ,UAAUoB,4BACpC,EAAAqT,aAAe,IACf,EAAAC,UAAY,GACZ,EAAAC,gBAAkB,IAClB,EAAAC,kBAAoB,I,CAO5B,CAiIF,OA7I0C,OAmBxC,sBAAI,wBAAS,C,IAAb,WACE,OAAO1a,KAAKkG,UACd,E,IAOA,SAAcM,GACZ,MAAM,IAAI6T,EAAyB,EAAWvU,UAAUN,kBAC1D,E,gCAMA,sBAAI,0BAAW,C,IAAf,WACE,OAAOxF,KAAKua,YACd,E,IAMA,SAAgBI,GAEZP,EAAqBO,EAAa,EAAM7U,UAAU4R,aAClD4C,EAAoBK,EAAa,EAAM7U,UAAUuS,eAEjDrY,KAAKua,aAAeI,EAExB,E,gCAMA,sBAAI,uBAAQ,C,IAAZ,WACE,OAAO3a,KAAKwa,SACd,E,IAMA,SAAaI,GACPR,EAAqBQ,EAAU,EAAM9U,UAAUgT,WACjD9Y,KAAKwa,UAAYI,EAErB,E,gCAMA,sBAAI,6BAAc,C,IAAlB,WACE,OAAO5a,KAAKya,eACd,E,IAMA,SAAmBI,GAEfT,EAAqBS,EAAgB,EAAM/U,UAAU4R,aACrD4C,EAAoBO,EAAgB,EAAM/U,UAAUwS,eAEpDtY,KAAKya,gBAAkBI,EAE3B,E,gCAMA,sBAAI,+BAAgB,C,IAApB,WACE,OAAO7a,KAAK0a,iBACd,E,IAMA,SAAqBI,GAEjBV,EAAqBU,EAAkB,EAAMhV,UAAU2R,cACvD6C,EAAoBQ,EAAkB,EAAMhV,UAAU0S,cAEtDxY,KAAK0a,kBAAoBI,EAE7B,E,gCAcA,YAAApU,OAAA,WAME1G,KAAKwD,YAAa,EAClB,IAAM9B,EAAS,CACbiZ,YAAa3a,KAAK2a,YAClBC,SAAU5a,KAAK4a,SACfC,eAAgB7a,KAAK6a,eACrBC,iBAAkB9a,KAAK8a,kBAGzB,cADO9a,KAAKwD,WACL9B,CACT,EACF,EA7IA,CAA0CqC,GCRpCgX,EAAkB,EAAMjV,UACjBkV,EAA8B,CACzC,aAAc,CACZC,OAAQ,iBACRC,IAAK,EACLC,UAAW,GACXC,QAAQ,GAEVC,OAAQ,CACNJ,OAAQF,EAAgB3B,kBACxB8B,IAAK,GACLC,UAAW,MACXC,QAAQ,GAEV,UAAW,CACTH,OAAQF,EAAgBhC,iBACxBmC,IAAK,GACLC,UAAW,MACXC,QAAQ,GAEV,eAAgB,CACdH,OAAQF,EAAgB7B,kBACxBgC,IAAK,EACLC,UAAW,GACXC,QAAQ,GAEVE,SAAU,CACRL,OAAQF,EAAgB5B,mBACxBoC,QAASR,EAAgB5B,mBACzB+B,IAAK,GACLC,UAAW,MACXK,WAAY,MACZJ,QAAQ,GAEVK,YAAa,CACXR,OAAQ,MAAQF,EAAgB5B,mBAChCoC,QACER,EAAgBrD,WAAa,OAASqD,EAAgB5B,mBACxD+B,IAAK,IACLC,UAAW,MACXK,WAAY,MACZJ,QAAQ,GAEVM,WAAY,CACVT,OAAQF,EAAgB5B,mBACxB+B,IAAK,GACLC,UAAW,MACXC,QAAQ,GAEVO,OAAQ,CACNV,OAAQF,EAAgB5B,mBACxB+B,IAAK,EACLC,UAAW,GACXC,QAAQ,GAEVQ,QAAS,CACPX,OAAQF,EAAgBrD,WACxBwD,IAAK,EACLC,UAAW,GACXC,QAAQ,GAEVS,MAAO,CACLZ,OAAQF,EAAgBnC,cACxBsC,IAAK,EACLC,UAAW,GACXC,QAAQ,IAGCU,EAA8B,CACzC,aAAc,CACZZ,IAAK,EACLC,UAAW,GACXC,QAAQ,EACRW,WAAW,EACXd,OAAQ,iBACRe,MAAO,GAETX,OAAQ,CACNH,IAAK,GACLC,UAAW,MACXC,QAAQ,EACRW,WAAW,EACXd,OAAQF,EAAgB3B,mBAE1B,UAAW,CACT8B,IAAK,GACLC,UAAW,MACXC,QAAQ,EACRW,WAAW,EACXd,OAAQF,EAAgB9B,oBAE1B,eAAgB,CACdiC,IAAK,EACLC,UAAW,GACXC,QAAQ,EACRW,WAAW,EACXd,OAAQF,EAAgB7B,mBAE1BoC,SAAU,CACRJ,IAAK,GACLC,UAAW,MACXK,WAAY,MACZJ,QAAQ,EACRW,WAAW,EACXd,OAAQF,EAAgB5B,mBACxBoC,QAASR,EAAgB5B,oBAE3BsC,YAAa,CACXP,IAAK,IACLC,UAAW,MACXK,WAAY,MACZS,WAAY,MACZb,QAAQ,EACRW,WAAW,EACXd,OAAQ,MAAQF,EAAgB5B,mBAChCoC,QACER,EAAgBrD,WAAa,OAASqD,EAAgB5B,oBAE1DuC,WAAY,CACVR,IAAK,GACLC,UAAW,MACXC,QAAQ,EACRW,WAAW,EACXd,OAAQF,EAAgB5B,oBAE1BwC,OAAQ,CACNT,IAAK,EACLC,UAAW,GACXC,QAAQ,EACRW,WAAW,EACXd,OAAQF,EAAgB5B,mBACxB6C,MAAO,GAETJ,QAAS,CACPV,IAAK,EACLC,UAAW,MACXC,QAAQ,EACRW,WAAW,EACXd,OAAQF,EAAgBrD,WACxBsE,MAAO,GAETH,MAAO,CACLX,IAAK,EACLC,UAAW,GACXC,QAAQ,EACRW,WAAW,EACXd,OAAQF,EAAgBnC,cACxBoD,MAAO,ICzIX,cAIE,aACE,SAAK,UAAC,CACJ7V,SAAU,EAAaL,UAAUqB,sBACjCnE,UAAW,EAAW8C,UAAUN,kBAChCa,WAAYgU,KACZ,IACJ,CACF,OAXqC,OAWrC,EAXA,CAAqCzI,GAiBrC,cAaE,aACE,QAAK,YAAE,K,OAbD,EAAAsK,IAAM,GACN,EAAAC,MAAQ,GACR,EAAAC,WAAa,GACb,EAAAC,WAAa,GACb,EAAAC,kBAAoB,GACpB,EAAAC,QAAU,GACV,EAAAC,SAAW,GACX,EAAAC,aAAe,GAOrB,EAAKC,WAAa,IAAI9K,EAAS,CAC7B5O,UAAW,EAAW8C,UAAUN,kBAChCa,WAAYgU,EACZlU,SAAU,EAAaL,UAAUiB,sBAEnC,EAAK4V,kBAAoB,IAAI/K,EAAS,CACpC5O,UAAW,EAAW8C,UAAUN,kBAChCa,WAAYgU,EACZlU,SAAU,EAAaL,UAAUkB,6B,CAErC,CAqTF,OA9U2C,OAiCzC,YAAArD,WAAA,W,QACE,YAAMA,WAAU,WACD,QAAf,EAAA3D,KAAK0c,kBAAU,SAAE/Y,aACK,QAAtB,EAAA3D,KAAK2c,yBAAiB,SAAEhZ,YAC1B,EAMA,sBAAI,iBAAE,C,IAAN,WACE,OAAO3D,KAAKkc,GACd,E,IAMA,SAAOU,GACDxC,EAAqBwC,EAAI,EAAM9W,UAAUsT,qBAC3CpZ,KAAKkc,IAAMU,EAEf,E,gCAMA,sBAAI,mBAAI,C,IAAR,WACE,OAAO5c,KAAKmc,KACd,E,IAMA,SAASU,GACP,GAAI7c,KAAKmS,aAA4B,KAAbnS,KAAKkc,IAC3B,MAAM,IAAI7B,EACR,EAAWvU,UAAUF,4BAGnBwU,EAAqByC,EAAM,EAAM/W,UAAUmS,WAC7CjY,KAAKmc,MAAQU,EAGnB,E,gCAMA,sBAAI,wBAAS,C,IAAb,WACE,OAAO7c,KAAKoc,UACd,E,IAMA,SAAcU,GACZ,GAAI9c,KAAKmS,aAA4B,KAAbnS,KAAKkc,IAC3B,MAAM,IAAI7B,EACR,EAAWvU,UAAUF,4BAGnBwU,EAAqB0C,EAAW,EAAMhX,UAAUwR,WAClDtX,KAAKoc,WAAaU,EAGxB,E,gCAMA,sBAAI,wBAAS,C,IAAb,WACE,OAAO9c,KAAKqc,UACd,E,IAMA,SAAcU,GACZ,GAAI/c,KAAKmS,aAA4B,KAAbnS,KAAKkc,IAC3B,MAAM,IAAI7B,EACR,EAAWvU,UAAUF,4BAGnBwU,EAAqB2C,EAAW,EAAMjX,UAAU4R,cAClD1X,KAAKqc,WAAaU,EAGxB,E,gCAMA,sBAAI,+BAAgB,C,IAApB,WACE,OAAO/c,KAAKsc,iBACd,E,IAOA,SAAqBU,GACnB,GAAIhd,KAAKmS,cAA+B,KAAfnS,KAAKmc,OAA6B,KAAbnc,KAAKkc,KACjD,MAAM,IAAI7B,EACR,EAAWvU,UAAUF,4BAGvB,IAAIqX,EAAQ,GACNC,EAAgBlC,EAAiBhb,KAAK6c,MAE5C,IAAIK,EA4DF,MAAM,IAAI7C,EAAyB,EAAWvU,UAAUJ,eArDxD,IANIwX,aAAa,EAAbA,EAAe/B,WACjB8B,EAAQD,EAAiB9R,MAAMgS,EAAc/B,WAE7C8B,EAAM,GAAKD,IAGTC,EAAMvc,OAAS,GAAKuc,EAAMvc,QAAUwc,EAAchC,KA8CpD,MAAM,IAAIb,EACR,EAAWvU,UAAUZ,qBA5CvB,IAFA,IAAM6U,EAAc,IAAI7P,OAAOgT,EAAcjC,QAEpC1a,EAAI,EAAGA,EAAI0c,EAAMvc,OAAQH,IAChC,GAAI2c,aAAa,EAAbA,EAAe1B,WAAY,CAC7B,IAAM2B,EAASF,EAAM1c,GAAG2K,MAAMgS,EAAc1B,YAE5C,GAAsB,IAAlB2B,EAAOzc,OAgBT,MAAM,IAAI2Z,EACR,EAAWvU,UAAUJ,eAhBvB,IAAKyX,EAAO,GAAGhT,MAAM4P,GACnB,MAAM,IAAIM,EACR,EAAWvU,UAAUJ,eAGvB,IACGwX,EAAc3B,UACd4B,EAAO,GAAGhT,MAAM,IAAID,OAAOgT,EAAc3B,UAE1C,MAAM,IAAIlB,EACR,EAAWvU,UAAUJ,cAS/B,KAAO,CACL,IAAKuX,EAAM1c,GAAG4J,MAAM4P,GAClB,MAAM,IAAIM,EACR,EAAWvU,UAAUJ,eAGvB,GAAiB,KAAbuX,EAAM1c,IAAa2c,EAAc9B,OACnC,IAAK,IAAI/K,EAAI,EAAGA,EAAI9P,EAAG8P,IACrB,GAAI4M,EAAM1c,KAAO0c,EAAM5M,GACrB,MAAM,IAAIgK,EACR,EAAWvU,UAAUJ,cAMjC,CAQJ1F,KAAKsc,kBAAoBU,CAK/B,E,gCAMA,sBAAI,qBAAM,C,IAAV,WACE,OAAOhd,KAAKuc,OACd,E,IAMA,SAAW7a,GACL0Y,EAAqB1Y,EAAQ,EAAMoE,UAAUoS,aAC/ClY,KAAKuc,QAAU7a,EAEnB,E,gCAMA,sBAAI,sBAAO,C,IAAX,WACE,OAAO1B,KAAKwc,QACd,E,IAMA,SAAYY,GACV,GAAIpd,KAAKmS,aAA4B,KAAbnS,KAAKkc,IAC3B,MAAM,IAAI7B,EACR,EAAWvU,UAAUF,4BAGnBwU,EAAqBgD,EAAS,EAAMtX,UAAUyR,eAChDvX,KAAKwc,SAAWY,EAGtB,E,gCAMA,sBAAI,0BAAW,C,IAAf,WACE,OAAOpd,KAAKyc,YACd,E,IAMA,SAAgBY,GACd,GAAIrd,KAAKmS,aAA4B,KAAbnS,KAAKkc,IAC3B,MAAM,IAAI7B,EACR,EAAWvU,UAAUF,4BAIrBwU,EACEiD,EACA,EAAMvX,UAAUiT,kBAChB,KAGF/Y,KAAKyc,aAAeY,EAG1B,E,gCAoBA,YAAA3W,OAAA,WAYE1G,KAAKwD,YAAa,EAClB,IAAM9B,EAAS,CACbkb,GAAI5c,KAAK4c,GACTC,KAAM7c,KAAK6c,KACXH,WAAY1c,KAAK0c,WACjBI,UAAW9c,KAAK8c,UAChBC,UAAW/c,KAAK+c,UAChBC,iBAAkBhd,KAAKgd,iBACvBtb,OAAQ1B,KAAK0B,OACb0b,QAASpd,KAAKod,QACdC,YAAard,KAAKqd,YAClBV,kBAAmB3c,KAAK2c,mBAG1B,cADO3c,KAAKwD,WACL9B,CACT,EACF,EA9UA,CAA2CqC,GAmV3C,cAME,aACE,QAAK,YAAE,K,OAND,EAAAmY,IAAM,G,CAOd,CAsCF,OA9CqD,OAcnD,sBAAI,iBAAE,C,IAAN,WACE,OAAOlc,KAAKkc,GACd,E,IAMA,SAAOU,GACDxC,EAAqBwC,EAAI,EAAM9W,UAAUsT,qBAC3CpZ,KAAKkc,IAAMU,EAEf,E,gCAUA,YAAAlW,OAAA,WAGE1G,KAAKwD,YAAa,EAClB,IAAM9B,EAAS,CACbkb,GAAI5c,KAAK4c,IAGX,cADO5c,KAAKwD,WACL9B,CACT,EACF,EA9CA,CAAqDqC,GAmDrD,cAME,aACE,QAAK,YAAE,K,OAND,EAAAuZ,SAAW,G,CAOnB,CAsCF,OA9C2D,OAczD,sBAAI,sBAAO,C,IAAX,WACE,OAAOtd,KAAKsd,QACd,E,IAMA,SAAYC,GACNnD,EAAqBmD,EAAS,EAAMzX,UAAU8R,eAChD5X,KAAKsd,SAAWC,EAEpB,E,gCAUA,YAAA7W,OAAA,WAGE1G,KAAKwD,YAAa,EAClB,IAAM9B,EAAS,CACb6b,QAASvd,KAAKud,SAGhB,cADOvd,KAAKwD,WACL9B,CACT,EACF,EA9CA,CAA2DqC,GC5ZrDyZ,EAAoB,EAAa3X,QACjC4X,EAAgB,EAAM5X,QACf,EAAsB,EAAWA,QCC9C,cAME,aACE,QAAK,UAAC,CACJgB,eAAgB,EAAaf,UAAUe,eACvCqU,IAAK,GACL3J,iBAAkB,EAAWzL,UAAUN,kBACvCkY,gBAAiB,EAAW5X,UAAUJ,cACtCiY,iBAAkB,EAAW7X,UAAUH,mBACvCiY,aAAc,EAAM9X,UAAU4R,WAC9BrR,WAAYgU,KACZ,K,OAdI,EAAAwD,QAAU,G,CAelB,CAmDF,OAnEuC,OAsBrC,sBAAI,qBAAM,C,IAAV,WACE,OAAO7d,KAAK6d,OACd,E,IAMA,SAAWC,GAEP1D,EAAqB0D,EAAQ,EAAMhY,UAAU4R,aAC7C4C,EAAoBwD,EAAQ,EAAMhY,UAAU4T,gBAE5C1Z,KAAK6d,QAAUC,EAEnB,E,gCAcA,YAAApX,OAAA,WAME1G,KAAKwD,YAAa,EAClB,IAAM9B,EAAS,CACboc,OAAQ9d,KAAK8d,OACbC,IAAK/d,KAAK+d,IACVC,IAAKhe,KAAKge,IACV9C,IAAKlb,KAAKkb,KAGZ,cADOlb,KAAKwD,WACL9B,CACT,EACF,EAnEA,CDIA,YAyBE,WAAYuE,GAUV,QAAK,YAAE,K,OA3BD,EAAAgY,KAAO,GACP,EAAAC,KAAO,GA4Bb,EAAKhY,WAAaD,EAAOY,gBAAkB2W,EAAkB3W,eAC7D,EAAKsX,gBAAiBlY,EAAOmS,aAEzBqF,EAAcrF,YAClB,EAAKgG,KAAOnY,EAAOiV,KAAsB,KAAfjV,EAAOiV,IAAajV,EAAOiV,IAAM,MAC3D,EAAKmD,qBACHpY,EAAOsL,kBAAoB,EAAoBhM,kBACjD,EAAK+Y,oBACHrY,EAAOyX,iBAAmB,EAAoBhY,cAChD,EAAK6Y,qBACHtY,EAAO0X,kBAAoB,EAAoBhY,mBACjD,EAAK6Y,gBAAkBvY,EAAO2X,cAAgBH,EAAc/F,WAC5D,EAAK+G,cAAgBxY,EAAOI,W,CAC9B,CA0IF,OA5L8B,OAwD5B,sBAAI,wBAAS,C,IAAb,WACE,OAAOrG,KAAKkG,UACd,E,IAMA,SAAcM,GACZ,MAAM,IAAIxG,KAAKye,cAAcze,KAAKqe,qBACpC,E,gCAMA,sBAAI,kBAAG,C,IAAP,WACE,OAAOre,KAAKie,IACd,E,IAMA,SAAQF,IAEJnE,EACEmE,EACA/d,KAAKwe,gBACLxe,KAAKse,oBACLte,KAAKye,gBAELze,KAAKme,gBACLlE,EACE8D,EACA/d,KAAKme,cACLne,KAAKue,qBACLve,KAAKye,iBAGTze,KAAKie,KAAOF,EAEhB,E,gCAMA,sBAAI,kBAAG,C,IAAP,WACE,OAAO/d,KAAKke,IACd,E,IAMA,SAAQF,IAEJpE,EACEoE,EACAhe,KAAKwe,gBACLxe,KAAKse,oBACLte,KAAKye,gBAELze,KAAKme,gBACLlE,EACE+D,EACAhe,KAAKme,cACLne,KAAKue,qBACLve,KAAKye,iBAGTze,KAAKke,KAAOF,EAEhB,E,gCAMA,sBAAI,kBAAG,C,IAAP,WACE,OAAOhe,KAAKoe,IACd,E,IAMA,SAAQlD,IAEJtB,EACEsB,EACAlb,KAAKwe,gBACLxe,KAAKse,oBACLte,KAAKye,gBAELze,KAAKme,gBACLlE,EACEiB,EACAlb,KAAKme,cACLne,KAAKue,qBACLve,KAAKye,iBAGTze,KAAKoe,KAAOlD,EAEhB,E,gCAYA,YAAAxU,OAAA,WAKE1G,KAAKwD,YAAa,EAClB,IAAM9B,EAAS,CACbqc,IAAK/d,KAAK+d,IACVC,IAAKhe,KAAKge,IACV9C,IAAKlb,KAAKkb,KAGZ,cADOlb,KAAKwD,WACL9B,CACT,EACF,EA5LA,CAA8BqC,IEF9B,cAIE,aACE,SAAK,UAAC,CACJoC,SAAU,EAAaL,UAAUgB,kBACjC9D,UAAW,EAAW8C,UAAUN,kBAChCa,WAAYgU,KACZ,IACJ,CACF,OAXwC,OAWxC,EAXA,CAAwCzI,GAiBxC,cAIE,aACE,SAAK,UAAC,CACJzL,SAAU,EAAaL,UAAUgB,kBACjC9D,UAAW,EAAW8C,UAAUN,kBAChCa,WAAYgU,KACZ,IACJ,CACF,OAX4C,OAW5C,EAXA,CAA4CzI,GAiB5C,cAUE,WAAY8M,QAAA,IAAAA,IAAAA,GAAA,GACV,QAAK,YAAE,K,OAVD,EAAAC,SAAW,GACX,EAAAC,UAAY,GACZ,EAAAxC,WAAa,GASnB,EAAKuC,SAAW,GAChB,EAAKC,UAAY,GACjB,EAAKxC,WAAa,GAClB,EAAKyC,mBAAqBH,E,CAC5B,CAoGF,OApHuC,OAsBrC,sBAAI,sBAAO,C,IAAX,WACE,OAAO1e,KAAK2e,QACd,E,IAMA,SAAYG,GACV,GAAI9e,KAAKmS,aAAenS,KAAK6e,mBAC3B,MAAM,IAAIxE,EACR,EAAWvU,UAAUN,mBAIrB4U,EAAqB0E,EAAS,EAAMhZ,UAAUoT,mBAAmB,KAEjElZ,KAAK2e,SAAWG,EAGtB,E,gCAMA,sBAAI,uBAAQ,C,IAAZ,WACE,OAAO9e,KAAK4e,SACd,E,IAMA,SAAaG,GACX,GAAI/e,KAAKmS,aAAenS,KAAK6e,mBAC3B,MAAM,IAAIxE,EACR,EAAWvU,UAAUN,mBAGnB4U,EAAqB2E,EAAU,EAAMjZ,UAAU4S,gBACjD1Y,KAAK4e,UAAYG,EAGvB,E,gCAMA,sBAAI,wBAAS,C,IAAb,WACE,OAAO/e,KAAKoc,UACd,E,IAMA,SAAcU,GACZ,GAAI9c,KAAKmS,aAAenS,KAAK6e,mBAC3B,MAAM,IAAIxE,EACR,EAAWvU,UAAUN,mBAGnB4U,EAAqB0C,EAAW,EAAMhX,UAAUwR,WAClDtX,KAAKoc,WAAaU,EAGxB,E,gCAYA,YAAApW,OAAA,WAKE1G,KAAKwD,YAAa,EAClB,IAAM9B,EAAS,CACbod,QAAS9e,KAAK8e,QACdC,SAAU/e,KAAK+e,SACfjC,UAAW9c,KAAK8c,WAGlB,cADO9c,KAAKwD,WACL9B,CACT,EACF,EApHA,CAAuCqC,GCjCvC,cAIE,aACE,SAAK,UAAC,CACJoC,SAAU,EAAaL,UAAUiB,oBACjC/D,UAAW,EAAW8C,UAAUN,kBAChCa,WAAYgU,KACZ,IACJ,CACF,OAXmC,OAWnC,EAXA,CAAmCzI,GAgBnC,eAUE,aACE,QAAK,YAAE,K,OAVD,EAAAsK,IAAM,GACN,EAAA8C,gBAAkB,UAClB,EAAAC,mBAAqB,UACrB,EAAAC,kBAAoB,GACpB,EAAAzC,aAAe,GAOrB,EAAK0C,MAAQ,IAAIC,E,CACnB,CAyKF,OAtLyC,OAoBvC,YAAAzb,WAAA,W,MACE,YAAMA,WAAU,WACN,QAAV,EAAA3D,KAAKmf,aAAK,SAAExb,YACd,EAMA,sBAAI,iBAAE,C,IAAN,WACE,OAAO3D,KAAKkc,GACd,E,IAMA,SAAOU,GACDxC,EAAqBwC,EAAI,EAAM9W,UAAUsT,qBAC3CpZ,KAAKkc,IAAMU,EAEf,E,gCAMA,sBAAI,6BAAc,C,IAAlB,WACE,OAAO5c,KAAKgf,eACd,E,IAMA,SAAmBK,GACjB,GAAIrf,KAAKmS,aAA4B,KAAbnS,KAAKkc,IAC3B,MAAM,IAAI7B,EACR,EAAWvU,UAAUF,4BAGnBwU,EAAqBiF,EAAgB,EAAMvZ,UAAUyT,cACvDvZ,KAAKgf,gBAAkBK,EAG7B,E,gCAMA,sBAAI,gCAAiB,C,IAArB,WACE,OAAOrf,KAAKif,kBACd,E,IAMA,SAAsBK,GACpB,GAAItf,KAAKmS,aAA4B,KAAbnS,KAAKkc,IAC3B,MAAM,IAAI7B,EACR,EAAWvU,UAAUF,4BAGnBwU,EAAqBkF,EAAmB,EAAMxZ,UAAUwT,cAC1DtZ,KAAKif,mBAAqBK,EAGhC,E,gCAMA,sBAAI,+BAAgB,C,IAApB,WACE,OAAOtf,KAAKkf,iBACd,E,IAMA,SAAqBK,GACnB,GAAIvf,KAAKmS,aAA4B,KAAbnS,KAAKkc,IAC3B,MAAM,IAAI7B,EACR,EAAWvU,UAAUF,4BAIrBwU,EAAqBmF,EAAkB,EAAMzZ,UAAU4R,aACvD4C,EAAoBiF,EAAkB,EAAMzZ,UAAU6T,kBAEtD3Z,KAAKkf,kBAAoBK,EAG/B,E,gCAMA,sBAAI,0BAAW,C,IAAf,WACE,OAAOvf,KAAKyc,YACd,E,IAMA,SAAgBY,GACd,GAAIrd,KAAKmS,aAA4B,KAAbnS,KAAKkc,IAC3B,MAAM,IAAI7B,EACR,EAAWvU,UAAUF,4BAIrBwU,EACEiD,EACA,EAAMvX,UAAUiT,kBAChB,KAGF/Y,KAAKyc,aAAeY,EAG1B,E,gCAgBA,YAAA3W,OAAA,WAQE1G,KAAKwD,YAAa,EAClB,IAAM9B,EAAS,CACbkb,GAAI5c,KAAK4c,GACTyC,eAAgBrf,KAAKqf,eACrBC,kBAAmBtf,KAAKsf,kBACxBC,iBAAkBvf,KAAKuf,iBACvBlC,YAAard,KAAKqd,YAClB8B,MAAOnf,KAAKmf,OAGd,cADOnf,KAAKwD,WACL9B,CACT,EACF,EAtLA,CAAyCqC,GCbzC,eAKE,WAAYoO,QAAA,IAAAA,IAAAA,GAAA,GACV,QAAK,YAAE,K,OAiBD,EAAAqN,UAAY,MACZ,EAAAtZ,WAAa,EAAaJ,UAAUa,aACpC,EAAAsY,mBAAqB,UACrB,EAAAQ,sBAAwB,GACxB,EAAAC,QAAU,SACV,EAAAC,OAAS,GACT,EAAAC,MAAQ,GACR,EAAAC,aAAe,GACf,EAAAC,YAAc,GACd,EAAAC,cAAgB,GAChB,EAAAnB,UAAY,GACZ,EAAAoB,kBAAoB,GACpB,EAAAC,MAAQ,SACR,EAAAf,kBAAoB,GACpB,EAAAgB,sBAAwB,GACxB,EAAAC,cAAgB,WAChB,EAAAnB,gBAAkB,UAClB,EAAAoB,cAAgB,GAChB,EAAAC,mBAAqB,sBACrB,EAAAC,YAAc,GAnCpB,EAAKC,mBAAqB,IAAIC,EAC9B,EAAKrB,MAAQ,IAAIC,EACjB,EAAKqB,sBAAwB,IAAIC,EACjC,EAAKC,kBAAoB,IAAIC,EAC7B,EAAKC,aAAe,IAAIC,EACxB,EAAKpE,WAAa,IAAIqE,EAClB5O,GAAa,EAAKxO,a,CACxB,CAwjBF,OAtkByB,OA+CvB,YAAAA,WAAA,W,gBACE,YAAMA,WAAU,WACO,QAAvB,EAAA3D,KAAKugB,0BAAkB,SAAE5c,aACf,QAAV,EAAA3D,KAAKmf,aAAK,SAAExb,aACc,QAA1B,EAAA3D,KAAKygB,6BAAqB,SAAE9c,aACN,QAAtB,EAAA3D,KAAK2gB,yBAAiB,SAAEhd,aACP,QAAjB,EAAA3D,KAAK6gB,oBAAY,SAAEld,aACJ,QAAf,EAAA3D,KAAK0c,kBAAU,SAAE/Y,YACnB,EAOA,sBAAI,uBAAQ,C,IAAZ,WACE,OAAO3D,KAAKwf,SACd,E,IAOA,SAAawB,GACX,MAAM,IAAI3G,EAAyB,EAAWvU,UAAUN,kBAC1D,E,gCAOA,sBAAI,wBAAS,C,IAAb,WACE,OAAOxF,KAAKkG,UACd,E,IAOA,SAAcM,GACZ,MAAM,IAAI6T,EAAyB,EAAWvU,UAAUN,kBAC1D,E,gCAMA,sBAAI,gCAAiB,C,IAArB,WACE,OAAOxF,KAAKif,kBACd,E,IAMA,SAAsBK,GAChBlF,EAAqBkF,EAAmB,EAAMxZ,UAAUwT,cAC1DtZ,KAAKif,mBAAqBK,EAE9B,E,gCAMA,sBAAI,mCAAoB,C,IAAxB,WACE,OAAOtf,KAAKyf,qBACd,E,IAMA,SAAyBwB,GACvB,GAAIjhB,KAAKmS,YACP,MAAM,IAAIkI,EACR,EAAWvU,UAAUN,mBAGvBxF,KAAKyf,sBAAwBwB,CAEjC,E,gCAMA,sBAAI,qBAAM,C,IAAV,WACE,OAAOjhB,KAAK0f,OACd,E,IAMA,SAAWwB,GACT,GAAIlhB,KAAKmS,YACP,MAAM,IAAIkI,EACR,EAAWvU,UAAUN,mBAGvBxF,KAAK0f,QAAUwB,CAEnB,E,gCAMA,sBAAI,oBAAK,C,IAAT,WACE,OAAOlhB,KAAK2f,MACd,E,IAMA,SAAUwB,GACR,GAAInhB,KAAKmS,YACP,MAAM,IAAIkI,EACR,EAAWvU,UAAUN,mBAGvBxF,KAAK2f,OAASwB,CAElB,E,gCAMA,sBAAI,mBAAI,C,IAAR,WACE,IAAKnhB,KAAKwD,WACR,MAAM,IAAI6W,EACR,EAAWvU,UAAUL,oBAGzB,OAAOzF,KAAK4f,KACd,E,IAMA,SAASwB,GACHhH,EAAqBgH,EAAM,EAAMtb,UAAUkS,SAAS,KACtDhY,KAAK4f,MAAQwB,EAEjB,E,gCAMA,sBAAI,0BAAW,C,IAAf,WACE,OAAOphB,KAAK6f,YACd,E,IAMA,SAAgBwB,GACd,GAAIrhB,KAAKmS,YACP,MAAM,IAAIkI,EACR,EAAWvU,UAAUN,mBAGvBxF,KAAK6f,aAAewB,CAExB,E,gCAMA,sBAAI,yBAAU,C,IAAd,WACE,OAAOrhB,KAAK8f,WACd,E,IAMA,SAAewB,GACb,GAAIthB,KAAKmS,YACP,MAAM,IAAIkI,EACR,EAAWvU,UAAUN,mBAGvBxF,KAAK8f,YAAcwB,CAEvB,E,gCAMA,sBAAI,2BAAY,C,IAAhB,WACE,OAAOthB,KAAK+f,aACd,E,IAMA,SAAiBwB,GACf,GAAIvhB,KAAKmS,YACP,MAAM,IAAIkI,EACR,EAAWvU,UAAUN,mBAGvBxF,KAAK+f,cAAgBwB,CAEzB,E,gCAMA,sBAAI,uBAAQ,C,IAAZ,WACE,OAAOvhB,KAAK4e,SACd,E,IAMA,SAAaG,GACP3E,EAAqB2E,EAAU,EAAMjZ,UAAU6S,iBACjD3Y,KAAK4e,UAAYG,EAErB,E,gCAMA,sBAAI,+BAAgB,C,IAApB,WACE,OAAO/e,KAAKggB,iBACd,E,IAMA,SAAqBwB,GACnB,GAAIxhB,KAAKmS,YACP,MAAM,IAAIkI,EACR,EAAWvU,UAAUN,mBAGvBxF,KAAKggB,kBAAoBwB,CAE7B,E,gCAMA,sBAAI,mBAAI,C,IAAR,WACE,OAAOxhB,KAAKigB,KACd,E,IAMA,SAASwB,GACP,GAAIzhB,KAAKmS,YACP,MAAM,IAAIkI,EACR,EAAWvU,UAAUN,mBAGvBxF,KAAKigB,MAAQwB,CAEjB,E,gCAMA,sBAAI,+BAAgB,C,IAApB,WACE,OAAOzhB,KAAKkf,iBACd,E,IAMA,SAAqBK,GAEjBnF,EAAqBmF,EAAkB,EAAMzZ,UAAU4R,aACvD4C,EAAoBiF,EAAkB,EAAMzZ,UAAU6T,kBAEtD3Z,KAAKkf,kBAAoBK,EAE7B,E,gCAMA,sBAAI,mCAAoB,C,IAAxB,WACE,OAAOvf,KAAKkgB,qBACd,E,IAMA,SAAyBwB,GACvB,GAAI1hB,KAAKmS,YACP,MAAM,IAAIkI,EACR,EAAWvU,UAAUN,mBAGvBxF,KAAKkgB,sBAAwBwB,CAEjC,E,gCAMA,sBAAI,2BAAY,C,IAAhB,WACE,IAAK1hB,KAAKwD,WACR,MAAM,IAAI6W,EACR,EAAWvU,UAAUL,oBAGzB,OAAOzF,KAAKmgB,aACd,E,IAMA,SAAiBwB,GACXvH,EAAqBuH,EAAc,EAAM7b,UAAUyR,eACrDvX,KAAKmgB,cAAgBwB,EAEzB,E,gCAMA,sBAAI,6BAAc,C,IAAlB,WACE,OAAO3hB,KAAKgf,eACd,E,IAMA,SAAmBK,GACbjF,EAAqBiF,EAAgB,EAAMvZ,UAAUyT,cACvDvZ,KAAKgf,gBAAkBK,EAE3B,E,gCAMA,sBAAI,2BAAY,C,IAAhB,WACE,OAAOrf,KAAKogB,aACd,E,IAMA,SAAiBwB,GAEbxH,EAAqBwH,EAAc,EAAM9b,UAAU+S,gBAAgB,KAEnE7Y,KAAKogB,cAAgBwB,EAEzB,E,gCAMA,sBAAI,gCAAiB,C,IAArB,WACE,OAAO5hB,KAAKqgB,kBACd,E,IAMA,SAAsBwB,GACpB,GAAI7hB,KAAKmS,YACP,MAAM,IAAIkI,EACR,EAAWvU,UAAUN,mBAGvBxF,KAAKqgB,mBAAqBwB,CAE9B,E,gCAMA,sBAAI,yBAAU,C,IAAd,WACE,OAAO7hB,KAAKsgB,WACd,E,IAMA,SAAewB,GACb,GAAI9hB,KAAKmS,YACP,MAAM,IAAIkI,EACR,EAAWvU,UAAUN,mBAGvBxF,KAAKsgB,YAAcwB,CAEvB,E,gCAOA,YAAAC,oBAAA,WACE,IAAIC,EAAchiB,KAAKmgB,cACjB8B,EAAYjiB,KAAKkiB,WAEnB,MAAOD,IAETD,EAAc,IADE,IAAIne,MAAOC,UAAYme,GACc,MAGvD,OZnVG,SACLE,EACAC,EACAnY,GAEA,IAAMwK,EACqB,iBAAlBxK,EACH,IAAIC,OAAOD,GACXA,EACN,OAAOb,EACLY,EAAqBmY,EAAO1N,GAASzK,EAAqBoY,EAAQ3N,GAEtE,CYuUW,CACLzU,KAAKsgB,YACL0B,EACA,EAAMlc,UAAUyR,YAEpB,EAiCA,YAAA7Q,OAAA,WAyBE1G,KAAKwD,YAAa,EAClB,IAAM9B,EAAS,CACb+e,sBAAuBzgB,KAAKygB,sBAC5BE,kBAAmB3gB,KAAK2gB,kBACxBrB,kBAAmBtf,KAAKsf,kBACxB2B,qBAAsBjhB,KAAKihB,qBAC3BC,OAAQlhB,KAAKkhB,OACbC,MAAOnhB,KAAKmhB,MACZC,KAAMphB,KAAKohB,KACXP,aAAc7gB,KAAK6gB,aACnBQ,YAAarhB,KAAKqhB,YAClBC,WAAYthB,KAAKshB,WACjBC,aAAcvhB,KAAKuhB,aACnBhB,mBAAoBvgB,KAAKugB,mBACzBxB,SAAU/e,KAAK+e,SACfyC,iBAAkBxhB,KAAKwhB,iBACvBC,KAAMzhB,KAAKyhB,KACX/E,WAAY1c,KAAK0c,WACjB6C,iBAAkBvf,KAAKuf,iBACvBmC,qBAAsB1hB,KAAK0hB,qBAC3BvC,MAAOnf,KAAKmf,MACZwC,aAAc3hB,KAAK2hB,aACnBtC,eAAgBrf,KAAKqf,eACrBuC,aAAc5hB,KAAK4hB,aACnBC,kBAAmB7hB,KAAK6hB,mBAG1B,cADO7hB,KAAKwD,WACL9B,CACT,EACF,EAtkBA,CAAyB2gB,GCyXzB,GAzYieAIE,aACE,QAAK,YAAE,K,OACP,EAAKC,IAAM,IAAIC,G,CACjB,CA8BF,OArCyB,OAcvB,YAAA5e,WAAA,W,MACE,YAAMA,WAAU,WACR,QAAR,EAAA3D,KAAKsiB,WAAG,SAAE3e,YACZ,EAUA,YAAA+C,OAAA,WAGE1G,KAAKwD,YAAa,EAClB,IAAM9B,EAAS,CACb4gB,IAAKtiB,KAAKsiB,KAGZ,cADOtiB,KAAKwD,WACL9B,CACT,EACF,EArCA,CAAyBqC,GA2CzB,eAME,aACE,QAAK,YAAE,K,OAND,EAAAye,SAAW,SAOjB,EAAKC,cAAgB,IAAIC,G,CAC3B,CAiDF,OA1DqB,OAgBnB,YAAA/e,WAAA,W,MACE,YAAMA,WAAU,WACE,QAAlB,EAAA3D,KAAKyiB,qBAAa,SAAE9e,YACtB,EAMA,sBAAI,sBAAO,C,IAAX,WACE,OAAO3D,KAAKwiB,QACd,E,IAMA,SAAYG,GACNvI,EAAqBuI,EAAS,EAAM7c,UAAUqS,YAChDnY,KAAKwiB,SAAWG,EAEpB,E,gCAWA,YAAAjc,OAAA,WAGE1G,KAAKwD,YAAa,EAClB,IAAM9B,EAAS,CACbihB,QAAS3iB,KAAK2iB,SAGhB,cADO3iB,KAAKwD,WACL9B,CACT,EACF,EA1DA,CAAqBqC,GAgErB,eAuBE,aACE,QAAK,YAAE,K,OAvBD,EAAA6e,UAAY,UACZ,EAAAC,UAAY,UACpB,EAAAxH,OAAS,WAMP,KAAA3J,eAAiB,SAACoR,GAA4B,gBAChD,EACA,EAAAC,KAAO,WAML,KAAArR,eAAiB,SAACoR,GAA4B,gBAChD,E,CAOA,CAwDF,OAjFiC,OA+B/B,sBAAI,uBAAQ,C,IAAZ,WACE,OAAO9iB,KAAK4iB,SACd,E,IAMA,SAAaA,GACX,MAAM,IAAIvI,EAAyB,EAAWvU,UAAUN,kBAC1D,E,gCAMA,sBAAI,uBAAQ,C,IAAZ,WACE,OAAOxF,KAAK6iB,SACd,E,IAMA,SAAaA,GACX,MAAM,IAAIxI,EAAyB,EAAWvU,UAAUN,kBAC1D,E,gCAYA,YAAAkB,OAAA,WAIE1G,KAAKwD,YAAa,EAClB,IAAM9B,EAAS,CACbshB,SAAUhjB,KAAK6iB,UACfI,SAAUjjB,KAAKijB,UAGjB,cADOjjB,KAAKwD,WACL9B,CACT,EACF,EAjFA,CAAiCqC,G,GC9FjC,YAOE,WAAYuJ,GAAZ,W,OACMA,QACgC6B,IAA9B7B,EAAS4V,mBACX5V,EAAS4V,kBAAmB,IAIhC,IAAK,UAAC,EAAWpd,UAAWwH,IAAS,MAb/B0T,SAAmB,MAezB,EAAK3S,IAAM,IAAI8U,GACf,EAAKC,IAAM,IAAIC,GAGf,EAAKC,WAAa,EAAKC,cACvB,EAAKC,UAAY,EAAKC,UACtB,EAAKC,SAAW,EAAKC,YACrB,EAAKC,SAAW,EAAKC,YACrB,EAAKC,OAAS,EAAKC,UACnB,EAAKC,aAAe,EAAKC,gBACzB,EAAKC,eAAiB,EAAKC,kBAC3B,EAAKC,cAAgB,EAAKC,iB,CAC5B,CAklBF,OA9mB0C,OA8CxC,sBAAI,sBAAO,C,IAAX,WACE,OAAOrkB,KAAKghB,QACd,E,gCAKA,YAAAuC,cAAA,WAEE,OADAvjB,KAAKqO,IAAI1K,aACF3D,KAAK2D,WAAW,aACzB,EAKA,YAAA8f,UAAA,WACE,IAAM/hB,EAAS1B,KAAKyO,UAAU,aAAa,GAE3C,GAAI/M,IAAW,EAAasC,OAAOuD,WACjC,GAA6B,WAAzBvH,KAAKojB,IAAId,IAAIK,QAAsB,CACrC,IAUM2B,EAVwC,CAC5CrB,SAAU,eACVD,SAAU,mBACV3H,OAAQ,iBACR+F,KAAM,eACNmD,QAAS,kBACTC,QAAS,kBACTC,WAAY,sBAGYzkB,KAAKojB,IAAId,IAAIK,SACnC2B,GACFtkB,KAAKsO,iBAAiBgW,EAE1B,MAAWtkB,KAAKsN,SAAS1B,cACvB5L,KAAKsO,iBAAiB,gBAI1B,OAAO5M,CACT,EAMA,YAAAiiB,YAAA,SAAY7U,GACV,OAAO9O,KAAK6O,SAAS,YAAY,EAAMC,EACzC,EAOA,YAAA+U,YAAA,SAAY/U,EAAoBzN,GAC9B,OAAOrB,KAAKiP,SAAS,WAAY,UAAU,EAAMH,EAAYzN,EAC/D,EAOA,YAAA0iB,UAAA,WACE,OAAO/jB,KAAKuP,OAAO,SACrB,EAOA,YAAA0U,gBAAA,WACE,OAAOjkB,KAAKyP,aAAa,eAC3B,EAQA,YAAA0U,kBAAA,SAAkBxU,GAChB,OAAO3P,KAAK0P,eAAe,iBAAkBC,EAC/C,EAQA,YAAA0U,iBAAA,SAAiB1U,GACf,OAAO3P,KAAK6P,cAAc,gBAAiBF,EAC7C,EASA,YAAAP,YAAA,SAAYN,EAAoBzN,GAC9B,OAAOrB,KAAKkR,mBAAmB,YAAY,EAAMpC,EAAYzN,EAC/D,EAUA,YAAA6Q,gBAAA,SACEpD,EACAzN,EACAgQ,GAEA,GAAIrR,KAAKsQ,cAAcxB,EAAY,2BACjC,OAAO,IAAI4V,GAGb,GAAIrT,EAAiB,CACnB,GACErR,KAAKsQ,cACHxB,EACA,wDAGF,OAAO9O,KAAK2kB,6BAA6B7V,EAAYzN,GAChD,GACLrB,KAAKsQ,cACHxB,EACA,iDAGF,OAAO,IAAI8V,CAEf,MAAO,GAAI5kB,KAAKsQ,cAAcxB,EAAY,6BACxC,OAAO,IAAI+V,EAGb,OAAI7kB,KAAKsQ,cAAcxB,EAAY,sCAC1B,IAAIgW,EAEX9kB,KAAKsQ,cAAcxB,EAAY,kCAExB,IAAIgW,GAAkB,GAGxB,IACT,EAEQ,YAAAH,6BAAR,SACE7V,EACAzN,GAEA,IAAM0jB,EAAQjW,EAAW5D,MAAM,KACzB2G,EAAQhI,OAAOkb,EAAM,IACrBC,EAAchlB,KAAKqO,IAAIwS,aAAata,WAAWsL,GAErD,GAAI7R,KAAKkO,gBACP,GAAK8W,EAAYnI,KAEV,CACL7c,KAAKilB,6BAA6BD,EAAa3jB,GAC/C,IAAM6b,EAAgBpB,EAAiBkJ,EAAYnI,MAC/CK,EACFld,KAAKklB,uBAAuBhI,EAAe7b,EAAO2jB,EAAYnI,MAE9D7c,KAAKmO,gBACH,EAAWrI,UAAUZ,oBACrB,4BAA8B8f,EAAYnI,KAGhD,MAZE7c,KAAKmO,gBAAgB,EAAWrI,UAAUF,4BAe9C,MAA2B,MAAvB5F,KAAK0N,cACA,IAAIyX,EAGN,IACT,EAQA,YAAAD,uBAAA,SACEhI,EACA7b,EACA+jB,GAEA,IAAInI,EAAQ,IACRC,aAAa,EAAbA,EAAe/B,WACjB8B,EAAQnd,OAAOuB,GAAO6J,MAAMgS,EAAc/B,WAE1C8B,EAAM,GAAK5b,EAGT4b,EAAMvc,OAAS,GAAKuc,EAAMvc,QAAUwc,EAAchC,IACpDlb,KAAKqlB,0BAA0BD,EAAkBnI,EAAO5b,GAC/C4b,EAAMvc,OAASwc,EAAchC,KACtClb,KAAKmO,gBACH,EAAWrI,UAAUZ,oBACrB,sCAGN,EAOA,YAAA+f,6BAAA,SAA6BD,EAAoC3jB,GAC/D,IAAMikB,EAAoBN,EAAYrI,kBAAkBlW,OACxD,GAAyB,WAArBue,EAAYnI,KACd,IACE,IAAItc,EAAI,EACRA,EAAI+kB,GAA4C,MAAvBtlB,KAAK0N,cAC9BnN,IACA,CACiBykB,EAAYrI,kBAAkBpW,WAAWhG,GAC7Cgd,UAAYlc,GACvBrB,KAAKmO,gBAAgB,EAAWrI,UAAUZ,oBAE9C,CAEJ,EAOA,YAAAyM,wBAAA,SAAwB7C,EAAoBzN,GAC1C,IAAM0jB,EAAQjW,EAAW5D,MAAM,KACzB2G,EAAQhI,OAAOkb,EAAM,IACrBQ,EAAgB1b,OAAOkb,EAAM,IAC7BC,EAAchlB,KAAKqO,IAAIwS,aAAata,WAAWsL,GAE/CyT,EAAoBN,EAAYrI,kBAAkBlW,OACxDzG,KAAKilB,6BAA6BD,EAAa3jB,GAE/C,IAAM6b,EAAgBpB,EAAiBkJ,EAAYnI,WAElB,IAAxBK,EAAclB,OACrBsJ,GAAqBpI,EAAclB,OAEnChc,KAAKklB,uBAAuBhI,EAAe7b,EAAO2jB,EAAYnI,MAGpC,MAAvB7c,KAAK0N,iBACFwP,EAAcnB,YACb/b,KAAKwlB,uBACJR,EAAYrI,kBACZ4I,EACAlkB,KAEkB,MAAvBrB,KAAK0N,eAAmC,KAAVrM,GAIJ,MAAvBrB,KAAK0N,eACP1N,KAAKmO,gBACH,EAAWrI,UAAUZ,oBACrB,8CAKNlF,KAAKmO,gBACH,EAAWrI,UAAUZ,oBACrB,8CAGN,EAQA,YAAA6J,YAAA,SAAYD,GACV,OAAO9O,KAAKoS,mBAAmB,YAAY,EAAMtD,EACnD,EASA,YAAAc,0BAAA,SACE4D,EACAiS,GAEA,IAAIpe,EAAe,GACfC,EAAgB,GAWpB,OARAkM,EAAc1T,OAAO0T,GACjB,EAAa1N,UAAUsB,mBAAmBoM,KAC5CnM,EACE,EAAavB,UAAUsB,mBAAmBoM,GAAanM,aACzDC,EACE,EAAaxB,UAAUsB,mBAAmBoM,GAAalM,eAGpDme,EAASne,EAAgBD,CAClC,EASA,YAAAme,uBAAA,SACEE,EACAC,EACAtkB,GAIA,IAFA,IAAIukB,GAAQ,EACNC,EAAQH,EAAiBjf,OACtBlG,EAAI,EAAGA,EAAIslB,IAAUD,EAAOrlB,IAC/BA,IAAMolB,GAAiBD,EAAiBnf,WAAWhG,KAAOc,IAC5DukB,GAAQ,GAGZ,OAAOA,CACT,EAQA,YAAAP,0BAAA,SACED,EACAnI,EACA5b,GAIA,IAFA,IAAM+K,EAAW0P,EAAiBsJ,GAC5BrL,EAAc,IAAI7P,OAAOkC,EAAS6O,QAC/B1a,EAAI,EAAGA,EAAI0c,EAAMvc,QAAiC,MAAvBV,KAAK0N,cAAuBnN,IAS9D,GAPE6kB,EAAiBjb,MACf,8DAGF8S,EAAM1c,GAAKP,KAAK8lB,8BAA8B7I,EAAM1c,KAGlD6L,aAAQ,EAARA,EAAUoP,WAAY,CACxB,IAAM2B,EAASF,EAAM1c,GAAG2K,MAAMkB,EAASoP,YACvC,GAAsB,IAAlB2B,EAAOzc,QACHsZ,EAAUmD,EAAO,GAAGhT,MAAM4P,KAK3B3N,EAASmP,SACT4B,EAAO,GAAGhT,MAAM,IAAID,OAAOkC,EAASmP,WAJvCvb,KAAKmO,gBAAgB,EAAWrI,UAAUJ,oBAU5C1F,KAAKmO,gBAAgB,EAAWrI,UAAUJ,cAE9C,KAAO,CACL,IAAMsU,EACN,KADMA,EAAUiD,EAAM1c,GAAG4J,MAAM4P,KAEN,KAAV1Y,IACX2Y,GAAgC,eAArBoL,EAEbplB,KAAKmO,gBAAgB,EAAWrI,UAAUJ,oBAE1C,GAAyB,YAArB0f,GAAkCnI,EAAMvc,OAAS,EAC/CmJ,OAAOoT,EAAM,IAAMpT,OAAOoT,EAAM,KAClCjd,KAAKmO,gBAAgB,EAAWrI,UAAUJ,oBAG5C,GAAiB,KAAbuX,EAAM1c,IAAa6L,EAASgP,OAC9B,IAAK,IAAI/K,EAAI,EAAGA,EAAI9P,GAA4B,MAAvBP,KAAK0N,cAAuB2C,IAC/C4M,EAAM1c,KAAO0c,EAAM5M,IACrBrQ,KAAKmO,gBAAgB,EAAWrI,UAAUJ,cAMtD,CAEJ,EAOA,YAAAogB,8BAAA,SAA8BC,GAU5B,IATA,IAAIC,GAAY,EACZC,GAAW,EACXC,GAAW,EAETC,EAAc,IAAIjc,OACtB,kDAEE8P,EAAU+L,EAAK5b,MAAMgc,GACrBC,EAAc,KACXpM,GAAS,CACd,OAAQA,EAAQ,IACd,IAAK,OAEH,GADAoM,EAAcL,EAAK5b,MAAM,EAAMrE,UAAUkT,WACxB,CACf,IAAMqN,EAAOD,EAAY,QACZjX,IAATkX,GAAsBA,EAAK3lB,OAAS,IACjC,GAAe4lB,SAASD,EAAKE,gBAChCvmB,KAAKmO,gBAAgB,EAAWrI,UAAUJ,eAGhD,CACAwgB,GAAW,EACX,MACF,IAAK,eACEA,GAAaF,GAAcC,GACX,SAAfjM,EAAQ,IAAgC,UAAfA,EAAQ,IACnCha,KAAKmO,gBAAgB,EAAWrI,UAAUJ,eAI9CugB,GAAW,EACX,MACF,IAAK,gBACEA,GAAaC,GAAaF,GACV,SAAfhM,EAAQ,IAAgC,UAAfA,EAAQ,IACnCha,KAAKmO,gBAAgB,EAAWrI,UAAUJ,eAI9CsgB,GAAY,EAIhBhM,GADA+L,EAAOA,EAAKtU,UAAUuI,EAAQ,GAAGtZ,SAClByJ,MAAMgc,EACvB,CAEA,OAAOJ,CACT,EAMA,YAAAS,2BAAA,SAA2BC,GAEzBzmB,KAAKqO,IAAMoY,EAAOpY,IAClBrO,KAAKojB,IAAMqD,EAAOrD,GACpB,EAQA,YAAAsD,gBAAA,SAAgBC,GACd,IAAMC,EAAuB5mB,KAAKqV,wBAE9BsR,IACFC,EAAUvY,IAAIyT,WAAa9hB,KAAKqO,IAAI0T,uBAGtC,IAAMrgB,EAAS,GACTmlB,EAAuB,EAAkBD,GAC/C,OAAQ5mB,KAAKsN,SAAS5B,kBACpB,IAAK,YACH,OAAO,EAAkBkb,GAC3B,IAAK,SACH,IAAK,IAAM5U,KAAQ6U,GACb,CAAC,GAAEnnB,eAAeC,KAAKknB,EAAW7U,IACpCtQ,EAAOoB,KAAK,UAAGkP,EAAI,YAAI6U,EAAU7U,KAGrC,OAAOtQ,EAET,QACE,OAAOklB,EAEb,EAQA,YAAAhY,UAAA,SAAU+X,G,UACJA,GACoB,WAAlB3mB,KAAKqO,IAAIoT,MACa,WAApBzhB,KAAKqO,IAAI6S,SACPlhB,KAAKqO,IAAI4S,sBAAwBjhB,KAAKqO,IAAIkR,mBACxCvf,KAAKqO,IAAIkR,kBAAoBvf,KAAKqO,IAAI4S,qBACxCjhB,KAAKqO,IAAIiR,kBAAoB,YAE7Btf,KAAKqO,IAAIiR,kBAAoB,cAG7Btf,KAAKqO,IAAIqT,sBAAwB1hB,KAAKqO,IAAI8Q,MAAMrB,SAC9C9d,KAAKqO,IAAI8Q,MAAMrB,QAAU9d,KAAKqO,IAAIqT,qBACpC1hB,KAAKqO,IAAIgR,eAAiB,SAE1Brf,KAAKqO,IAAIgR,eAAiB,WAOpC,IAAIyH,GAAa,EAEf9mB,KAAKojB,IAAId,IAAIK,WAAuC,QAA3B,EAAsB,QAAtB,EAAiB,QAAjB,EAAA3iB,KAAKiV,oBAAY,eAAEmO,WAAG,eAAEd,WAAG,eAAEK,UAC7B,WAAzB3iB,KAAKojB,IAAId,IAAIK,UAEb3iB,KAAKojB,IAAId,IAAIK,QAAUoE,mBAAmB/mB,KAAKojB,IAAId,IAAIK,SACvDmE,GAAa,GAGf,IAAMna,EAAe3M,KAAK0mB,gBACxBC,GAAmB3mB,KAAKsN,SAASvB,qBASnC,GANI/L,KAAK6N,cAAgB,EAAa7J,OAAO4D,kBAC3CmF,QAAQI,MACN,wBAA0BwZ,EAAkB,MAAQ,MAAQ,OAE9D5Z,QAAQI,MAAMR,IAE0B,iBAA/B3M,KAAKsN,SAAS7B,aAA2B,CAClD,IAAM/J,EAAS1B,KAAKsV,mBAClBtV,KAAKsN,SAAS7B,aACdkB,EACAga,GAaF,OAPIG,QACsB3X,IAAtBzN,EAAOolB,YACe,KAAtBplB,EAAOolB,YAEPE,SAAS,gCAAyBtlB,EAAOolB,WAAU,SAAnDE,GAGGtlB,CACT,CACE,MAAO,CACLA,OAAQ,EAAasC,OAAOuD,WAC5BvE,UAAW,EAGjB,EACF,EA9mBA,CAA0C,GCpB1CikB,OAAOC,aAAe,E","sources":["webpack://scorm-again/./node_modules/tslib/tslib.es6.mjs","webpack://scorm-again/./src/cmi/common/errors.ts","webpack://scorm-again/./src/cmi/common/base_cmi.ts","webpack://scorm-again/./src/constants/error_codes.ts","webpack://scorm-again/./src/cmi/common/array.ts","webpack://scorm-again/./src/constants/api_constants.ts","webpack://scorm-again/./src/exceptions.ts","webpack://scorm-again/./src/utilities.ts","webpack://scorm-again/./src/BaseAPI.ts","webpack://scorm-again/./src/constants/regex.ts","webpack://scorm-again/./src/cmi/common/validation.ts","webpack://scorm-again/./src/cmi/scorm2004/validation.ts","webpack://scorm-again/./src/cmi/scorm2004/learner_preference.ts","webpack://scorm-again/./src/constants/response_constants.ts","webpack://scorm-again/./src/cmi/scorm2004/interactions.ts","webpack://scorm-again/./src/cmi/common/score.ts","webpack://scorm-again/./src/cmi/scorm2004/score.ts","webpack://scorm-again/./src/cmi/scorm2004/comments.ts","webpack://scorm-again/./src/cmi/scorm2004/objectives.ts","webpack://scorm-again/./src/cmi/scorm2004/cmi.ts","webpack://scorm-again/./src/constants/language_constants.ts","webpack://scorm-again/./src/cmi/scorm2004/adl.ts","webpack://scorm-again/./src/Scorm2004API.ts","webpack://scorm-again/./src/exports/scorm2004.js"],"sourcesContent":["/******************************************************************************\nCopyright (c) Microsoft Corporation.\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\nPERFORMANCE OF THIS SOFTWARE.\n***************************************************************************** */\n/* global Reflect, Promise, SuppressedError, Symbol, Iterator */\n\nvar extendStatics = function(d, b) {\n  extendStatics = Object.setPrototypeOf ||\n      ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n      function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n  return extendStatics(d, b);\n};\n\nexport function __extends(d, b) {\n  if (typeof b !== \"function\" && b !== null)\n      throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n  extendStatics(d, b);\n  function __() { this.constructor = d; }\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\n\nexport var __assign = function() {\n  __assign = Object.assign || function __assign(t) {\n      for (var s, i = 1, n = arguments.length; i < n; i++) {\n          s = arguments[i];\n          for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n      return t;\n  }\n  return __assign.apply(this, arguments);\n}\n\nexport function __rest(s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n      t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n      for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n          if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n              t[p[i]] = s[p[i]];\n      }\n  return t;\n}\n\nexport function __decorate(decorators, target, key, desc) {\n  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n}\n\nexport function __param(paramIndex, decorator) {\n  return function (target, key) { decorator(target, key, paramIndex); }\n}\n\nexport function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\n  function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\n  var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\n  var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\n  var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\n  var _, done = false;\n  for (var i = decorators.length - 1; i >= 0; i--) {\n      var context = {};\n      for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\n      for (var p in contextIn.access) context.access[p] = contextIn.access[p];\n      context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\n      var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\n      if (kind === \"accessor\") {\n          if (result === void 0) continue;\n          if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\n          if (_ = accept(result.get)) descriptor.get = _;\n          if (_ = accept(result.set)) descriptor.set = _;\n          if (_ = accept(result.init)) initializers.unshift(_);\n      }\n      else if (_ = accept(result)) {\n          if (kind === \"field\") initializers.unshift(_);\n          else descriptor[key] = _;\n      }\n  }\n  if (target) Object.defineProperty(target, contextIn.name, descriptor);\n  done = true;\n};\n\nexport function __runInitializers(thisArg, initializers, value) {\n  var useValue = arguments.length > 2;\n  for (var i = 0; i < initializers.length; i++) {\n      value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\n  }\n  return useValue ? value : void 0;\n};\n\nexport function __propKey(x) {\n  return typeof x === \"symbol\" ? x : \"\".concat(x);\n};\n\nexport function __setFunctionName(f, name, prefix) {\n  if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\n  return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\n};\n\nexport function __metadata(metadataKey, metadataValue) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\n}\n\nexport function __awaiter(thisArg, _arguments, P, generator) {\n  function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n  return new (P || (P = Promise))(function (resolve, reject) {\n      function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n      function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n      function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n      step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n}\n\nexport function __generator(thisArg, body) {\n  var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === \"function\" ? Iterator : Object).prototype);\n  return g.next = verb(0), g[\"throw\"] = verb(1), g[\"return\"] = verb(2), typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n  function verb(n) { return function (v) { return step([n, v]); }; }\n  function step(op) {\n      if (f) throw new TypeError(\"Generator is already executing.\");\n      while (g && (g = 0, op[0] && (_ = 0)), _) try {\n          if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n          if (y = 0, t) op = [op[0] & 2, t.value];\n          switch (op[0]) {\n              case 0: case 1: t = op; break;\n              case 4: _.label++; return { value: op[1], done: false };\n              case 5: _.label++; y = op[1]; op = [0]; continue;\n              case 7: op = _.ops.pop(); _.trys.pop(); continue;\n              default:\n                  if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                  if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                  if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                  if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                  if (t[2]) _.ops.pop();\n                  _.trys.pop(); continue;\n          }\n          op = body.call(thisArg, _);\n      } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n      if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n  }\n}\n\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n  }\n  Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nexport function __exportStar(m, o) {\n  for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\n}\n\nexport function __values(o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n      next: function () {\n          if (o && i >= o.length) o = void 0;\n          return { value: o && o[i++], done: !o };\n      }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n}\n\nexport function __read(o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o), r, ar = [], e;\n  try {\n      while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  }\n  catch (error) { e = { error: error }; }\n  finally {\n      try {\n          if (r && !r.done && (m = i[\"return\"])) m.call(i);\n      }\n      finally { if (e) throw e.error; }\n  }\n  return ar;\n}\n\n/** @deprecated */\nexport function __spread() {\n  for (var ar = [], i = 0; i < arguments.length; i++)\n      ar = ar.concat(__read(arguments[i]));\n  return ar;\n}\n\n/** @deprecated */\nexport function __spreadArrays() {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n  for (var r = Array(s), k = 0, i = 0; i < il; i++)\n      for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n          r[k] = a[j];\n  return r;\n}\n\nexport function __spreadArray(to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n      if (ar || !(i in from)) {\n          if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n          ar[i] = from[i];\n      }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n}\n\nexport function __await(v) {\n  return this instanceof __await ? (this.v = v, this) : new __await(v);\n}\n\nexport function __asyncGenerator(thisArg, _arguments, generator) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var g = generator.apply(thisArg, _arguments || []), i, q = [];\n  return i = Object.create((typeof AsyncIterator === \"function\" ? AsyncIterator : Object).prototype), verb(\"next\"), verb(\"throw\"), verb(\"return\", awaitReturn), i[Symbol.asyncIterator] = function () { return this; }, i;\n  function awaitReturn(f) { return function (v) { return Promise.resolve(v).then(f, reject); }; }\n  function verb(n, f) { if (g[n]) { i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; if (f) i[n] = f(i[n]); } }\n  function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\n  function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\n  function fulfill(value) { resume(\"next\", value); }\n  function reject(value) { resume(\"throw\", value); }\n  function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\n}\n\nexport function __asyncDelegator(o) {\n  var i, p;\n  return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\n  function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\n}\n\nexport function __asyncValues(o) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var m = o[Symbol.asyncIterator], i;\n  return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n  function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n  function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n}\n\nexport function __makeTemplateObject(cooked, raw) {\n  if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\n  return cooked;\n};\n\nvar __setModuleDefault = Object.create ? (function(o, v) {\n  Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n  o[\"default\"] = v;\n};\n\nexport function __importStar(mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n}\n\nexport function __importDefault(mod) {\n  return (mod && mod.__esModule) ? mod : { default: mod };\n}\n\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n}\n\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n}\n\nexport function __classPrivateFieldIn(state, receiver) {\n  if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\n  return typeof state === \"function\" ? receiver === state : state.has(receiver);\n}\n\nexport function __addDisposableResource(env, value, async) {\n  if (value !== null && value !== void 0) {\n    if (typeof value !== \"object\" && typeof value !== \"function\") throw new TypeError(\"Object expected.\");\n    var dispose, inner;\n    if (async) {\n      if (!Symbol.asyncDispose) throw new TypeError(\"Symbol.asyncDispose is not defined.\");\n      dispose = value[Symbol.asyncDispose];\n    }\n    if (dispose === void 0) {\n      if (!Symbol.dispose) throw new TypeError(\"Symbol.dispose is not defined.\");\n      dispose = value[Symbol.dispose];\n      if (async) inner = dispose;\n    }\n    if (typeof dispose !== \"function\") throw new TypeError(\"Object not disposable.\");\n    if (inner) dispose = function() { try { inner.call(this); } catch (e) { return Promise.reject(e); } };\n    env.stack.push({ value: value, dispose: dispose, async: async });\n  }\n  else if (async) {\n    env.stack.push({ async: true });\n  }\n  return value;\n}\n\nvar _SuppressedError = typeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\n  var e = new Error(message);\n  return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\n};\n\nexport function __disposeResources(env) {\n  function fail(e) {\n    env.error = env.hasError ? new _SuppressedError(e, env.error, \"An error was suppressed during disposal.\") : e;\n    env.hasError = true;\n  }\n  var r, s = 0;\n  function next() {\n    while (r = env.stack.pop()) {\n      try {\n        if (!r.async && s === 1) return s = 0, env.stack.push(r), Promise.resolve().then(next);\n        if (r.dispose) {\n          var result = r.dispose.call(r.value);\n          if (r.async) return s |= 2, Promise.resolve(result).then(next, function(e) { fail(e); return next(); });\n        }\n        else s |= 1;\n      }\n      catch (e) {\n        fail(e);\n      }\n    }\n    if (s === 1) return env.hasError ? Promise.reject(env.error) : Promise.resolve();\n    if (env.hasError) throw env.error;\n  }\n  return next();\n}\n\nexport default {\n  __extends,\n  __assign,\n  __rest,\n  __decorate,\n  __param,\n  __metadata,\n  __awaiter,\n  __generator,\n  __createBinding,\n  __exportStar,\n  __values,\n  __read,\n  __spread,\n  __spreadArrays,\n  __spreadArray,\n  __await,\n  __asyncGenerator,\n  __asyncDelegator,\n  __asyncValues,\n  __makeTemplateObject,\n  __importStar,\n  __importDefault,\n  __classPrivateFieldGet,\n  __classPrivateFieldSet,\n  __classPrivateFieldIn,\n  __addDisposableResource,\n  __disposeResources,\n};\n","export class BaseScormValidationError extends Error {\n  constructor(errorCode: number) {\n    super(errorCode.toString());\n    this._errorCode = errorCode;\n    this.name = \"ScormValidationError\";\n  }\n\n  private readonly _errorCode: number;\n\n  /**\n   * Getter for _errorCode\n   * @return {number}\n   */\n  get errorCode(): number {\n    return this._errorCode;\n  }\n\n  setMessage(message: string) {\n    this.message = message;\n  }\n}\n\nexport class BaseScorm12ValidationError extends BaseScormValidationError {\n  constructor(errorCode: number) {\n    super(errorCode);\n    this.name = \"Scorm12ValidationError\";\n  }\n}\n\nexport class BaseScorm2004ValidationError extends BaseScormValidationError {\n  constructor(errorCode: number) {\n    super(errorCode);\n    this.name = \"Scorm2004ValidationError\";\n  }\n}\n","/**\n * Base class for API cmi objects\n */\nexport abstract class BaseCMI {\n  jsonString? = false;\n  private _initialized = false;\n  private _start_time: number | undefined;\n\n  /**\n   * Getter for _initialized\n   * @return {boolean}\n   */\n  get initialized(): boolean {\n    return this._initialized;\n  }\n\n  /**\n   * Getter for _start_time\n   * @return {number | undefined}\n   */\n  get start_time(): number | undefined {\n    return this._start_time;\n  }\n\n  /**\n   * Called when the API has been initialized after the CMI has been created\n   */\n  initialize(): void {\n    this._initialized = true;\n  }\n\n  /**\n   * Called when the player should override the 'session_time' provided by\n   * the module\n   */\n  setStartTime(): void {\n    this._start_time = new Date().getTime();\n  }\n}\n\n/**\n * Base class for cmi root objects\n */\nexport abstract class BaseRootCMI extends BaseCMI {\n  abstract getCurrentTotalTime(): string;\n}\n","export type ErrorCode = {\n  [key: string]: number;\n};\n\nconst global: ErrorCode = {\n  GENERAL: 101,\n  INITIALIZATION_FAILED: 101,\n  INITIALIZED: 101,\n  TERMINATED: 101,\n  TERMINATION_FAILURE: 101,\n  TERMINATION_BEFORE_INIT: 101,\n  MULTIPLE_TERMINATION: 101,\n  RETRIEVE_BEFORE_INIT: 101,\n  RETRIEVE_AFTER_TERM: 101,\n  STORE_BEFORE_INIT: 101,\n  STORE_AFTER_TERM: 101,\n  COMMIT_BEFORE_INIT: 101,\n  COMMIT_AFTER_TERM: 101,\n  ARGUMENT_ERROR: 101,\n  CHILDREN_ERROR: 101,\n  COUNT_ERROR: 101,\n  GENERAL_GET_FAILURE: 101,\n  GENERAL_SET_FAILURE: 101,\n  GENERAL_COMMIT_FAILURE: 101,\n  UNDEFINED_DATA_MODEL: 101,\n  UNIMPLEMENTED_ELEMENT: 101,\n  VALUE_NOT_INITIALIZED: 101,\n  INVALID_SET_VALUE: 101,\n  READ_ONLY_ELEMENT: 101,\n  WRITE_ONLY_ELEMENT: 101,\n  TYPE_MISMATCH: 101,\n  VALUE_OUT_OF_RANGE: 101,\n  DEPENDENCY_NOT_ESTABLISHED: 101,\n};\n\nconst scorm12: ErrorCode = {\n  ...global,\n  RETRIEVE_BEFORE_INIT: 301,\n  STORE_BEFORE_INIT: 301,\n  COMMIT_BEFORE_INIT: 301,\n  ARGUMENT_ERROR: 201,\n  CHILDREN_ERROR: 202,\n  COUNT_ERROR: 203,\n  UNDEFINED_DATA_MODEL: 401,\n  UNIMPLEMENTED_ELEMENT: 401,\n  VALUE_NOT_INITIALIZED: 301,\n  INVALID_SET_VALUE: 402,\n  READ_ONLY_ELEMENT: 403,\n  WRITE_ONLY_ELEMENT: 404,\n  TYPE_MISMATCH: 405,\n  VALUE_OUT_OF_RANGE: 407,\n  DEPENDENCY_NOT_ESTABLISHED: 408,\n};\n\nconst scorm2004: ErrorCode = {\n  ...global,\n  INITIALIZATION_FAILED: 102,\n  INITIALIZED: 103,\n  TERMINATED: 104,\n  TERMINATION_FAILURE: 111,\n  TERMINATION_BEFORE_INIT: 112,\n  MULTIPLE_TERMINATIONS: 113,\n  RETRIEVE_BEFORE_INIT: 122,\n  RETRIEVE_AFTER_TERM: 123,\n  STORE_BEFORE_INIT: 132,\n  STORE_AFTER_TERM: 133,\n  COMMIT_BEFORE_INIT: 142,\n  COMMIT_AFTER_TERM: 143,\n  ARGUMENT_ERROR: 201,\n  GENERAL_GET_FAILURE: 301,\n  GENERAL_SET_FAILURE: 351,\n  GENERAL_COMMIT_FAILURE: 391,\n  UNDEFINED_DATA_MODEL: 401,\n  UNIMPLEMENTED_ELEMENT: 402,\n  VALUE_NOT_INITIALIZED: 403,\n  READ_ONLY_ELEMENT: 404,\n  WRITE_ONLY_ELEMENT: 405,\n  TYPE_MISMATCH: 406,\n  VALUE_OUT_OF_RANGE: 407,\n  DEPENDENCY_NOT_ESTABLISHED: 408,\n};\n\nconst ErrorCodes = {\n  scorm12,\n  scorm2004,\n};\n\nexport default ErrorCodes;\n","import { BaseScorm12ValidationError, BaseScormValidationError } from \"./errors\";\nimport { BaseCMI } from \"./base_cmi\";\nimport ErrorCodes from \"../../constants/error_codes\";\n\nexport const scorm12_error_codes = ErrorCodes.scorm12;\n\n/**\n * Base class for cmi *.n objects\n */\nexport class CMIArray extends BaseCMI {\n  private readonly _errorCode: number;\n  private readonly _errorClass: typeof BaseScormValidationError;\n  private readonly __children: string;\n  childArray: any[];\n\n  /**\n   * Constructor cmi *.n arrays\n   * @param {object} params\n   */\n  constructor(params: {\n    children: string;\n    errorCode?: number;\n    errorClass?: typeof BaseScormValidationError;\n  }) {\n    super();\n    this.__children = params.children;\n    this._errorCode = params.errorCode || scorm12_error_codes.GENERAL;\n    this._errorClass = params.errorClass || BaseScorm12ValidationError;\n    this.childArray = [];\n  }\n\n  /**\n   * Getter for _children\n   * @return {string}\n   */\n  get _children(): string {\n    return this.__children;\n  }\n\n  /**\n   * Setter for _children. Just throws an error.\n   * @param {string} _children\n   */\n  set _children(_children: string) {\n    throw new this._errorClass(this._errorCode);\n  }\n\n  /**\n   * Getter for _count\n   * @return {number}\n   */\n  get _count(): number {\n    return this.childArray.length;\n  }\n\n  /**\n   * Setter for _count. Just throws an error.\n   * @param {number} _count\n   */\n  set _count(_count: number) {\n    throw new this._errorClass(this._errorCode);\n  }\n\n  /**\n   * toJSON for *.n arrays\n   * @return {object}\n   */\n  toJSON(): object {\n    this.jsonString = true;\n    const result: { [key: string]: any } = {};\n    for (let i = 0; i < this.childArray.length; i++) {\n      result[i + \"\"] = this.childArray[i];\n    }\n    delete this.jsonString;\n    return result;\n  }\n}\n","interface ErrorDescription {\n  basicMessage: string;\n  detailMessage: string;\n}\n\ninterface ErrorDescriptions {\n  [key: string]: ErrorDescription;\n}\n\ninterface ScormConstants {\n  cmi_children: string;\n  core_children: string;\n  score_children: string;\n  comments_children: string;\n  objectives_children: string;\n  correct_responses_children: string;\n  student_data_children: string;\n  student_preference_children: string;\n  interactions_children: string;\n  error_descriptions: ErrorDescriptions;\n}\n\ninterface AiccConstants extends ScormConstants {\n  student_demographics_children: string;\n  tries_children: string;\n  attempt_records_children: string;\n  paths_children: string;\n}\n\ninterface Scorm2004Constants {\n  cmi_children: string;\n  comments_children: string;\n  score_children: string;\n  objectives_children: string;\n  correct_responses_children: string;\n  student_data_children: string;\n  student_preference_children: string;\n  interactions_children: string;\n  error_descriptions: ErrorDescriptions;\n}\n\ninterface GlobalConstants {\n  SCORM_TRUE: string;\n  SCORM_FALSE: string;\n  STATE_NOT_INITIALIZED: number;\n  STATE_INITIALIZED: number;\n  STATE_TERMINATED: number;\n  LOG_LEVEL_DEBUG: number;\n  LOG_LEVEL_INFO: number;\n  LOG_LEVEL_WARNING: number;\n  LOG_LEVEL_ERROR: number;\n  LOG_LEVEL_NONE: number;\n}\n\ninterface APIConstants {\n  global: GlobalConstants;\n  scorm12: ScormConstants;\n  aicc: AiccConstants;\n  scorm2004: Scorm2004Constants;\n}\n\nconst global: GlobalConstants = {\n  SCORM_TRUE: \"true\",\n  SCORM_FALSE: \"false\",\n  STATE_NOT_INITIALIZED: 0,\n  STATE_INITIALIZED: 1,\n  STATE_TERMINATED: 2,\n  LOG_LEVEL_DEBUG: 1,\n  LOG_LEVEL_INFO: 2,\n  LOG_LEVEL_WARNING: 3,\n  LOG_LEVEL_ERROR: 4,\n  LOG_LEVEL_NONE: 5,\n};\n\nconst scorm12: ScormConstants = {\n  // Children lists\n  cmi_children:\n    \"core,suspend_data,launch_data,comments,objectives,student_data,student_preference,interactions\",\n  core_children:\n    \"student_id,student_name,lesson_location,credit,lesson_status,entry,score,total_time,lesson_mode,exit,session_time\",\n  score_children: \"raw,min,max\",\n  comments_children: \"content,location,time\",\n  objectives_children: \"id,score,status\",\n  correct_responses_children: \"pattern\",\n  student_data_children: \"mastery_score,max_time_allowed,time_limit_action\",\n  student_preference_children: \"audio,language,speed,text\",\n  interactions_children:\n    \"id,objectives,time,type,correct_responses,weighting,student_response,result,latency\",\n  error_descriptions: {\n    \"101\": {\n      basicMessage: \"General Exception\",\n      detailMessage:\n        \"No specific error code exists to describe the error. Use LMSGetDiagnostic for more information\",\n    },\n    \"201\": {\n      basicMessage: \"Invalid argument error\",\n      detailMessage:\n        \"Indicates that an argument represents an invalid data model element or is otherwise incorrect.\",\n    },\n    \"202\": {\n      basicMessage: \"Element cannot have children\",\n      detailMessage:\n        'Indicates that LMSGetValue was called with a data model element name that ends in \"_children\" for a data model element that does not support the \"_children\" suffix.',\n    },\n    \"203\": {\n      basicMessage: \"Element not an array - cannot have count\",\n      detailMessage:\n        'Indicates that LMSGetValue was called with a data model element name that ends in \"_count\" for a data model element that does not support the \"_count\" suffix.',\n    },\n    \"301\": {\n      basicMessage: \"Not initialized\",\n      detailMessage:\n        \"Indicates that an API call was made before the call to lmsInitialize.\",\n    },\n    \"401\": {\n      basicMessage: \"Not implemented error\",\n      detailMessage:\n        \"The data model element indicated in a call to LMSGetValue or LMSSetValue is valid, but was not implemented by this LMS. SCORM 1.2 defines a set of data model elements as being optional for an LMS to implement.\",\n    },\n    \"402\": {\n      basicMessage: \"Invalid set value, element is a keyword\",\n      detailMessage:\n        'Indicates that LMSSetValue was called on a data model element that represents a keyword (elements that end in \"_children\" and \"_count\").',\n    },\n    \"403\": {\n      basicMessage: \"Element is read only\",\n      detailMessage:\n        \"LMSSetValue was called with a data model element that can only be read.\",\n    },\n    \"404\": {\n      basicMessage: \"Element is write only\",\n      detailMessage:\n        \"LMSGetValue was called on a data model element that can only be written to.\",\n    },\n    \"405\": {\n      basicMessage: \"Incorrect Data Type\",\n      detailMessage:\n        \"LMSSetValue was called with a value that is not consistent with the data format of the supplied data model element.\",\n    },\n    \"407\": {\n      basicMessage: \"Element Value Out Of Range\",\n      detailMessage:\n        \"The numeric value supplied to a LMSSetValue call is outside of the numeric range allowed for the supplied data model element.\",\n    },\n    \"408\": {\n      basicMessage: \"Data Model Dependency Not Established\",\n      detailMessage:\n        \"Some data model elements cannot be set until another data model element was set. This error condition indicates that the prerequisite element was not set before the dependent element.\",\n    },\n  },\n};\nconst aicc: AiccConstants = {\n  ...scorm12,\n  ...{\n    cmi_children:\n      \"core,suspend_data,launch_data,comments,objectives,student_data,student_preference,interactions,evaluation\",\n    student_preference_children:\n      \"audio,language,lesson_type,speed,text,text_color,text_location,text_size,video,windows\",\n    student_data_children:\n      \"attempt_number,tries,mastery_score,max_time_allowed,time_limit_action\",\n    student_demographics_children:\n      \"city,class,company,country,experience,familiar_name,instructor_name,title,native_language,state,street_address,telephone,years_experience\",\n    tries_children: \"time,status,score\",\n    attempt_records_children: \"score,lesson_status\",\n    paths_children: \"location_id,date,time,status,why_left,time_in_element\",\n  },\n};\nconst scorm2004: Scorm2004Constants = {\n  // Children lists\n  cmi_children:\n    \"_version,comments_from_learner,comments_from_lms,completion_status,credit,entry,exit,interactions,launch_data,learner_id,learner_name,learner_preference,location,max_time_allowed,mode,objectives,progress_measure,scaled_passing_score,score,session_time,success_status,suspend_data,time_limit_action,total_time\",\n  comments_children: \"comment,timestamp,location\",\n  score_children: \"max,raw,scaled,min\",\n  objectives_children:\n    \"progress_measure,completion_status,success_status,description,score,id\",\n  correct_responses_children: \"pattern\",\n  student_data_children: \"mastery_score,max_time_allowed,time_limit_action\",\n  student_preference_children:\n    \"audio_level,audio_captioning,delivery_speed,language\",\n  interactions_children:\n    \"id,type,objectives,timestamp,correct_responses,weighting,learner_response,result,latency,description\",\n  error_descriptions: {\n    \"0\": {\n      basicMessage: \"No Error\",\n      detailMessage: \"No error occurred, the previous API call was successful.\",\n    },\n    \"101\": {\n      basicMessage: \"General Exception\",\n      detailMessage:\n        \"No specific error code exists to describe the error. Use GetDiagnostic for more information.\",\n    },\n    \"102\": {\n      basicMessage: \"General Initialization Failure\",\n      detailMessage: \"Call to Initialize failed for an unknown reason.\",\n    },\n    \"103\": {\n      basicMessage: \"Already Initialized\",\n      detailMessage:\n        \"Call to Initialize failed because Initialize was already called.\",\n    },\n    \"104\": {\n      basicMessage: \"Content Instance Terminated\",\n      detailMessage:\n        \"Call to Initialize failed because Terminate was already called.\",\n    },\n    \"111\": {\n      basicMessage: \"General Termination Failure\",\n      detailMessage: \"Call to Terminate failed for an unknown reason.\",\n    },\n    \"112\": {\n      basicMessage: \"Termination Before Initialization\",\n      detailMessage:\n        \"Call to Terminate failed because it was made before the call to Initialize.\",\n    },\n    \"113\": {\n      basicMessage: \"Termination After Termination\",\n      detailMessage:\n        \"Call to Terminate failed because Terminate was already called.\",\n    },\n    \"122\": {\n      basicMessage: \"Retrieve Data Before Initialization\",\n      detailMessage:\n        \"Call to GetValue failed because it was made before the call to Initialize.\",\n    },\n    \"123\": {\n      basicMessage: \"Retrieve Data After Termination\",\n      detailMessage:\n        \"Call to GetValue failed because it was made after the call to Terminate.\",\n    },\n    \"132\": {\n      basicMessage: \"Store Data Before Initialization\",\n      detailMessage:\n        \"Call to SetValue failed because it was made before the call to Initialize.\",\n    },\n    \"133\": {\n      basicMessage: \"Store Data After Termination\",\n      detailMessage:\n        \"Call to SetValue failed because it was made after the call to Terminate.\",\n    },\n    \"142\": {\n      basicMessage: \"Commit Before Initialization\",\n      detailMessage:\n        \"Call to Commit failed because it was made before the call to Initialize.\",\n    },\n    \"143\": {\n      basicMessage: \"Commit After Termination\",\n      detailMessage:\n        \"Call to Commit failed because it was made after the call to Terminate.\",\n    },\n    \"201\": {\n      basicMessage: \"General Argument Error\",\n      detailMessage:\n        \"An invalid argument was passed to an API method (usually indicates that Initialize, Commit or Terminate did not receive the expected empty string argument.\",\n    },\n    \"301\": {\n      basicMessage: \"General Get Failure\",\n      detailMessage:\n        \"Indicates a failed GetValue call where no other specific error code is applicable. Use GetDiagnostic for more information.\",\n    },\n    \"351\": {\n      basicMessage: \"General Set Failure\",\n      detailMessage:\n        \"Indicates a failed SetValue call where no other specific error code is applicable. Use GetDiagnostic for more information.\",\n    },\n    \"391\": {\n      basicMessage: \"General Commit Failure\",\n      detailMessage:\n        \"Indicates a failed Commit call where no other specific error code is applicable. Use GetDiagnostic for more information.\",\n    },\n    \"401\": {\n      basicMessage: \"Undefined Data Model Element\",\n      detailMessage:\n        \"The data model element name passed to GetValue or SetValue is not a valid SCORM data model element.\",\n    },\n    \"402\": {\n      basicMessage: \"Unimplemented Data Model Element\",\n      detailMessage:\n        \"The data model element indicated in a call to GetValue or SetValue is valid, but was not implemented by this LMS. In SCORM 2004, this error would indicate an LMS that is not fully SCORM conformant.\",\n    },\n    \"403\": {\n      basicMessage: \"Data Model Element Value Not Initialized\",\n      detailMessage:\n        \"Attempt to read a data model element that has not been initialized by the LMS or through a SetValue call. This error condition is often reached during normal execution of a SCO.\",\n    },\n    \"404\": {\n      basicMessage: \"Data Model Element Is Read Only\",\n      detailMessage:\n        \"SetValue was called with a data model element that can only be read.\",\n    },\n    \"405\": {\n      basicMessage: \"Data Model Element Is Write Only\",\n      detailMessage:\n        \"GetValue was called on a data model element that can only be written to.\",\n    },\n    \"406\": {\n      basicMessage: \"Data Model Element Type Mismatch\",\n      detailMessage:\n        \"SetValue was called with a value that is not consistent with the data format of the supplied data model element.\",\n    },\n    \"407\": {\n      basicMessage: \"Data Model Element Value Out Of Range\",\n      detailMessage:\n        \"The numeric value supplied to a SetValue call is outside of the numeric range allowed for the supplied data model element.\",\n    },\n    \"408\": {\n      basicMessage: \"Data Model Dependency Not Established\",\n      detailMessage:\n        \"Some data model elements cannot be set until another data model element was set. This error condition indicates that the prerequisite element was not set before the dependent element.\",\n    },\n  },\n};\nconst APIConstants: APIConstants = {\n  global: global,\n  scorm12: scorm12,\n  aicc: aicc,\n  scorm2004: scorm2004,\n};\nexport default APIConstants;\n","import APIConstants from \"./constants/api_constants\";\n\nimport { BaseScormValidationError } from \"./cmi/common/errors\";\n\nconst scorm12_errors = APIConstants.scorm12.error_descriptions;\nconst aicc_errors = APIConstants.aicc.error_descriptions;\nconst scorm2004_errors = APIConstants.scorm2004.error_descriptions;\n\ntype APIError = {\n  errorCode: number;\n  errorMessage: string;\n  detailedMessage: string;\n};\n\n/**\n * Base Validation Exception\n */\nexport class ValidationError\n  extends BaseScormValidationError\n  implements APIError\n{\n  /**\n   * Constructor to take in an error message and code\n   * @param {number} errorCode\n   * @param {string} errorMessage\n   * @param {string} detailedMessage\n   */\n  constructor(\n    errorCode: number,\n    errorMessage: string,\n    detailedMessage?: string,\n  ) {\n    super(errorCode);\n    this.setMessage(errorMessage);\n    this._errorMessage = errorMessage;\n    if (detailedMessage) {\n      this._detailedMessage = detailedMessage;\n    }\n  }\n\n  private readonly _errorMessage: string;\n  private readonly _detailedMessage: string = \"\";\n\n  /**\n   * Getter for _errorMessage\n   * @return {string}\n   */\n  get errorMessage(): string {\n    return this._errorMessage;\n  }\n\n  /**\n   * Getter for _detailedMessage\n   * @return {string}\n   */\n  get detailedMessage(): string {\n    return this._detailedMessage;\n  }\n}\n\n/**\n * SCORM 1.2 Validation Error\n */\nexport class Scorm12ValidationError extends ValidationError {\n  /**\n   * Constructor to take in an error code\n   * @param {number} errorCode\n   */\n  constructor(errorCode: number) {\n    if ({}.hasOwnProperty.call(scorm12_errors, String(errorCode))) {\n      super(\n        errorCode,\n        scorm12_errors[String(errorCode)].basicMessage,\n        scorm12_errors[String(errorCode)].detailMessage,\n      );\n    } else {\n      super(\n        101,\n        scorm12_errors[\"101\"].basicMessage,\n        scorm12_errors[\"101\"].detailMessage,\n      );\n    }\n  }\n}\n\n/**\n * AICC Validation Error\n */\nexport class AICCValidationError extends ValidationError {\n  /**\n   * Constructor to take in an error code\n   * @param {number} errorCode\n   */\n  constructor(errorCode: number) {\n    if ({}.hasOwnProperty.call(aicc_errors, String(errorCode))) {\n      super(\n        errorCode,\n        aicc_errors[String(errorCode)].basicMessage,\n        aicc_errors[String(errorCode)].detailMessage,\n      );\n    } else {\n      super(\n        101,\n        aicc_errors[\"101\"].basicMessage,\n        aicc_errors[\"101\"].detailMessage,\n      );\n    }\n  }\n}\n\n/**\n * SCORM 2004 Validation Error\n */\nexport class Scorm2004ValidationError extends ValidationError {\n  /**\n   * Constructor to take in an error code\n   * @param {number} errorCode\n   */\n  constructor(errorCode: number) {\n    if ({}.hasOwnProperty.call(scorm2004_errors, String(errorCode))) {\n      super(\n        errorCode,\n        scorm2004_errors[String(errorCode)].basicMessage,\n        scorm2004_errors[String(errorCode)].detailMessage,\n      );\n    } else {\n      super(\n        101,\n        scorm2004_errors[\"101\"].basicMessage,\n        scorm2004_errors[\"101\"].detailMessage,\n      );\n    }\n  }\n}\n","export const SECONDS_PER_SECOND = 1.0;\nexport const SECONDS_PER_MINUTE = 60;\nexport const SECONDS_PER_HOUR = 60 * SECONDS_PER_MINUTE;\nexport const SECONDS_PER_DAY = 24 * SECONDS_PER_HOUR;\n\ntype Designation = {\n  [key: string]: number;\n};\n\ntype StringKeyMap = {\n  [key: string]: any;\n};\n\nconst designations: Designation = {\n  D: SECONDS_PER_DAY,\n  H: SECONDS_PER_HOUR,\n  M: SECONDS_PER_MINUTE,\n  S: SECONDS_PER_SECOND,\n};\n\n/**\n * Converts a Number to a String of HH:MM:SS\n *\n * @param {number} totalSeconds\n * @return {string}\n */\nexport function getSecondsAsHHMMSS(totalSeconds: number | null): string {\n  // SCORM spec does not deal with negative durations, give zero back\n  if (!totalSeconds || totalSeconds <= 0) {\n    return \"00:00:00\";\n  }\n\n  const hours = Math.floor(totalSeconds / SECONDS_PER_HOUR);\n  const dateObj = new Date(totalSeconds * 1000);\n  const minutes = dateObj.getUTCMinutes();\n  // make sure we add any possible decimal value\n  const seconds = dateObj.getSeconds();\n  const ms = totalSeconds % 1.0;\n  let msStr = \"\";\n\n  if (countDecimals(ms) > 0) {\n    if (countDecimals(ms) > 2) {\n      msStr = ms.toFixed(2);\n    } else {\n      msStr = String(ms);\n    }\n\n    msStr = \".\" + msStr.split(\".\")[1];\n  }\n\n  return (\n    (hours + \":\" + minutes + \":\" + seconds).replace(/\\b\\d\\b/g, \"0$&\") + msStr\n  );\n}\n\n/**\n * Calculate the number of seconds from ISO 8601 Duration\n *\n * @param {number} seconds\n * @return {string}\n */\nexport function getSecondsAsISODuration(seconds: number | null): string {\n  // SCORM spec does not deal with negative durations, give zero back\n  if (!seconds || seconds <= 0) {\n    return \"PT0S\";\n  }\n\n  let duration = \"P\";\n  let remainder = seconds;\n  for (const designationsKey in designations) {\n    const current_seconds = designations[designationsKey];\n    let value = Math.floor(remainder / current_seconds);\n    remainder = remainder % current_seconds;\n\n    if (countDecimals(remainder) > 2) {\n      remainder = Number(Number(remainder).toFixed(2));\n    }\n\n    // If we have anything left in the remainder, and we're currently adding\n    // seconds to the duration, go ahead and add the decimal to the seconds\n    if (designationsKey === \"S\" && remainder > 0) {\n      value += remainder;\n    }\n\n    if (value) {\n      if (\n        (duration.indexOf(\"D\") > 0 ||\n          designationsKey === \"H\" ||\n          designationsKey === \"M\" ||\n          designationsKey === \"S\") &&\n        duration.indexOf(\"T\") === -1\n      ) {\n        duration += \"T\";\n      }\n\n      duration += `${value}${designationsKey}`;\n    }\n  }\n  return duration;\n}\n\n/**\n * Calculate the number of seconds from HH:MM:SS.DDDDDD\n *\n * @param {string} timeString\n * @param {RegExp} timeRegex\n * @return {number}\n */\nexport function getTimeAsSeconds(\n  timeString: string | number | boolean | null,\n  timeRegex: RegExp | string,\n): number {\n  if (typeof timeString === \"number\" || typeof timeString === \"boolean\") {\n    timeString = String(timeString);\n  }\n  if (typeof timeRegex === \"string\") {\n    timeRegex = new RegExp(timeRegex);\n  }\n  if (!timeString || !timeString.match(timeRegex)) {\n    return 0;\n  }\n\n  const parts = timeString.split(\":\");\n  const hours = Number(parts[0]);\n  const minutes = Number(parts[1]);\n  const seconds = Number(parts[2]);\n  return hours * 3600 + minutes * 60 + seconds;\n}\n\n/**\n * Calculate the number of seconds from ISO 8601 Duration\n *\n * @param {string} duration\n * @param {RegExp} durationRegex\n * @return {number}\n */\nexport function getDurationAsSeconds(\n  duration: string | null,\n  durationRegex: RegExp | string,\n): number {\n  if (typeof durationRegex === \"string\") {\n    durationRegex = new RegExp(durationRegex);\n  }\n\n  if (!duration || !duration.match(durationRegex)) {\n    return 0;\n  }\n\n  const [, years, _, , days, hours, minutes, seconds] =\n    new RegExp(durationRegex).exec(duration) || [];\n  let result = 0.0;\n  result += Number(seconds) || 0.0;\n  result += Number(minutes) * 60.0 || 0.0;\n  result += Number(hours) * 3600.0 || 0.0;\n  result += Number(days) * (60 * 60 * 24.0) || 0.0;\n  result += Number(years) * (60 * 60 * 24 * 365.0) || 0.0;\n  return result;\n}\n\n/**\n * Adds together two ISO8601 Duration strings\n *\n * @param {string} first\n * @param {string} second\n * @param {RegExp|string} durationRegex\n * @return {string}\n */\nexport function addTwoDurations(\n  first: string,\n  second: string,\n  durationRegex: RegExp | string,\n): string {\n  const regex: RegExp =\n    typeof durationRegex === \"string\"\n      ? new RegExp(durationRegex)\n      : durationRegex;\n  return getSecondsAsISODuration(\n    getDurationAsSeconds(first, regex) + getDurationAsSeconds(second, regex),\n  );\n}\n\n/**\n * Add together two HH:MM:SS.DD strings\n *\n * @param {string} first\n * @param {string} second\n * @param {RegExp} timeRegex\n * @return {string}\n */\nexport function addHHMMSSTimeStrings(\n  first: string,\n  second: string,\n  timeRegex: RegExp | string,\n): string {\n  if (typeof timeRegex === \"string\") {\n    timeRegex = new RegExp(timeRegex);\n  }\n  return getSecondsAsHHMMSS(\n    getTimeAsSeconds(first, timeRegex) + getTimeAsSeconds(second, timeRegex),\n  );\n}\n\n/**\n * Flatten a JSON object down to string paths for each values\n * @param {object} data\n * @return {object}\n */\nexport function flatten(data: StringKeyMap): object {\n  const result: StringKeyMap = {};\n\n  /**\n   * Recurse through the object\n   * @param {*} cur\n   * @param {*} prop\n   */\n  function recurse(cur: any, prop: any) {\n    if (Object(cur) !== cur) {\n      result[prop] = cur;\n    } else if (Array.isArray(cur)) {\n      for (let i = 0, l = cur.length; i < l; i++) {\n        recurse(cur[i], prop + \"[\" + i + \"]\");\n        if (l === 0) result[prop] = [];\n      }\n    } else {\n      let isEmpty = true;\n\n      for (const p in cur) {\n        if ({}.hasOwnProperty.call(cur, p)) {\n          isEmpty = false;\n          recurse(cur[p], prop ? prop + \".\" + p : p);\n        }\n      }\n\n      if (isEmpty && prop) result[prop] = {};\n    }\n  }\n\n  recurse(data, \"\");\n  return result;\n}\n\n/**\n * Un-flatten a flat JSON object\n * @param {object} data\n * @return {object}\n */\nexport function unflatten(data: StringKeyMap): object {\n  \"use strict\";\n\n  if (Object(data) !== data || Array.isArray(data)) return data;\n  const regex = /\\.?([^.[\\]]+)|\\[(\\d+)]/g;\n  const result: StringKeyMap = {};\n\n  for (const p in data) {\n    if ({}.hasOwnProperty.call(data, p)) {\n      let cur = result;\n      let prop = \"\";\n      let m = regex.exec(p);\n\n      while (m) {\n        cur = cur[prop] || (cur[prop] = m[2] ? [] : {});\n        prop = m[2] || m[1];\n        m = regex.exec(p);\n      }\n\n      cur[prop] = data[p];\n    }\n  }\n\n  return result[\"\"] || result;\n}\n\n/**\n * Counts the number of decimal places\n * @param {number} num\n * @return {number}\n */\nexport function countDecimals(num: number): number {\n  if (Math.floor(num) === num || String(num).indexOf(\".\") < 0) return 0;\n  const parts = num.toString().split(\".\")[1];\n  return parts.length || 0;\n}\n","import { CMIArray } from \"./cmi/common/array\";\nimport { ValidationError } from \"./exceptions\";\nimport ErrorCodes, { ErrorCode } from \"./constants/error_codes\";\nimport APIConstants from \"./constants/api_constants\";\nimport { unflatten } from \"./utilities\";\nimport { BaseCMI } from \"./cmi/common/base_cmi\";\n\nconst global_constants = APIConstants.global;\nconst scorm12_error_codes = ErrorCodes.scorm12;\n\n/**\n * Debounce function to delay the execution of a given function.\n *\n * @param func - The function to debounce.\n * @param wait - The number of milliseconds to delay.\n * @param immediate - If `true`, the function will be triggered on the leading edge instead of the trailing.\n * @returns A debounced version of the provided function.\n */\nfunction debounce<T extends (...args: any[]) => void>(\n  func: T,\n  wait: number,\n  immediate = false,\n): (...args: Parameters<T>) => void {\n  let timeout: ReturnType<typeof setTimeout> | null;\n\n  return function (this: any, ...args: Parameters<T>) {\n    const context = this;\n\n    const later = () => {\n      timeout = null;\n      if (!immediate) func.apply(context, args);\n    };\n\n    const callNow = immediate && !timeout;\n\n    if (timeout) clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n\n    if (callNow) func.apply(context, args);\n  };\n}\n\nexport type Settings = {\n  autocommit: boolean;\n  autocommitSeconds: number;\n  asyncCommit: boolean;\n  sendBeaconCommit: boolean;\n  lmsCommitUrl: boolean | string;\n  dataCommitFormat: string;\n  commitRequestDataType: string;\n  autoProgress: boolean;\n  logLevel: number;\n  selfReportSessionTime: boolean;\n  alwaysSendTotalTime: boolean;\n  strict_errors: boolean;\n  xhrHeaders: RefObject;\n  xhrWithCredentials: boolean;\n  responseHandler: (response: Response) => Promise<ResultObject>;\n  requestHandler: (commitObject: any) => any;\n  onLogMessage: (messageLevel: number, logMessage: string) => void;\n  mastery_override?: boolean;\n};\n\nexport type RefObject = {\n  [key: string]: any;\n};\n\nexport type ResultObject = {\n  result: string;\n  errorCode: number;\n  navRequest?: string;\n};\n\nexport const DefaultSettings: Settings = {\n  autocommit: false,\n  autocommitSeconds: 10,\n  asyncCommit: false,\n  sendBeaconCommit: false,\n  lmsCommitUrl: false,\n  dataCommitFormat: \"json\",\n  commitRequestDataType: \"application/json;charset=UTF-8\",\n  autoProgress: false,\n  logLevel: global_constants.LOG_LEVEL_ERROR,\n  selfReportSessionTime: false,\n  alwaysSendTotalTime: false,\n  strict_errors: true,\n  xhrHeaders: {},\n  xhrWithCredentials: false,\n  responseHandler: async function (response: Response): Promise<ResultObject> {\n    if (typeof response !== \"undefined\") {\n      const httpResult = JSON.parse(await response.text());\n      if (\n        httpResult === null ||\n        !{}.hasOwnProperty.call(httpResult, \"result\")\n      ) {\n        if (response.status === 200) {\n          return {\n            result: global_constants.SCORM_TRUE,\n            errorCode: 0,\n          };\n        } else {\n          return {\n            result: global_constants.SCORM_FALSE,\n            errorCode: 101,\n          };\n        }\n      } else {\n        return {\n          result: httpResult.result,\n          errorCode: httpResult.errorCode\n            ? httpResult.errorCode\n            : httpResult.result === global_constants.SCORM_TRUE\n              ? 0\n              : 101,\n        };\n      }\n    }\n    return {\n      result: global_constants.SCORM_FALSE,\n      errorCode: 101,\n    };\n  },\n  requestHandler: function (commitObject) {\n    return commitObject;\n  },\n  onLogMessage: function (messageLevel, logMessage) {\n    switch (messageLevel) {\n      case global_constants.LOG_LEVEL_ERROR:\n        console.error(logMessage);\n        break;\n      case global_constants.LOG_LEVEL_WARNING:\n        console.warn(logMessage);\n        break;\n      case global_constants.LOG_LEVEL_INFO:\n        console.info(logMessage);\n        break;\n      case global_constants.LOG_LEVEL_DEBUG:\n        if (console.debug) {\n          console.debug(logMessage);\n        } else {\n          console.log(logMessage);\n        }\n        break;\n    }\n  },\n};\n\n/**\n * Base API class for AICC, SCORM 1.2, and SCORM 2004. Should be considered\n * abstract, and never initialized on its own.\n */\nexport default abstract class BaseAPI {\n  private _timeout?: ScheduledCommit;\n  private readonly _error_codes: ErrorCode;\n  private _settings: Settings = DefaultSettings;\n\n  /**\n   * Constructor for Base API class. Sets some shared API fields, as well as\n   * sets up options for the API.\n   * @param {ErrorCode} error_codes\n   * @param {Settings} settings\n   */\n  protected constructor(error_codes: ErrorCode, settings?: Settings) {\n    if (new.target === BaseAPI) {\n      throw new TypeError(\"Cannot construct BaseAPI instances directly\");\n    }\n    this.currentState = global_constants.STATE_NOT_INITIALIZED;\n    this.lastErrorCode = \"0\";\n    this.listenerArray = [];\n\n    this._error_codes = error_codes;\n\n    if (settings) {\n      this.settings = settings;\n    }\n    this.apiLogLevel = this.settings.logLevel;\n    this.selfReportSessionTime = this.settings.selfReportSessionTime;\n  }\n\n  public abstract cmi: BaseCMI;\n  public startingData?: RefObject;\n\n  public currentState: number;\n  public lastErrorCode: string;\n  public listenerArray: any[];\n  public apiLogLevel: number;\n  public selfReportSessionTime: boolean;\n\n  /**\n   * Initialize the API\n   * @param {string} callbackName\n   * @param {string} initializeMessage\n   * @param {string} terminationMessage\n   * @return {string}\n   */\n  initialize(\n    callbackName: string,\n    initializeMessage?: string,\n    terminationMessage?: string,\n  ): string {\n    let returnValue = global_constants.SCORM_FALSE;\n\n    if (this.isInitialized()) {\n      this.throwSCORMError(this._error_codes.INITIALIZED, initializeMessage);\n    } else if (this.isTerminated()) {\n      this.throwSCORMError(this._error_codes.TERMINATED, terminationMessage);\n    } else {\n      if (this.selfReportSessionTime) {\n        this.cmi.setStartTime();\n      }\n\n      this.currentState = global_constants.STATE_INITIALIZED;\n      this.lastErrorCode = \"0\";\n      returnValue = global_constants.SCORM_TRUE;\n      this.processListeners(callbackName);\n    }\n\n    this.apiLog(\n      callbackName,\n      \"returned: \" + returnValue,\n      global_constants.LOG_LEVEL_INFO,\n    );\n    this.clearSCORMError(returnValue);\n\n    return returnValue;\n  }\n\n  abstract lmsInitialize(): string;\n\n  abstract lmsFinish(): string;\n\n  abstract lmsGetValue(CMIElement: string): string;\n\n  abstract lmsSetValue(CMIElement: string, value: any): string;\n\n  abstract lmsCommit(): string;\n\n  abstract lmsGetLastError(): string;\n\n  abstract lmsGetErrorString(CMIErrorCode: string | number): string;\n\n  abstract lmsGetDiagnostic(CMIErrorCode: string | number): string;\n\n  /**\n   * Getter for _error_codes\n   * @return {ErrorCode}\n   */\n  get error_codes(): ErrorCode {\n    return this._error_codes;\n  }\n\n  /**\n   * Getter for _settings\n   * @return {Settings}\n   */\n  get settings(): Settings {\n    return this._settings;\n  }\n\n  /**\n   * Setter for _settings\n   * @param {Settings} settings\n   */\n  set settings(settings: Settings) {\n    this._settings = { ...this._settings, ...settings };\n  }\n\n  /**\n   * Terminates the current run of the API\n   * @param {string} callbackName\n   * @param {boolean} checkTerminated\n   * @return {string}\n   */\n  terminate(callbackName: string, checkTerminated: boolean): string {\n    let returnValue = global_constants.SCORM_FALSE;\n\n    if (\n      this.checkState(\n        checkTerminated,\n        this._error_codes.TERMINATION_BEFORE_INIT,\n        this._error_codes.MULTIPLE_TERMINATION,\n      )\n    ) {\n      this.currentState = global_constants.STATE_TERMINATED;\n\n      const result: ResultObject = this.storeData(true);\n      if (typeof result.errorCode !== \"undefined\" && result.errorCode > 0) {\n        this.throwSCORMError(result.errorCode);\n      }\n      returnValue =\n        typeof result !== \"undefined\" && result.result\n          ? result.result\n          : global_constants.SCORM_FALSE;\n\n      if (checkTerminated) this.lastErrorCode = \"0\";\n\n      returnValue = global_constants.SCORM_TRUE;\n      this.processListeners(callbackName);\n    }\n\n    this.apiLog(\n      callbackName,\n      \"returned: \" + returnValue,\n      global_constants.LOG_LEVEL_INFO,\n    );\n    this.clearSCORMError(returnValue);\n\n    return returnValue;\n  }\n\n  /**\n   * Get the value of the CMIElement.\n   *\n   * @param {string} callbackName\n   * @param {boolean} checkTerminated\n   * @param {string} CMIElement\n   * @return {string}\n   */\n  getValue(\n    callbackName: string,\n    checkTerminated: boolean,\n    CMIElement: string,\n  ): string {\n    let returnValue: string = \"\";\n\n    if (\n      this.checkState(\n        checkTerminated,\n        this._error_codes.RETRIEVE_BEFORE_INIT,\n        this._error_codes.RETRIEVE_AFTER_TERM,\n      )\n    ) {\n      if (checkTerminated) this.lastErrorCode = \"0\";\n      try {\n        returnValue = this.getCMIValue(CMIElement);\n      } catch (e) {\n        returnValue = this.handleValueAccessException(e, returnValue);\n      }\n      this.processListeners(callbackName, CMIElement);\n    }\n\n    this.apiLog(\n      callbackName,\n      \": returned: \" + returnValue,\n      global_constants.LOG_LEVEL_INFO,\n      CMIElement,\n    );\n    this.clearSCORMError(returnValue);\n\n    return returnValue;\n  }\n\n  /**\n   * Sets the value of the CMIElement.\n   *\n   * @param {string} callbackName\n   * @param {string} commitCallback\n   * @param {boolean} checkTerminated\n   * @param {string} CMIElement\n   * @param {*} value\n   * @return {string}\n   */\n  setValue(\n    callbackName: string,\n    commitCallback: string,\n    checkTerminated: boolean,\n    CMIElement: string,\n    value: any,\n  ): string {\n    if (value !== undefined) {\n      value = String(value);\n    }\n    let returnValue: string = global_constants.SCORM_FALSE;\n\n    if (\n      this.checkState(\n        checkTerminated,\n        this._error_codes.STORE_BEFORE_INIT,\n        this._error_codes.STORE_AFTER_TERM,\n      )\n    ) {\n      if (checkTerminated) this.lastErrorCode = \"0\";\n      try {\n        returnValue = this.setCMIValue(CMIElement, value);\n      } catch (e) {\n        this.handleValueAccessException(e, returnValue);\n      }\n      this.processListeners(callbackName, CMIElement, value);\n    }\n\n    if (returnValue === undefined) {\n      returnValue = global_constants.SCORM_FALSE;\n    }\n\n    // If we didn't have any errors while setting the data, go ahead and\n    // schedule a commit, if autocommit is turned on\n    if (String(this.lastErrorCode) === \"0\") {\n      if (this.settings.autocommit && !this._timeout) {\n        this.scheduleCommit(\n          this.settings.autocommitSeconds * 1000,\n          commitCallback,\n        );\n      }\n    }\n\n    this.apiLog(\n      callbackName,\n      \": \" + value + \": result: \" + returnValue,\n      global_constants.LOG_LEVEL_INFO,\n      CMIElement,\n    );\n    this.clearSCORMError(returnValue);\n\n    return returnValue;\n  }\n\n  /**\n   * Orders LMS to store all content parameters\n   * @param {string} callbackName\n   * @param {boolean} checkTerminated\n   * @return {string}\n   */\n  commit(callbackName: string, checkTerminated: boolean = false): string {\n    this.clearScheduledCommit();\n\n    let returnValue = global_constants.SCORM_FALSE;\n\n    if (\n      this.checkState(\n        checkTerminated,\n        this._error_codes.COMMIT_BEFORE_INIT,\n        this._error_codes.COMMIT_AFTER_TERM,\n      )\n    ) {\n      const result = this.storeData(false);\n      if (result.errorCode && result.errorCode > 0) {\n        this.throwSCORMError(result.errorCode);\n      }\n      returnValue =\n        typeof result !== \"undefined\" && result.result\n          ? result.result\n          : global_constants.SCORM_FALSE;\n\n      this.apiLog(\n        callbackName,\n        \" Result: \" + returnValue,\n        global_constants.LOG_LEVEL_DEBUG,\n        \"HttpRequest\",\n      );\n\n      if (checkTerminated) this.lastErrorCode = \"0\";\n\n      this.processListeners(callbackName);\n    }\n\n    this.apiLog(\n      callbackName,\n      \"returned: \" + returnValue,\n      global_constants.LOG_LEVEL_INFO,\n    );\n    this.clearSCORMError(returnValue);\n\n    return returnValue;\n  }\n\n  /**\n   * Returns last error code\n   * @param {string} callbackName\n   * @return {string}\n   */\n  getLastError(callbackName: string): string {\n    const returnValue = String(this.lastErrorCode);\n\n    this.processListeners(callbackName);\n\n    this.apiLog(\n      callbackName,\n      \"returned: \" + returnValue,\n      global_constants.LOG_LEVEL_INFO,\n    );\n\n    return returnValue;\n  }\n\n  /**\n   * Returns the errorNumber error description\n   *\n   * @param {string} callbackName\n   * @param {(string|number)} CMIErrorCode\n   * @return {string}\n   */\n  getErrorString(callbackName: string, CMIErrorCode: string | number): string {\n    let returnValue = \"\";\n\n    if (CMIErrorCode !== null && CMIErrorCode !== \"\") {\n      returnValue = this.getLmsErrorMessageDetails(CMIErrorCode);\n      this.processListeners(callbackName);\n    }\n\n    this.apiLog(\n      callbackName,\n      \"returned: \" + returnValue,\n      global_constants.LOG_LEVEL_INFO,\n    );\n\n    return returnValue;\n  }\n\n  /**\n   * Returns a comprehensive description of the errorNumber error.\n   *\n   * @param {string} callbackName\n   * @param {(string|number)} CMIErrorCode\n   * @return {string}\n   */\n  getDiagnostic(callbackName: string, CMIErrorCode: string | number): string {\n    let returnValue = \"\";\n\n    if (CMIErrorCode !== null && CMIErrorCode !== \"\") {\n      returnValue = this.getLmsErrorMessageDetails(CMIErrorCode, true);\n      this.processListeners(callbackName);\n    }\n\n    this.apiLog(\n      callbackName,\n      \"returned: \" + returnValue,\n      global_constants.LOG_LEVEL_INFO,\n    );\n\n    return returnValue;\n  }\n\n  /**\n   * Checks the LMS state and ensures it has been initialized.\n   *\n   * @param {boolean} checkTerminated\n   * @param {number} beforeInitError\n   * @param {number} afterTermError\n   * @return {boolean}\n   */\n  checkState(\n    checkTerminated: boolean,\n    beforeInitError: number,\n    afterTermError: number,\n  ): boolean {\n    if (this.isNotInitialized()) {\n      this.throwSCORMError(beforeInitError);\n      return false;\n    } else if (checkTerminated && this.isTerminated()) {\n      this.throwSCORMError(afterTermError);\n      return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Logging for all SCORM actions\n   *\n   * @param {string} functionName\n   * @param {string} logMessage\n   * @param {number}messageLevel\n   * @param {string} CMIElement\n   */\n  apiLog(\n    functionName: string,\n    logMessage: string,\n    messageLevel: number,\n    CMIElement?: string,\n  ) {\n    logMessage = this.formatMessage(functionName, logMessage, CMIElement);\n\n    if (messageLevel >= this.apiLogLevel) {\n      this.settings.onLogMessage(messageLevel, logMessage);\n    }\n  }\n\n  /**\n   * Formats the SCORM messages for easy reading\n   *\n   * @param {string} functionName\n   * @param {string} message\n   * @param {string} CMIElement\n   * @return {string}\n   */\n  formatMessage(\n    functionName: string,\n    message: string,\n    CMIElement?: string,\n  ): string {\n    const baseLength = 20;\n    let messageString = \"\";\n\n    messageString += functionName;\n\n    let fillChars = baseLength - messageString.length;\n\n    for (let i = 0; i < fillChars; i++) {\n      messageString += \" \";\n    }\n\n    messageString += \": \";\n\n    if (CMIElement) {\n      const CMIElementBaseLength = 70;\n\n      messageString += CMIElement;\n\n      fillChars = CMIElementBaseLength - messageString.length;\n\n      for (let j = 0; j < fillChars; j++) {\n        messageString += \" \";\n      }\n    }\n\n    if (message) {\n      messageString += message;\n    }\n\n    return messageString;\n  }\n\n  /**\n   * Checks to see if {str} contains {tester}\n   *\n   * @param {string} str String to check against\n   * @param {string} tester String to check for\n   * @return {boolean}\n   */\n  stringMatches(str: string, tester: string): boolean {\n    return str?.match(tester) !== null;\n  }\n\n  /**\n   * Check to see if the specific object has the given property\n   * @param {RefObject} refObject\n   * @param {string} attribute\n   * @return {boolean}\n   * @private\n   */\n  private _checkObjectHasProperty(\n    refObject: RefObject,\n    attribute: string,\n  ): boolean {\n    return (\n      Object.hasOwnProperty.call(refObject, attribute) ||\n      Object.getOwnPropertyDescriptor(\n        Object.getPrototypeOf(refObject),\n        attribute,\n      ) != null ||\n      attribute in refObject\n    );\n  }\n\n  /**\n   * Returns the message that corresponds to errorNumber\n   * APIs that inherit BaseAPI should override this function\n   *\n   * @param {(string|number)} _errorNumber\n   * @param {boolean} _detail\n   * @return {string}\n   * @abstract\n   */\n  getLmsErrorMessageDetails(\n    _errorNumber: string | number,\n    _detail: boolean = false,\n  ): string {\n    throw new Error(\n      \"The getLmsErrorMessageDetails method has not been implemented\",\n    );\n  }\n\n  /**\n   * Gets the value for the specific element.\n   * APIs that inherit BaseAPI should override this function\n   *\n   * @param {string} _CMIElement\n   * @return {string}\n   * @abstract\n   */\n  getCMIValue(_CMIElement: string): string {\n    throw new Error(\"The getCMIValue method has not been implemented\");\n  }\n\n  /**\n   * Sets the value for the specific element.\n   * APIs that inherit BaseAPI should override this function\n   *\n   * @param {string} _CMIElement\n   * @param {any} _value\n   * @return {string}\n   * @abstract\n   */\n  setCMIValue(_CMIElement: string, _value: any): string {\n    throw new Error(\"The setCMIValue method has not been implemented\");\n  }\n\n  /**\n   * Shared API method to set a valid for a given element.\n   *\n   * @param {string} methodName\n   * @param {boolean} scorm2004\n   * @param {string} CMIElement\n   * @param {any} value\n   * @return {string}\n   */\n  _commonSetCMIValue(\n    methodName: string,\n    scorm2004: boolean,\n    CMIElement: string,\n    value: any,\n  ): string {\n    if (!CMIElement || CMIElement === \"\") {\n      return global_constants.SCORM_FALSE;\n    }\n\n    const structure = CMIElement.split(\".\");\n    let refObject: RefObject = this;\n    let returnValue = global_constants.SCORM_FALSE;\n    let foundFirstIndex = false;\n\n    const invalidErrorMessage = `The data model element passed to ${methodName} (${CMIElement}) is not a valid SCORM data model element.`;\n    const invalidErrorCode = scorm2004\n      ? this._error_codes.UNDEFINED_DATA_MODEL\n      : this._error_codes.GENERAL;\n\n    for (let idx = 0; idx < structure.length; idx++) {\n      const attribute = structure[idx];\n\n      if (idx === structure.length - 1) {\n        if (\n          scorm2004 &&\n          attribute.substring(0, 8) === \"{target=\" &&\n          typeof refObject._isTargetValid == \"function\"\n        ) {\n          this.throwSCORMError(this._error_codes.READ_ONLY_ELEMENT);\n        } else if (!this._checkObjectHasProperty(refObject, attribute)) {\n          this.throwSCORMError(invalidErrorCode, invalidErrorMessage);\n        } else {\n          if (\n            this.isInitialized() &&\n            this.stringMatches(CMIElement, \"\\\\.correct_responses\\\\.\\\\d+\")\n          ) {\n            this.validateCorrectResponse(CMIElement, value);\n          }\n\n          if (!scorm2004 || this.lastErrorCode === \"0\") {\n            refObject[attribute] = value;\n            returnValue = global_constants.SCORM_TRUE;\n          }\n        }\n      } else {\n        refObject = refObject[attribute];\n        if (!refObject) {\n          this.throwSCORMError(invalidErrorCode, invalidErrorMessage);\n          break;\n        }\n\n        if (refObject instanceof CMIArray) {\n          const index = parseInt(structure[idx + 1], 10);\n\n          // SCO is trying to set an item on an array\n          if (!isNaN(index)) {\n            const item = refObject.childArray[index];\n\n            if (item) {\n              refObject = item;\n              foundFirstIndex = true;\n            } else {\n              const newChild = this.getChildElement(\n                CMIElement,\n                value,\n                foundFirstIndex,\n              );\n              foundFirstIndex = true;\n\n              if (!newChild) {\n                this.throwSCORMError(invalidErrorCode, invalidErrorMessage);\n              } else {\n                if (refObject.initialized) newChild.initialize();\n\n                refObject.childArray.push(newChild);\n                refObject = newChild;\n              }\n            }\n\n            // Have to update idx value to skip the array position\n            idx++;\n          }\n        }\n      }\n    }\n\n    if (returnValue === global_constants.SCORM_FALSE) {\n      this.apiLog(\n        methodName,\n        `There was an error setting the value for: ${CMIElement}, value of: ${value}`,\n        global_constants.LOG_LEVEL_WARNING,\n      );\n    }\n\n    return returnValue;\n  }\n\n  /**\n   * Abstract method for validating that a response is correct.\n   *\n   * @param {string} _CMIElement\n   * @param {any} _value\n   */\n  abstract validateCorrectResponse(_CMIElement: string, _value: any): void;\n\n  /**\n   * Gets or builds a new child element to add to the array.\n   * APIs that inherit BaseAPI should override this method.\n   *\n   * @param {string} _CMIElement - unused\n   * @param {*} _value - unused\n   * @param {boolean} _foundFirstIndex - unused\n   * @return {BaseCMI|null}\n   * @abstract\n   */\n  abstract getChildElement(\n    _CMIElement: string,\n    _value: any,\n    _foundFirstIndex: boolean,\n  ): BaseCMI | null;\n\n  /**\n   * Gets a value from the CMI Object\n   *\n   * @param {string} methodName\n   * @param {boolean} scorm2004\n   * @param {string} CMIElement\n   * @return {any}\n   */\n  _commonGetCMIValue(\n    methodName: string,\n    scorm2004: boolean,\n    CMIElement: string,\n  ): any {\n    if (!CMIElement || CMIElement === \"\") {\n      return \"\";\n    }\n\n    const structure = CMIElement.split(\".\");\n    let refObject: RefObject = this;\n    let attribute = null;\n\n    const uninitializedErrorMessage = `The data model element passed to ${methodName} (${CMIElement}) has not been initialized.`;\n    const invalidErrorMessage = `The data model element passed to ${methodName} (${CMIElement}) is not a valid SCORM data model element.`;\n    const invalidErrorCode = scorm2004\n      ? this._error_codes.UNDEFINED_DATA_MODEL\n      : this._error_codes.GENERAL;\n\n    for (let idx = 0; idx < structure.length; idx++) {\n      attribute = structure[idx];\n\n      if (!scorm2004) {\n        if (idx === structure.length - 1) {\n          if (!this._checkObjectHasProperty(refObject, attribute)) {\n            this.throwSCORMError(invalidErrorCode, invalidErrorMessage);\n            return;\n          }\n        }\n      } else {\n        if (\n          String(attribute).substring(0, 8) === \"{target=\" &&\n          typeof refObject._isTargetValid == \"function\"\n        ) {\n          const target = String(attribute).substring(\n            8,\n            String(attribute).length - 9,\n          );\n          return refObject._isTargetValid(target);\n        } else if (!this._checkObjectHasProperty(refObject, attribute)) {\n          this.throwSCORMError(invalidErrorCode, invalidErrorMessage);\n          return;\n        }\n      }\n\n      refObject = refObject[attribute];\n      if (refObject === undefined) {\n        this.throwSCORMError(invalidErrorCode, invalidErrorMessage);\n        break;\n      }\n\n      if (refObject instanceof CMIArray) {\n        const index = parseInt(structure[idx + 1], 10);\n\n        // SCO is trying to set an item on an array\n        if (!isNaN(index)) {\n          const item = refObject.childArray[index];\n\n          if (item) {\n            refObject = item;\n          } else {\n            this.throwSCORMError(\n              this._error_codes.VALUE_NOT_INITIALIZED,\n              uninitializedErrorMessage,\n            );\n            break;\n          }\n\n          // Have to update idx value to skip the array position\n          idx++;\n        }\n      }\n    }\n\n    if (refObject === null || refObject === undefined) {\n      if (!scorm2004) {\n        if (attribute === \"_children\") {\n          this.throwSCORMError(scorm12_error_codes.CHILDREN_ERROR);\n        } else if (attribute === \"_count\") {\n          this.throwSCORMError(scorm12_error_codes.COUNT_ERROR);\n        }\n      }\n    } else {\n      return refObject;\n    }\n  }\n\n  /**\n   * Returns true if the API's current state is STATE_INITIALIZED\n   *\n   * @return {boolean}\n   */\n  isInitialized(): boolean {\n    return this.currentState === global_constants.STATE_INITIALIZED;\n  }\n\n  /**\n   * Returns true if the API's current state is STATE_NOT_INITIALIZED\n   *\n   * @return {boolean}\n   */\n  isNotInitialized(): boolean {\n    return this.currentState === global_constants.STATE_NOT_INITIALIZED;\n  }\n\n  /**\n   * Returns true if the API's current state is STATE_TERMINATED\n   *\n   * @return {boolean}\n   */\n  isTerminated(): boolean {\n    return this.currentState === global_constants.STATE_TERMINATED;\n  }\n\n  /**\n   * Provides a mechanism for attaching to a specific SCORM event\n   *\n   * @param {string} listenerName\n   * @param {function} callback\n   */\n  on(listenerName: string, callback: Function) {\n    if (!callback) return;\n\n    const listenerFunctions = listenerName.split(\" \");\n    for (let i = 0; i < listenerFunctions.length; i++) {\n      const listenerSplit = listenerFunctions[i].split(\".\");\n      if (listenerSplit.length === 0) return;\n\n      const functionName = listenerSplit[0];\n\n      let CMIElement = null;\n      if (listenerSplit.length > 1) {\n        CMIElement = listenerName.replace(functionName + \".\", \"\");\n      }\n\n      this.listenerArray.push({\n        functionName: functionName,\n        CMIElement: CMIElement,\n        callback: callback,\n      });\n\n      this.apiLog(\n        \"on\",\n        `Added event listener: ${this.listenerArray.length}`,\n        global_constants.LOG_LEVEL_INFO,\n        functionName,\n      );\n    }\n  }\n\n  /**\n   * Provides a mechanism for detaching a specific SCORM event listener\n   *\n   * @param {string} listenerName\n   * @param {function} callback\n   */\n  off(listenerName: string, callback: Function) {\n    if (!callback) return;\n\n    const listenerFunctions = listenerName.split(\" \");\n    for (let i = 0; i < listenerFunctions.length; i++) {\n      const listenerSplit = listenerFunctions[i].split(\".\");\n      if (listenerSplit.length === 0) return;\n\n      const functionName = listenerSplit[0];\n\n      let CMIElement = null;\n      if (listenerSplit.length > 1) {\n        CMIElement = listenerName.replace(functionName + \".\", \"\");\n      }\n\n      const removeIndex = this.listenerArray.findIndex(\n        (obj) =>\n          obj.functionName === functionName &&\n          obj.CMIElement === CMIElement &&\n          obj.callback === callback,\n      );\n      if (removeIndex !== -1) {\n        this.listenerArray.splice(removeIndex, 1);\n        this.apiLog(\n          \"off\",\n          `Removed event listener: ${this.listenerArray.length}`,\n          global_constants.LOG_LEVEL_INFO,\n          functionName,\n        );\n      }\n    }\n  }\n\n  /**\n   * Provides a mechanism for clearing all listeners from a specific SCORM event\n   *\n   * @param {string} listenerName\n   */\n  clear(listenerName: string) {\n    const listenerFunctions = listenerName.split(\" \");\n    for (let i = 0; i < listenerFunctions.length; i++) {\n      const listenerSplit = listenerFunctions[i].split(\".\");\n      if (listenerSplit.length === 0) return;\n\n      const functionName = listenerSplit[0];\n\n      let CMIElement = null;\n      if (listenerSplit.length > 1) {\n        CMIElement = listenerName.replace(functionName + \".\", \"\");\n      }\n\n      this.listenerArray = this.listenerArray.filter(\n        (obj) =>\n          obj.functionName !== functionName && obj.CMIElement !== CMIElement,\n      );\n    }\n  }\n\n  /**\n   * Processes any 'on' listeners that have been created\n   *\n   * @param {string} functionName\n   * @param {string} CMIElement\n   * @param {any} value\n   */\n  processListeners(functionName: string, CMIElement?: string, value?: any) {\n    this.apiLog(\n      functionName,\n      value,\n      global_constants.LOG_LEVEL_INFO,\n      CMIElement,\n    );\n    for (let i = 0; i < this.listenerArray.length; i++) {\n      const listener = this.listenerArray[i];\n      const functionsMatch = listener.functionName === functionName;\n      const listenerHasCMIElement = !!listener.CMIElement;\n      let CMIElementsMatch = false;\n      if (\n        CMIElement &&\n        listener.CMIElement &&\n        listener.CMIElement.substring(listener.CMIElement.length - 1) === \"*\"\n      ) {\n        CMIElementsMatch =\n          CMIElement.indexOf(\n            listener.CMIElement.substring(0, listener.CMIElement.length - 1),\n          ) === 0;\n      } else {\n        CMIElementsMatch = listener.CMIElement === CMIElement;\n      }\n\n      if (functionsMatch && (!listenerHasCMIElement || CMIElementsMatch)) {\n        this.apiLog(\n          \"processListeners\",\n          `Processing listener: ${listener.functionName}`,\n          global_constants.LOG_LEVEL_INFO,\n          CMIElement,\n        );\n        listener.callback(CMIElement, value);\n      }\n    }\n  }\n\n  /**\n   * Throws a SCORM error\n   *\n   * @param {number} errorNumber\n   * @param {string} message\n   */\n  throwSCORMError(errorNumber: number, message?: string) {\n    if (!message) {\n      message = this.getLmsErrorMessageDetails(errorNumber);\n    }\n\n    this.apiLog(\n      \"throwSCORMError\",\n      errorNumber + \": \" + message,\n      global_constants.LOG_LEVEL_ERROR,\n    );\n\n    this.lastErrorCode = String(errorNumber);\n  }\n\n  /**\n   * Clears the last SCORM error code on success.\n   *\n   * @param {string} success\n   */\n  clearSCORMError(success: string) {\n    if (success !== undefined && success !== global_constants.SCORM_FALSE) {\n      this.lastErrorCode = \"0\";\n    }\n  }\n\n  /**\n   * Attempts to store the data to the LMS, logs data if no LMS configured\n   * APIs that inherit BaseAPI should override this function\n   *\n   * @param {boolean} _calculateTotalTime\n   * @return {ResultObject}\n   * @abstract\n   */\n  abstract storeData(_calculateTotalTime: boolean): ResultObject;\n\n  /**\n   * Load the CMI from a flattened JSON object\n   * @param {RefObject} json\n   * @param {string} CMIElement\n   */\n  loadFromFlattenedJSON(json: RefObject, CMIElement: string) {\n    if (!this.isNotInitialized()) {\n      console.error(\n        \"loadFromFlattenedJSON can only be called before the call to lmsInitialize.\",\n      );\n      return;\n    }\n\n    /**\n     * Test match pattern.\n     *\n     * @param {string} a\n     * @param {string} c\n     * @param {RegExp} a_pattern\n     * @return {number}\n     */\n    function testPattern(\n      a: string,\n      c: string,\n      a_pattern: RegExp,\n    ): number | null {\n      const a_match = a.match(a_pattern);\n\n      let c_match;\n      if (a_match !== null && (c_match = c.match(a_pattern)) !== null) {\n        const a_num = Number(a_match[2]);\n        const c_num = Number(c_match[2]);\n        if (a_num === c_num) {\n          if (a_match[3] === \"id\") {\n            return -1;\n          } else if (a_match[3] === \"type\") {\n            if (c_match[3] === \"id\") {\n              return 1;\n            } else {\n              return -1;\n            }\n          } else {\n            return 1;\n          }\n        }\n        return a_num - c_num;\n      }\n\n      return null;\n    }\n\n    const int_pattern = /^(cmi\\.interactions\\.)(\\d+)\\.(.*)$/;\n    const obj_pattern = /^(cmi\\.objectives\\.)(\\d+)\\.(.*)$/;\n\n    const result = Object.keys(json).map(function (key) {\n      return [String(key), json[key]];\n    });\n\n    // CMI interactions need to have id and type loaded before any other fields\n    result.sort(function ([a, _b], [c, _d]) {\n      let test;\n      if ((test = testPattern(a, c, int_pattern)) !== null) {\n        return test;\n      }\n      if ((test = testPattern(a, c, obj_pattern)) !== null) {\n        return test;\n      }\n\n      if (a < c) {\n        return -1;\n      }\n      if (a > c) {\n        return 1;\n      }\n      return 0;\n    });\n\n    let obj: RefObject;\n    result.forEach((element) => {\n      obj = {};\n      obj[element[0]] = element[1];\n      this.loadFromJSON(unflatten(obj), CMIElement);\n    });\n  }\n\n  /**\n   * Loads CMI data from a JSON object.\n   *\n   * @param {RefObject} json\n   * @param {string} CMIElement\n   */\n  loadFromJSON(json: RefObject, CMIElement: string) {\n    if (!this.isNotInitialized()) {\n      console.error(\n        \"loadFromJSON can only be called before the call to lmsInitialize.\",\n      );\n      return;\n    }\n\n    CMIElement = CMIElement !== undefined ? CMIElement : \"cmi\";\n\n    this.startingData = json;\n\n    // could this be refactored down to flatten(json) then setCMIValue on each?\n    for (const key in json) {\n      if ({}.hasOwnProperty.call(json, key) && json[key]) {\n        const currentCMIElement = (CMIElement ? CMIElement + \".\" : \"\") + key;\n        const value = json[key];\n\n        if (value[\"childArray\"]) {\n          for (let i = 0; i < value[\"childArray\"].length; i++) {\n            this.loadFromJSON(\n              value[\"childArray\"][i],\n              currentCMIElement + \".\" + i,\n            );\n          }\n        } else if (value.constructor === Object) {\n          this.loadFromJSON(value, currentCMIElement);\n        } else {\n          this.setCMIValue(currentCMIElement, value);\n        }\n      }\n    }\n  }\n\n  /**\n   * Render the CMI object to JSON for sending to an LMS.\n   *\n   * @return {string}\n   */\n  renderCMIToJSONString(): string {\n    const cmi = this.cmi;\n    // Do we want/need to return fields that have no set value?\n    // return JSON.stringify({ cmi }, (k, v) => v === undefined ? null : v, 2);\n    return JSON.stringify({ cmi });\n  }\n\n  /**\n   * Returns a JS object representing the current cmi\n   * @return {object}\n   */\n  renderCMIToJSONObject(): object {\n    // Do we want/need to return fields that have no set value?\n    // return JSON.stringify({ cmi }, (k, v) => v === undefined ? null : v, 2);\n    return JSON.parse(this.renderCMIToJSONString());\n  }\n\n  /**\n   * Render the cmi object to the proper format for LMS commit\n   * APIs that inherit BaseAPI should override this function\n   *\n   * @param {boolean} _terminateCommit\n   * @return {RefObject|Array}\n   * @abstract\n   */\n  abstract renderCommitCMI(_terminateCommit: boolean): RefObject | Array<any>;\n\n  /**\n   * Send the request to the LMS\n   * @param {string} url\n   * @param {RefObject|Array} params\n   * @param {boolean} immediate\n   * @return {ResultObject}\n   */\n  processHttpRequest(\n    url: string,\n    params: RefObject | Array<any>,\n    immediate: boolean = false,\n  ): ResultObject {\n    const api = this;\n    const genericError: ResultObject = {\n      result: global_constants.SCORM_FALSE,\n      errorCode: this.error_codes.GENERAL,\n    };\n\n    const process = async (\n      url: string,\n      params: RefObject | Array<any>,\n      settings: Settings,\n    ): Promise<ResultObject> => {\n      try {\n        params = settings.requestHandler(params);\n        const response = await fetch(url, {\n          method: \"POST\",\n          body:\n            params instanceof Array ? params.join(\"&\") : JSON.stringify(params),\n          headers: {\n            ...settings.xhrHeaders,\n            \"Content-Type\": settings.commitRequestDataType,\n          },\n          credentials: settings.xhrWithCredentials ? \"include\" : undefined,\n          keepalive: true,\n        });\n\n        const result =\n          typeof settings.responseHandler === \"function\"\n            ? await settings.responseHandler(response)\n            : await response.json();\n\n        if (\n          response.status >= 200 &&\n          response.status <= 299 &&\n          (result.result === true ||\n            result.result === global_constants.SCORM_TRUE)\n        ) {\n          api.processListeners(\"CommitSuccess\");\n        } else {\n          api.processListeners(\"CommitError\");\n        }\n\n        return result;\n      } catch (e) {\n        this.apiLog(\"processHttpRequest\", e, global_constants.LOG_LEVEL_ERROR);\n        api.processListeners(\"CommitError\");\n        return genericError;\n      }\n    };\n\n    const debouncedProcess = debounce(process, 500, immediate);\n    debouncedProcess(url, params, this.settings);\n\n    return {\n      result: global_constants.SCORM_TRUE,\n      errorCode: 0,\n    };\n  }\n\n  /**\n   * Throws a SCORM error\n   *\n   * @param {number} when - the number of milliseconds to wait before committing\n   * @param {string} callback - the name of the commit event callback\n   */\n  scheduleCommit(when: number, callback: string) {\n    this._timeout = new ScheduledCommit(this, when, callback);\n    this.apiLog(\n      \"scheduleCommit\",\n      \"scheduled\",\n      global_constants.LOG_LEVEL_DEBUG,\n      \"\",\n    );\n  }\n\n  /**\n   * Clears and cancels any currently scheduled commits\n   */\n  clearScheduledCommit() {\n    if (this._timeout) {\n      this._timeout.cancel();\n      this._timeout = undefined;\n      this.apiLog(\n        \"clearScheduledCommit\",\n        \"cleared\",\n        global_constants.LOG_LEVEL_DEBUG,\n        \"\",\n      );\n    }\n  }\n\n  private handleValueAccessException(e: any, returnValue: string) {\n    if (e instanceof ValidationError) {\n      this.lastErrorCode = String(e.errorCode);\n      returnValue = global_constants.SCORM_FALSE;\n    } else {\n      if (e instanceof Error && e.message) {\n        console.error(e.message);\n      } else {\n        console.error(e);\n      }\n      this.throwSCORMError(this._error_codes.GENERAL);\n    }\n    return returnValue;\n  }\n}\n\n/**\n * Private class that wraps a timeout call to the commit() function\n */\nclass ScheduledCommit {\n  private _API;\n  private _cancelled = false;\n  private readonly _timeout;\n  private readonly _callback;\n\n  /**\n   * Constructor for ScheduledCommit\n   * @param {BaseAPI} API\n   * @param {number} when\n   * @param {string} callback\n   */\n  constructor(API: any, when: number, callback: string) {\n    this._API = API;\n    this._timeout = setTimeout(this.wrapper.bind(this), when);\n    this._callback = callback;\n  }\n\n  /**\n   * Cancel any currently scheduled commit\n   */\n  cancel() {\n    this._cancelled = true;\n    if (this._timeout) {\n      clearTimeout(this._timeout);\n    }\n  }\n\n  /**\n   * Wrap the API commit call to check if the call has already been cancelled\n   */\n  wrapper() {\n    if (!this._cancelled) {\n      this._API.commit(this._callback);\n    }\n  }\n}\n","const scorm12 = {\n  CMIString256: \"^.{0,255}$\",\n  CMIString4096: \"^.{0,4096}$\",\n  CMITime: \"^(?:[01]\\\\d|2[0123]):(?:[012345]\\\\d):(?:[012345]\\\\d)$\",\n  CMITimespan: \"^([0-9]{2,}):([0-9]{2}):([0-9]{2})(.[0-9]{1,2})?$\",\n\n  CMIInteger: \"^\\\\d+$\",\n  CMISInteger: \"^-?([0-9]+)$\",\n  CMIDecimal: \"^-?([0-9]{0,3})(.[0-9]*)?$\",\n\n  CMIIdentifier: \"^[\\\\u0021-\\\\u007E\\\\s]{0,255}$\",\n  CMIFeedback: \"^.{0,255}$\",\n  // This must be redefined\n  CMIIndex: \"[._](\\\\d+).\",\n  // Vocabulary Data Type Definition\n  CMIStatus: \"^(passed|completed|failed|incomplete|browsed)$\",\n  CMIStatus2: \"^(passed|completed|failed|incomplete|browsed|not attempted)$\",\n  CMIExit: \"^(time-out|suspend|logout|)$\",\n  CMIType:\n    \"^(true-false|choice|fill-in|matching|performance|sequencing|likert|numeric)$\",\n  CMIResult:\n    \"^(correct|wrong|unanticipated|neutral|([0-9]{0,3})?(\\\\.[0-9]*)?)$\",\n  NAVEvent: \"^(previous|continue)$\",\n  // Data ranges\n  score_range: \"0#100\",\n  audio_range: \"-1#100\",\n  speed_range: \"-100#100\",\n  weighting_range: \"-100#100\",\n  text_range: \"-1#1\",\n};\nconst aicc = {\n  ...scorm12,\n  ...{\n    CMIIdentifier: \"^\\\\w{1,255}$\",\n  },\n};\nconst scorm2004 = {\n  CMIString200: \"^[\\\\u0000-\\\\uFFFF]{0,200}$\",\n  CMIString250: \"^[\\\\u0000-\\\\uFFFF]{0,250}$\",\n  CMIString1000: \"^[\\\\u0000-\\\\uFFFF]{0,1000}$\",\n  CMIString4000: \"^[\\\\u0000-\\\\uFFFF]{0,4000}$\",\n  CMIString64000: \"^[\\\\u0000-\\\\uFFFF]{0,64000}$\",\n  CMILang: \"^([a-zA-Z]{2,3}|i|x)(-[a-zA-Z0-9-]{2,8})?$|^$\",\n\n  CMILangString250:\n    \"^({lang=([a-zA-Z]{2,3}|i|x)(-[a-zA-Z0-9-]{2,8})?})?((?!{.*$).{0,250}$)?$\",\n\n  CMILangcr: \"^(({lang=([a-zA-Z]{2,3}|i|x)?(-[a-zA-Z0-9-]{2,8})?}))(.*?)$\",\n\n  CMILangString250cr:\n    \"^(({lang=([a-zA-Z]{2,3}|i|x)?(-[a-zA-Z0-9-]{2,8})?})?(.{0,250})?)?$\",\n\n  CMILangString4000:\n    \"^({lang=([a-zA-Z]{2,3}|i|x)(-[a-zA-Z0-9-]{2,8})?})?((?!{.*$).{0,4000}$)?$\",\n\n  CMITime:\n    \"^(19[7-9]{1}[0-9]{1}|20[0-2]{1}[0-9]{1}|203[0-8]{1})((-(0[1-9]{1}|1[0-2]{1}))((-(0[1-9]{1}|[1-2]{1}[0-9]{1}|3[0-1]{1}))(T([0-1]{1}[0-9]{1}|2[0-3]{1})((:[0-5]{1}[0-9]{1})((:[0-5]{1}[0-9]{1})((\\\\.[0-9]{1,2})((Z|([+|-]([0-1]{1}[0-9]{1}|2[0-3]{1})))(:[0-5]{1}[0-9]{1})?)?)?)?)?)?)?)?$\",\n  CMITimespan:\n    \"^P(?:([.,\\\\d]+)Y)?(?:([.,\\\\d]+)M)?(?:([.,\\\\d]+)W)?(?:([.,\\\\d]+)D)?(?:T?(?:([.,\\\\d]+)H)?(?:([.,\\\\d]+)M)?(?:([.,\\\\d]+)S)?)?$\",\n  CMIInteger: \"^\\\\d+$\",\n  CMISInteger: \"^-?([0-9]+)$\",\n  CMIDecimal: \"^-?([0-9]{1,5})(\\\\.[0-9]{1,18})?$\",\n  CMIIdentifier: \"^\\\\S{1,250}[a-zA-Z0-9]$\",\n  CMIShortIdentifier: \"^[\\\\w\\\\.\\\\-\\\\_]{1,250}$\",\n  CMILongIdentifier:\n    \"^(?:(?!urn:)\\\\S{1,4000}|urn:[A-Za-z0-9-]{1,31}:\\\\S{1,4000}|.{1,4000})$\",\n  // need to re-examine this\n  CMIFeedback: \"^.*$\",\n  // This must be redefined\n  CMIIndex: \"[._](\\\\d+).\",\n  CMIIndexStore: \".N(\\\\d+).\",\n  // Vocabulary Data Type Definition\n  CMICStatus: \"^(completed|incomplete|not attempted|unknown)$\",\n  CMISStatus: \"^(passed|failed|unknown)$\",\n  CMIExit: \"^(time-out|suspend|logout|normal)$\",\n  CMIType:\n    \"^(true-false|choice|fill-in|long-fill-in|matching|performance|sequencing|likert|numeric|other)$\",\n  CMIResult:\n    \"^(correct|incorrect|unanticipated|neutral|-?([0-9]{1,4})(\\\\.[0-9]{1,18})?)$\",\n  NAVEvent:\n    \"^(previous|continue|exit|exitAll|abandon|abandonAll|suspendAll|{target=\\\\S{0,200}[a-zA-Z0-9]}choice|jump)$\",\n\n  NAVBoolean: \"^(unknown|true|false$)\",\n  NAVTarget: \"^(previous|continue|choice.{target=\\\\S{0,200}[a-zA-Z0-9]})$\",\n  // Data ranges\n  scaled_range: \"-1#1\",\n  audio_range: \"0#*\",\n  speed_range: \"0#*\",\n  text_range: \"-1#1\",\n  progress_range: \"0#1\",\n};\nconst Regex = {\n  aicc: aicc,\n  scorm12: scorm12,\n  scorm2004: scorm2004,\n};\nexport default Regex;\n","import { BaseScormValidationError } from \"./errors\";\n\n/**\n * Check if the value matches the proper format. If not, throw proper error code.\n *\n * @param {string} value\n * @param {string} regexPattern\n * @param {number} errorCode\n * @param {typeof BaseScormValidationError} errorClass\n * @param {boolean} [allowEmptyString]\n * @return {boolean}\n */\nexport function checkValidFormat(\n  value: string,\n  regexPattern: string,\n  errorCode: number,\n  errorClass: typeof BaseScormValidationError,\n  allowEmptyString?: boolean,\n): boolean {\n  if (typeof value !== \"string\") {\n    return false;\n  }\n  const formatRegex = new RegExp(regexPattern);\n  const matches = value.match(formatRegex);\n  if (allowEmptyString && value === \"\") {\n    return true;\n  }\n  if (value === undefined || !matches || matches[0] === \"\") {\n    throw new errorClass(errorCode);\n  }\n  return true;\n}\n\n/**\n * Check if the value matches the proper range. If not, throw proper error code.\n *\n * @param {any} value\n * @param {string} rangePattern\n * @param {number} errorCode\n * @param {typeof BaseScormValidationError} errorClass\n * @return {boolean}\n */\nexport function checkValidRange(\n  value: any,\n  rangePattern: string,\n  errorCode: number,\n  errorClass: typeof BaseScormValidationError,\n): boolean {\n  const ranges = rangePattern.split(\"#\");\n  value = value * 1.0;\n  if (value >= ranges[0]) {\n    if (ranges[1] === \"*\" || value <= ranges[1]) {\n      return true;\n    } else {\n      throw new errorClass(errorCode);\n    }\n  } else {\n    throw new errorClass(errorCode);\n  }\n}\n","import { checkValidFormat, checkValidRange } from \"../common/validation\";\nimport ErrorCodes from \"../../constants/error_codes\";\nimport { Scorm2004ValidationError } from \"../../exceptions\";\n\n/**\n * Helper method, no reason to have to pass the same error codes every time\n * @param {string} value\n * @param {string} regexPattern\n * @param {boolean} allowEmptyString\n * @return {boolean}\n */\nexport function check2004ValidFormat(\n  value: string,\n  regexPattern: string,\n  allowEmptyString?: boolean,\n): boolean {\n  return checkValidFormat(\n    value,\n    regexPattern,\n    ErrorCodes.scorm2004.TYPE_MISMATCH,\n    Scorm2004ValidationError,\n    allowEmptyString,\n  );\n}\n\n/**\n * Helper method, no reason to have to pass the same error codes every time\n * @param {string} value\n * @param {string} rangePattern\n * @return {boolean}\n */\nexport function check2004ValidRange(\n  value: string,\n  rangePattern: string,\n): boolean {\n  return checkValidRange(\n    value,\n    rangePattern,\n    ErrorCodes.scorm2004.VALUE_OUT_OF_RANGE,\n    Scorm2004ValidationError,\n  );\n}\n","/**\n * Class for SCORM 2004's cmi.learner_preference object\n */\nimport { BaseCMI } from \"../common/base_cmi\";\nimport APIConstants from \"../../constants/api_constants\";\nimport { Scorm2004ValidationError } from \"../../exceptions\";\nimport ErrorCodes from \"../../constants/error_codes\";\nimport { check2004ValidFormat, check2004ValidRange } from \"./validation\";\nimport Regex from \"../../constants/regex\";\n\nexport class CMILearnerPreference extends BaseCMI {\n  private __children = APIConstants.scorm2004.student_preference_children;\n  private _audio_level = \"1\";\n  private _language = \"\";\n  private _delivery_speed = \"1\";\n  private _audio_captioning = \"0\";\n\n  /**\n   * Constructor for cmi.learner_preference\n   */\n  constructor() {\n    super();\n  }\n\n  /**\n   * Getter for __children\n   * @return {string}\n   * @private\n   */\n  get _children(): string {\n    return this.__children;\n  }\n\n  /**\n   * Setter for __children. Just throws an error.\n   * @param {string} _children\n   * @private\n   */\n  set _children(_children: string) {\n    throw new Scorm2004ValidationError(ErrorCodes.scorm2004.READ_ONLY_ELEMENT);\n  }\n\n  /**\n   * Getter for _audio_level\n   * @return {string}\n   */\n  get audio_level(): string {\n    return this._audio_level;\n  }\n\n  /**\n   * Setter for _audio_level\n   * @param {string} audio_level\n   */\n  set audio_level(audio_level: string) {\n    if (\n      check2004ValidFormat(audio_level, Regex.scorm2004.CMIDecimal) &&\n      check2004ValidRange(audio_level, Regex.scorm2004.audio_range)\n    ) {\n      this._audio_level = audio_level;\n    }\n  }\n\n  /**\n   * Getter for _language\n   * @return {string}\n   */\n  get language(): string {\n    return this._language;\n  }\n\n  /**\n   * Setter for _language\n   * @param {string} language\n   */\n  set language(language: string) {\n    if (check2004ValidFormat(language, Regex.scorm2004.CMILang)) {\n      this._language = language;\n    }\n  }\n\n  /**\n   * Getter for _delivery_speed\n   * @return {string}\n   */\n  get delivery_speed(): string {\n    return this._delivery_speed;\n  }\n\n  /**\n   * Setter for _delivery_speed\n   * @param {string} delivery_speed\n   */\n  set delivery_speed(delivery_speed: string) {\n    if (\n      check2004ValidFormat(delivery_speed, Regex.scorm2004.CMIDecimal) &&\n      check2004ValidRange(delivery_speed, Regex.scorm2004.speed_range)\n    ) {\n      this._delivery_speed = delivery_speed;\n    }\n  }\n\n  /**\n   * Getter for _audio_captioning\n   * @return {string}\n   */\n  get audio_captioning(): string {\n    return this._audio_captioning;\n  }\n\n  /**\n   * Setter for _audio_captioning\n   * @param {string} audio_captioning\n   */\n  set audio_captioning(audio_captioning: string) {\n    if (\n      check2004ValidFormat(audio_captioning, Regex.scorm2004.CMISInteger) &&\n      check2004ValidRange(audio_captioning, Regex.scorm2004.text_range)\n    ) {\n      this._audio_captioning = audio_captioning;\n    }\n  }\n\n  /**\n   * toJSON for cmi.learner_preference\n   *\n   * @return {\n   *    {\n   *      audio_level: string,\n   *      language: string,\n   *      delivery_speed: string,\n   *      audio_captioning: string\n   *    }\n   *  }\n   */\n  toJSON(): {\n    audio_level: string;\n    language: string;\n    delivery_speed: string;\n    audio_captioning: string;\n  } {\n    this.jsonString = true;\n    const result = {\n      audio_level: this.audio_level,\n      language: this.language,\n      delivery_speed: this.delivery_speed,\n      audio_captioning: this.audio_captioning,\n    };\n    delete this.jsonString;\n    return result;\n  }\n}\n","import Regex from \"./regex\";\n\nconst scorm2004_regex = Regex.scorm2004;\nexport const LearnerResponses: Responses = {\n  \"true-false\": {\n    format: \"^true$|^false$\",\n    max: 1,\n    delimiter: \"\",\n    unique: false,\n  },\n  choice: {\n    format: scorm2004_regex.CMILongIdentifier,\n    max: 36,\n    delimiter: \"[,]\",\n    unique: true,\n  },\n  \"fill-in\": {\n    format: scorm2004_regex.CMILangString250,\n    max: 10,\n    delimiter: \"[,]\",\n    unique: false,\n  },\n  \"long-fill-in\": {\n    format: scorm2004_regex.CMILangString4000,\n    max: 1,\n    delimiter: \"\",\n    unique: false,\n  },\n  matching: {\n    format: scorm2004_regex.CMIShortIdentifier,\n    format2: scorm2004_regex.CMIShortIdentifier,\n    max: 36,\n    delimiter: \"[,]\",\n    delimiter2: \"[.]\",\n    unique: false,\n  },\n  performance: {\n    format: \"^$|\" + scorm2004_regex.CMIShortIdentifier,\n    format2:\n      scorm2004_regex.CMIDecimal + \"|^$|\" + scorm2004_regex.CMIShortIdentifier,\n    max: 250,\n    delimiter: \"[,]\",\n    delimiter2: \"[.]\",\n    unique: false,\n  },\n  sequencing: {\n    format: scorm2004_regex.CMIShortIdentifier,\n    max: 36,\n    delimiter: \"[,]\",\n    unique: false,\n  },\n  likert: {\n    format: scorm2004_regex.CMIShortIdentifier,\n    max: 1,\n    delimiter: \"\",\n    unique: false,\n  },\n  numeric: {\n    format: scorm2004_regex.CMIDecimal,\n    max: 1,\n    delimiter: \"\",\n    unique: false,\n  },\n  other: {\n    format: scorm2004_regex.CMIString4000,\n    max: 1,\n    delimiter: \"\",\n    unique: false,\n  },\n};\nexport const CorrectResponses: Responses = {\n  \"true-false\": {\n    max: 1,\n    delimiter: \"\",\n    unique: false,\n    duplicate: false,\n    format: \"^true$|^false$\",\n    limit: 1,\n  },\n  choice: {\n    max: 36,\n    delimiter: \"[,]\",\n    unique: true,\n    duplicate: false,\n    format: scorm2004_regex.CMILongIdentifier,\n  },\n  \"fill-in\": {\n    max: 10,\n    delimiter: \"[,]\",\n    unique: false,\n    duplicate: false,\n    format: scorm2004_regex.CMILangString250cr,\n  },\n  \"long-fill-in\": {\n    max: 1,\n    delimiter: \"\",\n    unique: false,\n    duplicate: true,\n    format: scorm2004_regex.CMILangString4000,\n  },\n  matching: {\n    max: 36,\n    delimiter: \"[,]\",\n    delimiter2: \"[.]\",\n    unique: false,\n    duplicate: false,\n    format: scorm2004_regex.CMIShortIdentifier,\n    format2: scorm2004_regex.CMIShortIdentifier,\n  },\n  performance: {\n    max: 250,\n    delimiter: \"[,]\",\n    delimiter2: \"[.]\",\n    delimiter3: \"[:]\",\n    unique: false,\n    duplicate: false,\n    format: \"^$|\" + scorm2004_regex.CMIShortIdentifier,\n    format2:\n      scorm2004_regex.CMIDecimal + \"|^$|\" + scorm2004_regex.CMIShortIdentifier,\n  },\n  sequencing: {\n    max: 36,\n    delimiter: \"[,]\",\n    unique: false,\n    duplicate: false,\n    format: scorm2004_regex.CMIShortIdentifier,\n  },\n  likert: {\n    max: 1,\n    delimiter: \"\",\n    unique: false,\n    duplicate: false,\n    format: scorm2004_regex.CMIShortIdentifier,\n    limit: 1,\n  },\n  numeric: {\n    max: 2,\n    delimiter: \"[:]\",\n    unique: false,\n    duplicate: false,\n    format: scorm2004_regex.CMIDecimal,\n    limit: 1,\n  },\n  other: {\n    max: 1,\n    delimiter: \"\",\n    unique: false,\n    duplicate: false,\n    format: scorm2004_regex.CMIString4000,\n    limit: 1,\n  },\n};\n\nexport type ResponseType = {\n  format: string;\n  max: number;\n  delimiter: string;\n  unique: boolean;\n  duplicate?: boolean;\n  format2?: string;\n  delimiter2?: string;\n  limit?: number;\n  delimiter3?: string;\n};\n\nexport type Responses = {\n  [key: string]: ResponseType;\n};\n","/**\n * Class representing SCORM 2004's `cmi.interactions` object\n */\nimport { BaseCMI } from \"../common/base_cmi\";\nimport { CMIArray } from \"../common/array\";\nimport ErrorCodes from \"../../constants/error_codes\";\nimport { Scorm2004ValidationError } from \"../../exceptions\";\nimport APIConstants from \"../../constants/api_constants\";\nimport { check2004ValidFormat } from \"./validation\";\nimport Regex from \"../../constants/regex\";\nimport { LearnerResponses } from \"../../constants/response_constants\";\n\nexport class CMIInteractions extends CMIArray {\n  /**\n   * Constructor for `cmi.objectives` Array\n   */\n  constructor() {\n    super({\n      children: APIConstants.scorm2004.interactions_children,\n      errorCode: ErrorCodes.scorm2004.READ_ONLY_ELEMENT,\n      errorClass: Scorm2004ValidationError,\n    });\n  }\n}\n\n/**\n * Class for SCORM 2004's cmi.interaction.n object\n */\n\nexport class CMIInteractionsObject extends BaseCMI {\n  private _id = \"\";\n  private _type = \"\";\n  private _timestamp = \"\";\n  private _weighting = \"\";\n  private _learner_response = \"\";\n  private _result = \"\";\n  private _latency = \"\";\n  private _description = \"\";\n\n  /**\n   * Constructor for cmi.interaction.n\n   */\n  constructor() {\n    super();\n    this.objectives = new CMIArray({\n      errorCode: ErrorCodes.scorm2004.READ_ONLY_ELEMENT,\n      errorClass: Scorm2004ValidationError,\n      children: APIConstants.scorm2004.objectives_children,\n    });\n    this.correct_responses = new CMIArray({\n      errorCode: ErrorCodes.scorm2004.READ_ONLY_ELEMENT,\n      errorClass: Scorm2004ValidationError,\n      children: APIConstants.scorm2004.correct_responses_children,\n    });\n  }\n\n  public objectives: CMIArray;\n  public correct_responses: CMIArray;\n\n  /**\n   * Called when the API has been initialized after the CMI has been created\n   */\n  initialize() {\n    super.initialize();\n    this.objectives?.initialize();\n    this.correct_responses?.initialize();\n  }\n\n  /**\n   * Getter for _id\n   * @return {string}\n   */\n  get id(): string {\n    return this._id;\n  }\n\n  /**\n   * Setter for _id\n   * @param {string} id\n   */\n  set id(id: string) {\n    if (check2004ValidFormat(id, Regex.scorm2004.CMILongIdentifier)) {\n      this._id = id;\n    }\n  }\n\n  /**\n   * Getter for _type\n   * @return {string}\n   */\n  get type(): string {\n    return this._type;\n  }\n\n  /**\n   * Setter for _type\n   * @param {string} type\n   */\n  set type(type: string) {\n    if (this.initialized && this._id === \"\") {\n      throw new Scorm2004ValidationError(\n        ErrorCodes.scorm2004.DEPENDENCY_NOT_ESTABLISHED,\n      );\n    } else {\n      if (check2004ValidFormat(type, Regex.scorm2004.CMIType)) {\n        this._type = type;\n      }\n    }\n  }\n\n  /**\n   * Getter for _timestamp\n   * @return {string}\n   */\n  get timestamp(): string {\n    return this._timestamp;\n  }\n\n  /**\n   * Setter for _timestamp\n   * @param {string} timestamp\n   */\n  set timestamp(timestamp: string) {\n    if (this.initialized && this._id === \"\") {\n      throw new Scorm2004ValidationError(\n        ErrorCodes.scorm2004.DEPENDENCY_NOT_ESTABLISHED,\n      );\n    } else {\n      if (check2004ValidFormat(timestamp, Regex.scorm2004.CMITime)) {\n        this._timestamp = timestamp;\n      }\n    }\n  }\n\n  /**\n   * Getter for _weighting\n   * @return {string}\n   */\n  get weighting(): string {\n    return this._weighting;\n  }\n\n  /**\n   * Setter for _weighting\n   * @param {string} weighting\n   */\n  set weighting(weighting: string) {\n    if (this.initialized && this._id === \"\") {\n      throw new Scorm2004ValidationError(\n        ErrorCodes.scorm2004.DEPENDENCY_NOT_ESTABLISHED,\n      );\n    } else {\n      if (check2004ValidFormat(weighting, Regex.scorm2004.CMIDecimal)) {\n        this._weighting = weighting;\n      }\n    }\n  }\n\n  /**\n   * Getter for _learner_response\n   * @return {string}\n   */\n  get learner_response(): string {\n    return this._learner_response;\n  }\n\n  /**\n   * Setter for _learner_response. Does type validation to make sure response\n   * matches SCORM 2004's spec\n   * @param {string} learner_response\n   */\n  set learner_response(learner_response: string) {\n    if (this.initialized && (this._type === \"\" || this._id === \"\")) {\n      throw new Scorm2004ValidationError(\n        ErrorCodes.scorm2004.DEPENDENCY_NOT_ESTABLISHED,\n      );\n    } else {\n      let nodes = [];\n      const response_type = LearnerResponses[this.type];\n\n      if (response_type) {\n        if (response_type?.delimiter) {\n          nodes = learner_response.split(response_type.delimiter);\n        } else {\n          nodes[0] = learner_response;\n        }\n\n        if (nodes.length > 0 && nodes.length <= response_type.max) {\n          const formatRegex = new RegExp(response_type.format);\n\n          for (let i = 0; i < nodes.length; i++) {\n            if (response_type?.delimiter2) {\n              const values = nodes[i].split(response_type.delimiter2);\n\n              if (values.length === 2) {\n                if (!values[0].match(formatRegex)) {\n                  throw new Scorm2004ValidationError(\n                    ErrorCodes.scorm2004.TYPE_MISMATCH,\n                  );\n                } else {\n                  if (\n                    !response_type.format2 ||\n                    !values[1].match(new RegExp(response_type.format2))\n                  ) {\n                    throw new Scorm2004ValidationError(\n                      ErrorCodes.scorm2004.TYPE_MISMATCH,\n                    );\n                  }\n                }\n              } else {\n                throw new Scorm2004ValidationError(\n                  ErrorCodes.scorm2004.TYPE_MISMATCH,\n                );\n              }\n            } else {\n              if (!nodes[i].match(formatRegex)) {\n                throw new Scorm2004ValidationError(\n                  ErrorCodes.scorm2004.TYPE_MISMATCH,\n                );\n              } else {\n                if (nodes[i] !== \"\" && response_type.unique) {\n                  for (let j = 0; j < i; j++) {\n                    if (nodes[i] === nodes[j]) {\n                      throw new Scorm2004ValidationError(\n                        ErrorCodes.scorm2004.TYPE_MISMATCH,\n                      );\n                    }\n                  }\n                }\n              }\n            }\n          }\n        } else {\n          throw new Scorm2004ValidationError(\n            ErrorCodes.scorm2004.GENERAL_SET_FAILURE,\n          );\n        }\n\n        this._learner_response = learner_response;\n      } else {\n        throw new Scorm2004ValidationError(ErrorCodes.scorm2004.TYPE_MISMATCH);\n      }\n    }\n  }\n\n  /**\n   * Getter for _result\n   * @return {string}\n   */\n  get result(): string {\n    return this._result;\n  }\n\n  /**\n   * Setter for _result\n   * @param {string} result\n   */\n  set result(result: string) {\n    if (check2004ValidFormat(result, Regex.scorm2004.CMIResult)) {\n      this._result = result;\n    }\n  }\n\n  /**\n   * Getter for _latency\n   * @return {string}\n   */\n  get latency(): string {\n    return this._latency;\n  }\n\n  /**\n   * Setter for _latency\n   * @param {string} latency\n   */\n  set latency(latency: string) {\n    if (this.initialized && this._id === \"\") {\n      throw new Scorm2004ValidationError(\n        ErrorCodes.scorm2004.DEPENDENCY_NOT_ESTABLISHED,\n      );\n    } else {\n      if (check2004ValidFormat(latency, Regex.scorm2004.CMITimespan)) {\n        this._latency = latency;\n      }\n    }\n  }\n\n  /**\n   * Getter for _description\n   * @return {string}\n   */\n  get description(): string {\n    return this._description;\n  }\n\n  /**\n   * Setter for _description\n   * @param {string} description\n   */\n  set description(description: string) {\n    if (this.initialized && this._id === \"\") {\n      throw new Scorm2004ValidationError(\n        ErrorCodes.scorm2004.DEPENDENCY_NOT_ESTABLISHED,\n      );\n    } else {\n      if (\n        check2004ValidFormat(\n          description,\n          Regex.scorm2004.CMILangString250,\n          true,\n        )\n      ) {\n        this._description = description;\n      }\n    }\n  }\n\n  /**\n   * toJSON for cmi.interactions.n\n   *\n   * @return {\n   *    {\n   *      id: string,\n   *      type: string,\n   *      objectives: CMIArray,\n   *      timestamp: string,\n   *      correct_responses: CMIArray,\n   *      weighting: string,\n   *      learner_response: string,\n   *      result: string,\n   *      latency: string,\n   *      description: string\n   *    }\n   *  }\n   */\n  toJSON(): {\n    id: string;\n    type: string;\n    objectives: CMIArray;\n    timestamp: string;\n    correct_responses: CMIArray;\n    weighting: string;\n    learner_response: string;\n    result: string;\n    latency: string;\n    description: string;\n  } {\n    this.jsonString = true;\n    const result = {\n      id: this.id,\n      type: this.type,\n      objectives: this.objectives,\n      timestamp: this.timestamp,\n      weighting: this.weighting,\n      learner_response: this.learner_response,\n      result: this.result,\n      latency: this.latency,\n      description: this.description,\n      correct_responses: this.correct_responses,\n    };\n    delete this.jsonString;\n    return result;\n  }\n}\n\n/**\n * Class representing SCORM 2004's cmi.interactions.n.objectives.n object\n */\nexport class CMIInteractionsObjectivesObject extends BaseCMI {\n  private _id = \"\";\n\n  /**\n   * Constructor for cmi.interactions.n.objectives.n\n   */\n  constructor() {\n    super();\n  }\n\n  /**\n   * Getter for _id\n   * @return {string}\n   */\n  get id(): string {\n    return this._id;\n  }\n\n  /**\n   * Setter for _id\n   * @param {string} id\n   */\n  set id(id: string) {\n    if (check2004ValidFormat(id, Regex.scorm2004.CMILongIdentifier)) {\n      this._id = id;\n    }\n  }\n\n  /**\n   * toJSON for cmi.interactions.n.objectives.n\n   * @return {\n   *    {\n   *      id: string\n   *    }\n   *  }\n   */\n  toJSON(): {\n    id: string;\n  } {\n    this.jsonString = true;\n    const result = {\n      id: this.id,\n    };\n    delete this.jsonString;\n    return result;\n  }\n}\n\n/**\n * Class representing SCORM 2004's cmi.interactions.n.correct_responses.n object\n */\nexport class CMIInteractionsCorrectResponsesObject extends BaseCMI {\n  private _pattern = \"\";\n\n  /**\n   * Constructor for cmi.interactions.n.correct_responses.n\n   */\n  constructor() {\n    super();\n  }\n\n  /**\n   * Getter for _pattern\n   * @return {string}\n   */\n  get pattern(): string {\n    return this._pattern;\n  }\n\n  /**\n   * Setter for _pattern\n   * @param {string} pattern\n   */\n  set pattern(pattern: string) {\n    if (check2004ValidFormat(pattern, Regex.scorm2004.CMIFeedback)) {\n      this._pattern = pattern;\n    }\n  }\n\n  /**\n   * toJSON cmi.interactions.n.correct_responses.n object\n   * @return {\n   *    {\n   *      pattern: string\n   *    }\n   *  }\n   */\n  toJSON(): {\n    pattern: string;\n  } {\n    this.jsonString = true;\n    const result = {\n      pattern: this.pattern,\n    };\n    delete this.jsonString;\n    return result;\n  }\n}\n","import APIConstants from \"../../constants/api_constants\";\nimport Regex from \"../../constants/regex\";\nimport { BaseCMI } from \"./base_cmi\";\nimport { BaseScormValidationError } from \"./errors\";\nimport { checkValidFormat, checkValidRange } from \"./validation\";\nimport ErrorCodes from \"../../constants/error_codes\";\n\nconst scorm12_constants = APIConstants.scorm12;\nconst scorm12_regex = Regex.scorm12;\nexport const scorm12_error_codes = ErrorCodes.scorm12;\n\n/**\n * Base class for cmi *.score objects\n */\nexport class CMIScore extends BaseCMI {\n  private readonly __children: string;\n  private readonly __score_range: string | false;\n  private readonly __invalid_error_code: number;\n  private readonly __invalid_type_code: number;\n  private readonly __invalid_range_code: number;\n  private readonly __decimal_regex: string;\n  private readonly __error_class: typeof BaseScormValidationError;\n  private _raw = \"\";\n  private _min = \"\";\n  private _max: string;\n\n  /**\n   * Constructor for *.score\n   * @param {\n   *     score_children: string,\n   *     score_range: string,\n   *     max: string,\n   *     invalidErrorCode: number,\n   *     invalidTypeCode: number,\n   *     invalidRangeCode: number,\n   *     decimalRegex: string,\n   *     errorClass: typeof BaseScormValidationError\n   * } params\n   */\n  constructor(params: {\n    score_children?: string;\n    score_range?: string;\n    max?: string;\n    invalidErrorCode?: number;\n    invalidTypeCode?: number;\n    invalidRangeCode?: number;\n    decimalRegex?: string;\n    errorClass: typeof BaseScormValidationError;\n  }) {\n    super();\n\n    this.__children = params.score_children || scorm12_constants.score_children;\n    this.__score_range = !params.score_range\n      ? false\n      : scorm12_regex.score_range;\n    this._max = params.max || params.max === \"\" ? params.max : \"100\";\n    this.__invalid_error_code =\n      params.invalidErrorCode || scorm12_error_codes.INVALID_SET_VALUE;\n    this.__invalid_type_code =\n      params.invalidTypeCode || scorm12_error_codes.TYPE_MISMATCH;\n    this.__invalid_range_code =\n      params.invalidRangeCode || scorm12_error_codes.VALUE_OUT_OF_RANGE;\n    this.__decimal_regex = params.decimalRegex || scorm12_regex.CMIDecimal;\n    this.__error_class = params.errorClass;\n  }\n\n  /**\n   * Getter for _children\n   * @return {string}\n   */\n  get _children(): string {\n    return this.__children;\n  }\n\n  /**\n   * Setter for _children. Just throws an error.\n   * @param {string} _children\n   */\n  set _children(_children: string) {\n    throw new this.__error_class(this.__invalid_error_code);\n  }\n\n  /**\n   * Getter for _raw\n   * @return {string}\n   */\n  get raw(): string {\n    return this._raw;\n  }\n\n  /**\n   * Setter for _raw\n   * @param {string} raw\n   */\n  set raw(raw: string) {\n    if (\n      checkValidFormat(\n        raw,\n        this.__decimal_regex,\n        this.__invalid_type_code,\n        this.__error_class,\n      ) &&\n      (!this.__score_range ||\n        checkValidRange(\n          raw,\n          this.__score_range,\n          this.__invalid_range_code,\n          this.__error_class,\n        ))\n    ) {\n      this._raw = raw;\n    }\n  }\n\n  /**\n   * Getter for _min\n   * @return {string}\n   */\n  get min(): string {\n    return this._min;\n  }\n\n  /**\n   * Setter for _min\n   * @param {string} min\n   */\n  set min(min: string) {\n    if (\n      checkValidFormat(\n        min,\n        this.__decimal_regex,\n        this.__invalid_type_code,\n        this.__error_class,\n      ) &&\n      (!this.__score_range ||\n        checkValidRange(\n          min,\n          this.__score_range,\n          this.__invalid_range_code,\n          this.__error_class,\n        ))\n    ) {\n      this._min = min;\n    }\n  }\n\n  /**\n   * Getter for _max\n   * @return {string}\n   */\n  get max(): string {\n    return this._max;\n  }\n\n  /**\n   * Setter for _max\n   * @param {string} max\n   */\n  set max(max: string) {\n    if (\n      checkValidFormat(\n        max,\n        this.__decimal_regex,\n        this.__invalid_type_code,\n        this.__error_class,\n      ) &&\n      (!this.__score_range ||\n        checkValidRange(\n          max,\n          this.__score_range,\n          this.__invalid_range_code,\n          this.__error_class,\n        ))\n    ) {\n      this._max = max;\n    }\n  }\n\n  /**\n   * toJSON for *.score\n   * @return {\n   *    {\n   *      min: string,\n   *      max: string,\n   *      raw: string\n   *    }\n   *    }\n   */\n  toJSON(): {\n    min: string;\n    max: string;\n    raw: string;\n  } {\n    this.jsonString = true;\n    const result = {\n      raw: this.raw,\n      min: this.min,\n      max: this.max,\n    };\n    delete this.jsonString;\n    return result;\n  }\n}\n","/**\n * Class for SCORM 2004's cmi *.score object\n */\nimport { CMIScore } from \"../common/score\";\nimport APIConstants from \"../../constants/api_constants\";\nimport ErrorCodes from \"../../constants/error_codes\";\nimport Regex from \"../../constants/regex\";\nimport { Scorm2004ValidationError } from \"../../exceptions\";\nimport { check2004ValidFormat, check2004ValidRange } from \"./validation\";\n\nexport class Scorm2004CMIScore extends CMIScore {\n  private _scaled = \"\";\n\n  /**\n   * Constructor for cmi *.score\n   */\n  constructor() {\n    super({\n      score_children: APIConstants.scorm2004.score_children,\n      max: \"\",\n      invalidErrorCode: ErrorCodes.scorm2004.READ_ONLY_ELEMENT,\n      invalidTypeCode: ErrorCodes.scorm2004.TYPE_MISMATCH,\n      invalidRangeCode: ErrorCodes.scorm2004.VALUE_OUT_OF_RANGE,\n      decimalRegex: Regex.scorm2004.CMIDecimal,\n      errorClass: Scorm2004ValidationError,\n    });\n  }\n\n  /**\n   * Getter for _scaled\n   * @return {string}\n   */\n  get scaled(): string {\n    return this._scaled;\n  }\n\n  /**\n   * Setter for _scaled\n   * @param {string} scaled\n   */\n  set scaled(scaled: string) {\n    if (\n      check2004ValidFormat(scaled, Regex.scorm2004.CMIDecimal) &&\n      check2004ValidRange(scaled, Regex.scorm2004.scaled_range)\n    ) {\n      this._scaled = scaled;\n    }\n  }\n\n  /**\n   * toJSON for cmi *.score\n   *\n   * @return {\n   *    {\n   *      scaled: string,\n   *      raw: string,\n   *      min: string,\n   *      max: string\n   *    }\n   *  }\n   */\n  toJSON(): {\n    scaled: string;\n    raw: string;\n    min: string;\n    max: string;\n  } {\n    this.jsonString = true;\n    const result = {\n      scaled: this.scaled,\n      raw: this.raw,\n      min: this.min,\n      max: this.max,\n    };\n    delete this.jsonString;\n    return result;\n  }\n}\n","import { CMIArray } from \"../common/array\";\nimport APIConstants from \"../../constants/api_constants\";\nimport ErrorCodes from \"../../constants/error_codes\";\nimport { Scorm2004ValidationError } from \"../../exceptions\";\nimport { BaseCMI } from \"../common/base_cmi\";\nimport { check2004ValidFormat } from \"./validation\";\nimport Regex from \"../../constants/regex\";\n\n/**\n * Class representing SCORM 2004's cmi.comments_from_lms object\n * @extends CMIArray\n */\nexport class CMICommentsFromLMS extends CMIArray {\n  /**\n   * Constructor for cmi.comments_from_lms Array\n   */\n  constructor() {\n    super({\n      children: APIConstants.scorm2004.comments_children,\n      errorCode: ErrorCodes.scorm2004.READ_ONLY_ELEMENT,\n      errorClass: Scorm2004ValidationError,\n    });\n  }\n}\n\n/**\n * Class representing SCORM 2004's cmi.comments_from_learner object\n */\n\nexport class CMICommentsFromLearner extends CMIArray {\n  /**\n   * Constructor for cmi.comments_from_learner Array\n   */\n  constructor() {\n    super({\n      children: APIConstants.scorm2004.comments_children,\n      errorCode: ErrorCodes.scorm2004.READ_ONLY_ELEMENT,\n      errorClass: Scorm2004ValidationError,\n    });\n  }\n}\n\n/**\n * Class representing SCORM 2004's cmi.comments_from_learner.n and cmi.comments_from_lms.n object\n */\n\nexport class CMICommentsObject extends BaseCMI {\n  private _comment = \"\";\n  private _location = \"\";\n  private _timestamp = \"\";\n  private readonly _readOnlyAfterInit: boolean;\n\n  /**\n   * Constructor for cmi.comments_from_learner.n and cmi.comments_from_lms.n\n   * @param {boolean} readOnlyAfterInit\n   */\n  constructor(readOnlyAfterInit: boolean = false) {\n    super();\n    this._comment = \"\";\n    this._location = \"\";\n    this._timestamp = \"\";\n    this._readOnlyAfterInit = readOnlyAfterInit;\n  }\n\n  /**\n   * Getter for _comment\n   * @return {string}\n   */\n  get comment(): string {\n    return this._comment;\n  }\n\n  /**\n   * Setter for _comment\n   * @param {string} comment\n   */\n  set comment(comment: string) {\n    if (this.initialized && this._readOnlyAfterInit) {\n      throw new Scorm2004ValidationError(\n        ErrorCodes.scorm2004.READ_ONLY_ELEMENT,\n      );\n    } else {\n      if (\n        check2004ValidFormat(comment, Regex.scorm2004.CMILangString4000, true)\n      ) {\n        this._comment = comment;\n      }\n    }\n  }\n\n  /**\n   * Getter for _location\n   * @return {string}\n   */\n  get location(): string {\n    return this._location;\n  }\n\n  /**\n   * Setter for _location\n   * @param {string} location\n   */\n  set location(location: string) {\n    if (this.initialized && this._readOnlyAfterInit) {\n      throw new Scorm2004ValidationError(\n        ErrorCodes.scorm2004.READ_ONLY_ELEMENT,\n      );\n    } else {\n      if (check2004ValidFormat(location, Regex.scorm2004.CMIString250)) {\n        this._location = location;\n      }\n    }\n  }\n\n  /**\n   * Getter for _timestamp\n   * @return {string}\n   */\n  get timestamp(): string {\n    return this._timestamp;\n  }\n\n  /**\n   * Setter for _timestamp\n   * @param {string} timestamp\n   */\n  set timestamp(timestamp: string) {\n    if (this.initialized && this._readOnlyAfterInit) {\n      throw new Scorm2004ValidationError(\n        ErrorCodes.scorm2004.READ_ONLY_ELEMENT,\n      );\n    } else {\n      if (check2004ValidFormat(timestamp, Regex.scorm2004.CMITime)) {\n        this._timestamp = timestamp;\n      }\n    }\n  }\n\n  /**\n   * toJSON for cmi.comments_from_learner.n object\n   * @return {\n   *    {\n   *      comment: string,\n   *      location: string,\n   *      timestamp: string\n   *    }\n   *  }\n   */\n  toJSON(): {\n    comment: string;\n    location: string;\n    timestamp: string;\n  } {\n    this.jsonString = true;\n    const result = {\n      comment: this.comment,\n      location: this.location,\n      timestamp: this.timestamp,\n    };\n    delete this.jsonString;\n    return result;\n  }\n}\n","import { CMIArray } from \"../common/array\";\nimport APIConstants from \"../../constants/api_constants\";\nimport ErrorCodes from \"../../constants/error_codes\";\nimport { Scorm2004ValidationError } from \"../../exceptions\";\nimport { BaseCMI } from \"../common/base_cmi\";\nimport { Scorm2004CMIScore } from \"./score\";\nimport { check2004ValidFormat, check2004ValidRange } from \"./validation\";\nimport Regex from \"../../constants/regex\";\n\n/**\n * Class representing SCORM 2004's `cmi.objectives` object\n * @extends CMIArray\n */\nexport class CMIObjectives extends CMIArray {\n  /**\n   * Constructor for `cmi.objectives` Array\n   */\n  constructor() {\n    super({\n      children: APIConstants.scorm2004.objectives_children,\n      errorCode: ErrorCodes.scorm2004.READ_ONLY_ELEMENT,\n      errorClass: Scorm2004ValidationError,\n    });\n  }\n}\n\n/**\n * Class for SCORM 2004's cmi.objectives.n object\n */\nexport class CMIObjectivesObject extends BaseCMI {\n  private _id = \"\";\n  private _success_status = \"unknown\";\n  private _completion_status = \"unknown\";\n  private _progress_measure = \"\";\n  private _description = \"\";\n\n  /**\n   * Constructor for cmi.objectives.n\n   */\n  constructor() {\n    super();\n    this.score = new Scorm2004CMIScore();\n  }\n\n  public score: Scorm2004CMIScore;\n\n  /**\n   * Called when the API has been initialized after the CMI has been created\n   */\n  initialize() {\n    super.initialize();\n    this.score?.initialize();\n  }\n\n  /**\n   * Getter for _id\n   * @return {string}\n   */\n  get id(): string {\n    return this._id;\n  }\n\n  /**\n   * Setter for _id\n   * @param {string} id\n   */\n  set id(id: string) {\n    if (check2004ValidFormat(id, Regex.scorm2004.CMILongIdentifier)) {\n      this._id = id;\n    }\n  }\n\n  /**\n   * Getter for _success_status\n   * @return {string}\n   */\n  get success_status(): string {\n    return this._success_status;\n  }\n\n  /**\n   * Setter for _success_status\n   * @param {string} success_status\n   */\n  set success_status(success_status: string) {\n    if (this.initialized && this._id === \"\") {\n      throw new Scorm2004ValidationError(\n        ErrorCodes.scorm2004.DEPENDENCY_NOT_ESTABLISHED,\n      );\n    } else {\n      if (check2004ValidFormat(success_status, Regex.scorm2004.CMISStatus)) {\n        this._success_status = success_status;\n      }\n    }\n  }\n\n  /**\n   * Getter for _completion_status\n   * @return {string}\n   */\n  get completion_status(): string {\n    return this._completion_status;\n  }\n\n  /**\n   * Setter for _completion_status\n   * @param {string} completion_status\n   */\n  set completion_status(completion_status: string) {\n    if (this.initialized && this._id === \"\") {\n      throw new Scorm2004ValidationError(\n        ErrorCodes.scorm2004.DEPENDENCY_NOT_ESTABLISHED,\n      );\n    } else {\n      if (check2004ValidFormat(completion_status, Regex.scorm2004.CMICStatus)) {\n        this._completion_status = completion_status;\n      }\n    }\n  }\n\n  /**\n   * Getter for _progress_measure\n   * @return {string}\n   */\n  get progress_measure(): string {\n    return this._progress_measure;\n  }\n\n  /**\n   * Setter for _progress_measure\n   * @param {string} progress_measure\n   */\n  set progress_measure(progress_measure: string) {\n    if (this.initialized && this._id === \"\") {\n      throw new Scorm2004ValidationError(\n        ErrorCodes.scorm2004.DEPENDENCY_NOT_ESTABLISHED,\n      );\n    } else {\n      if (\n        check2004ValidFormat(progress_measure, Regex.scorm2004.CMIDecimal) &&\n        check2004ValidRange(progress_measure, Regex.scorm2004.progress_range)\n      ) {\n        this._progress_measure = progress_measure;\n      }\n    }\n  }\n\n  /**\n   * Getter for _description\n   * @return {string}\n   */\n  get description(): string {\n    return this._description;\n  }\n\n  /**\n   * Setter for _description\n   * @param {string} description\n   */\n  set description(description: string) {\n    if (this.initialized && this._id === \"\") {\n      throw new Scorm2004ValidationError(\n        ErrorCodes.scorm2004.DEPENDENCY_NOT_ESTABLISHED,\n      );\n    } else {\n      if (\n        check2004ValidFormat(\n          description,\n          Regex.scorm2004.CMILangString250,\n          true,\n        )\n      ) {\n        this._description = description;\n      }\n    }\n  }\n\n  /**\n   * toJSON for cmi.objectives.n\n   *\n   * @return {\n   *    {\n   *      id: string,\n   *      success_status: string,\n   *      completion_status: string,\n   *      progress_measure: string,\n   *      description: string,\n   *      score: Scorm2004CMIScore\n   *    }\n   *  }\n   */\n  toJSON(): {\n    id: string;\n    success_status: string;\n    completion_status: string;\n    progress_measure: string;\n    description: string;\n    score: Scorm2004CMIScore;\n  } {\n    this.jsonString = true;\n    const result = {\n      id: this.id,\n      success_status: this.success_status,\n      completion_status: this.completion_status,\n      progress_measure: this.progress_measure,\n      description: this.description,\n      score: this.score,\n    };\n    delete this.jsonString;\n    return result;\n  }\n}\n","import APIConstants from \"../../constants/api_constants\";\nimport Regex from \"../../constants/regex\";\nimport ErrorCodes from \"../../constants/error_codes\";\nimport { Scorm2004ValidationError } from \"../../exceptions\";\nimport * as Util from \"../../utilities\";\nimport { BaseRootCMI } from \"../common/base_cmi\";\nimport { check2004ValidFormat, check2004ValidRange } from \"./validation\";\nimport { CMILearnerPreference } from \"./learner_preference\";\nimport { CMIInteractions } from \"./interactions\";\nimport { Scorm2004CMIScore } from \"./score\";\nimport { CMICommentsFromLearner, CMICommentsFromLMS } from \"./comments\";\nimport { CMIObjectives } from \"./objectives\";\n\n/**\n * Class representing cmi object for SCORM 2004\n */\nexport class CMI extends BaseRootCMI {\n  /**\n   * Constructor for the SCORM 2004 cmi object\n   * @param {boolean} initialized\n   */\n  constructor(initialized: boolean = false) {\n    super();\n    this.learner_preference = new CMILearnerPreference();\n    this.score = new Scorm2004CMIScore();\n    this.comments_from_learner = new CMICommentsFromLearner();\n    this.comments_from_lms = new CMICommentsFromLMS();\n    this.interactions = new CMIInteractions();\n    this.objectives = new CMIObjectives();\n    if (initialized) this.initialize();\n  }\n\n  public learner_preference: CMILearnerPreference;\n  public score: Scorm2004CMIScore;\n  public comments_from_learner: CMICommentsFromLearner;\n  public comments_from_lms: CMICommentsFromLMS;\n  public interactions: CMIInteractions;\n  public objectives: CMIObjectives;\n\n  private __version = \"1.0\";\n  private __children = APIConstants.scorm2004.cmi_children;\n  private _completion_status = \"unknown\";\n  private _completion_threshold = \"\";\n  private _credit = \"credit\";\n  private _entry = \"\";\n  private _exit = \"\";\n  private _launch_data = \"\";\n  private _learner_id = \"\";\n  private _learner_name = \"\";\n  private _location = \"\";\n  private _max_time_allowed = \"\";\n  private _mode = \"normal\";\n  private _progress_measure = \"\";\n  private _scaled_passing_score = \"\";\n  private _session_time = \"PT0H0M0S\";\n  private _success_status = \"unknown\";\n  private _suspend_data = \"\";\n  private _time_limit_action = \"continue,no message\";\n  private _total_time = \"\";\n\n  /**\n   * Called when the API has been initialized after the CMI has been created\n   */\n  initialize() {\n    super.initialize();\n    this.learner_preference?.initialize();\n    this.score?.initialize();\n    this.comments_from_learner?.initialize();\n    this.comments_from_lms?.initialize();\n    this.interactions?.initialize();\n    this.objectives?.initialize();\n  }\n\n  /**\n   * Getter for __version\n   * @return {string}\n   * @private\n   */\n  get _version(): string {\n    return this.__version;\n  }\n\n  /**\n   * Setter for __version. Just throws an error.\n   * @param {string} _version\n   * @private\n   */\n  set _version(_version: string) {\n    throw new Scorm2004ValidationError(ErrorCodes.scorm2004.READ_ONLY_ELEMENT);\n  }\n\n  /**\n   * Getter for __children\n   * @return {string}\n   * @private\n   */\n  get _children(): string {\n    return this.__children;\n  }\n\n  /**\n   * Setter for __children. Just throws an error.\n   * @param {number} _children\n   * @private\n   */\n  set _children(_children: number) {\n    throw new Scorm2004ValidationError(ErrorCodes.scorm2004.READ_ONLY_ELEMENT);\n  }\n\n  /**\n   * Getter for _completion_status\n   * @return {string}\n   */\n  get completion_status(): string {\n    return this._completion_status;\n  }\n\n  /**\n   * Setter for _completion_status\n   * @param {string} completion_status\n   */\n  set completion_status(completion_status: string) {\n    if (check2004ValidFormat(completion_status, Regex.scorm2004.CMICStatus)) {\n      this._completion_status = completion_status;\n    }\n  }\n\n  /**\n   * Getter for _completion_threshold\n   * @return {string}\n   */\n  get completion_threshold(): string {\n    return this._completion_threshold;\n  }\n\n  /**\n   * Setter for _completion_threshold. Can only be called before  initialization.\n   * @param {string} completion_threshold\n   */\n  set completion_threshold(completion_threshold: string) {\n    if (this.initialized) {\n      throw new Scorm2004ValidationError(\n        ErrorCodes.scorm2004.READ_ONLY_ELEMENT,\n      );\n    } else {\n      this._completion_threshold = completion_threshold;\n    }\n  }\n\n  /**\n   * Setter for _credit\n   * @return {string}\n   */\n  get credit(): string {\n    return this._credit;\n  }\n\n  /**\n   * Setter for _credit. Can only be called before  initialization.\n   * @param {string} credit\n   */\n  set credit(credit: string) {\n    if (this.initialized) {\n      throw new Scorm2004ValidationError(\n        ErrorCodes.scorm2004.READ_ONLY_ELEMENT,\n      );\n    } else {\n      this._credit = credit;\n    }\n  }\n\n  /**\n   * Getter for _entry\n   * @return {string}\n   */\n  get entry(): string {\n    return this._entry;\n  }\n\n  /**\n   * Setter for _entry. Can only be called before  initialization.\n   * @param {string} entry\n   */\n  set entry(entry: string) {\n    if (this.initialized) {\n      throw new Scorm2004ValidationError(\n        ErrorCodes.scorm2004.READ_ONLY_ELEMENT,\n      );\n    } else {\n      this._entry = entry;\n    }\n  }\n\n  /**\n   * Getter for _exit. Should only be called during JSON export.\n   * @return {string}\n   */\n  get exit(): string {\n    if (!this.jsonString) {\n      throw new Scorm2004ValidationError(\n        ErrorCodes.scorm2004.WRITE_ONLY_ELEMENT,\n      );\n    }\n    return this._exit;\n  }\n\n  /**\n   * Getter for _exit\n   * @param {string} exit\n   */\n  set exit(exit: string) {\n    if (check2004ValidFormat(exit, Regex.scorm2004.CMIExit, true)) {\n      this._exit = exit;\n    }\n  }\n\n  /**\n   * Getter for _launch_data\n   * @return {string}\n   */\n  get launch_data(): string {\n    return this._launch_data;\n  }\n\n  /**\n   * Setter for _launch_data. Can only be called before  initialization.\n   * @param {string} launch_data\n   */\n  set launch_data(launch_data: string) {\n    if (this.initialized) {\n      throw new Scorm2004ValidationError(\n        ErrorCodes.scorm2004.READ_ONLY_ELEMENT,\n      );\n    } else {\n      this._launch_data = launch_data;\n    }\n  }\n\n  /**\n   * Getter for _learner_id\n   * @return {string}\n   */\n  get learner_id(): string {\n    return this._learner_id;\n  }\n\n  /**\n   * Setter for _learner_id. Can only be called before  initialization.\n   * @param {string} learner_id\n   */\n  set learner_id(learner_id: string) {\n    if (this.initialized) {\n      throw new Scorm2004ValidationError(\n        ErrorCodes.scorm2004.READ_ONLY_ELEMENT,\n      );\n    } else {\n      this._learner_id = learner_id;\n    }\n  }\n\n  /**\n   * Getter for _learner_name\n   * @return {string}\n   */\n  get learner_name(): string {\n    return this._learner_name;\n  }\n\n  /**\n   * Setter for _learner_name. Can only be called before  initialization.\n   * @param {string} learner_name\n   */\n  set learner_name(learner_name: string) {\n    if (this.initialized) {\n      throw new Scorm2004ValidationError(\n        ErrorCodes.scorm2004.READ_ONLY_ELEMENT,\n      );\n    } else {\n      this._learner_name = learner_name;\n    }\n  }\n\n  /**\n   * Getter for _location\n   * @return {string}\n   */\n  get location(): string {\n    return this._location;\n  }\n\n  /**\n   * Setter for _location\n   * @param {string} location\n   */\n  set location(location: string) {\n    if (check2004ValidFormat(location, Regex.scorm2004.CMIString1000)) {\n      this._location = location;\n    }\n  }\n\n  /**\n   * Getter for _max_time_allowed\n   * @return {string}\n   */\n  get max_time_allowed(): string {\n    return this._max_time_allowed;\n  }\n\n  /**\n   * Setter for _max_time_allowed. Can only be called before  initialization.\n   * @param {string} max_time_allowed\n   */\n  set max_time_allowed(max_time_allowed: string) {\n    if (this.initialized) {\n      throw new Scorm2004ValidationError(\n        ErrorCodes.scorm2004.READ_ONLY_ELEMENT,\n      );\n    } else {\n      this._max_time_allowed = max_time_allowed;\n    }\n  }\n\n  /**\n   * Getter for _mode\n   * @return {string}\n   */\n  get mode(): string {\n    return this._mode;\n  }\n\n  /**\n   * Setter for _mode. Can only be called before  initialization.\n   * @param {string} mode\n   */\n  set mode(mode: string) {\n    if (this.initialized) {\n      throw new Scorm2004ValidationError(\n        ErrorCodes.scorm2004.READ_ONLY_ELEMENT,\n      );\n    } else {\n      this._mode = mode;\n    }\n  }\n\n  /**\n   * Getter for _progress_measure\n   * @return {string}\n   */\n  get progress_measure(): string {\n    return this._progress_measure;\n  }\n\n  /**\n   * Setter for _progress_measure\n   * @param {string} progress_measure\n   */\n  set progress_measure(progress_measure: string) {\n    if (\n      check2004ValidFormat(progress_measure, Regex.scorm2004.CMIDecimal) &&\n      check2004ValidRange(progress_measure, Regex.scorm2004.progress_range)\n    ) {\n      this._progress_measure = progress_measure;\n    }\n  }\n\n  /**\n   * Getter for _scaled_passing_score\n   * @return {string}\n   */\n  get scaled_passing_score(): string {\n    return this._scaled_passing_score;\n  }\n\n  /**\n   * Setter for _scaled_passing_score. Can only be called before  initialization.\n   * @param {string} scaled_passing_score\n   */\n  set scaled_passing_score(scaled_passing_score: string) {\n    if (this.initialized) {\n      throw new Scorm2004ValidationError(\n        ErrorCodes.scorm2004.READ_ONLY_ELEMENT,\n      );\n    } else {\n      this._scaled_passing_score = scaled_passing_score;\n    }\n  }\n\n  /**\n   * Getter for _session_time. Should only be called during JSON export.\n   * @return {string}\n   */\n  get session_time(): string {\n    if (!this.jsonString) {\n      throw new Scorm2004ValidationError(\n        ErrorCodes.scorm2004.WRITE_ONLY_ELEMENT,\n      );\n    }\n    return this._session_time;\n  }\n\n  /**\n   * Setter for _session_time\n   * @param {string} session_time\n   */\n  set session_time(session_time: string) {\n    if (check2004ValidFormat(session_time, Regex.scorm2004.CMITimespan)) {\n      this._session_time = session_time;\n    }\n  }\n\n  /**\n   * Getter for _success_status\n   * @return {string}\n   */\n  get success_status(): string {\n    return this._success_status;\n  }\n\n  /**\n   * Setter for _success_status\n   * @param {string} success_status\n   */\n  set success_status(success_status: string) {\n    if (check2004ValidFormat(success_status, Regex.scorm2004.CMISStatus)) {\n      this._success_status = success_status;\n    }\n  }\n\n  /**\n   * Getter for _suspend_data\n   * @return {string}\n   */\n  get suspend_data(): string {\n    return this._suspend_data;\n  }\n\n  /**\n   * Setter for _suspend_data\n   * @param {string} suspend_data\n   */\n  set suspend_data(suspend_data: string) {\n    if (\n      check2004ValidFormat(suspend_data, Regex.scorm2004.CMIString64000, true)\n    ) {\n      this._suspend_data = suspend_data;\n    }\n  }\n\n  /**\n   * Getter for _time_limit_action\n   * @return {string}\n   */\n  get time_limit_action(): string {\n    return this._time_limit_action;\n  }\n\n  /**\n   * Setter for _time_limit_action. Can only be called before  initialization.\n   * @param {string} time_limit_action\n   */\n  set time_limit_action(time_limit_action: string) {\n    if (this.initialized) {\n      throw new Scorm2004ValidationError(\n        ErrorCodes.scorm2004.READ_ONLY_ELEMENT,\n      );\n    } else {\n      this._time_limit_action = time_limit_action;\n    }\n  }\n\n  /**\n   * Getter for _total_time\n   * @return {string}\n   */\n  get total_time(): string {\n    return this._total_time;\n  }\n\n  /**\n   * Setter for _total_time. Can only be called before  initialization.\n   * @param {string} total_time\n   */\n  set total_time(total_time: string) {\n    if (this.initialized) {\n      throw new Scorm2004ValidationError(\n        ErrorCodes.scorm2004.READ_ONLY_ELEMENT,\n      );\n    } else {\n      this._total_time = total_time;\n    }\n  }\n\n  /**\n   * Adds the current session time to the existing total time.\n   *\n   * @return {string} ISO8601 Duration\n   */\n  getCurrentTotalTime(): string {\n    let sessionTime = this._session_time;\n    const startTime = this.start_time;\n\n    if (typeof startTime !== \"undefined\" && startTime !== null) {\n      const seconds = new Date().getTime() - startTime;\n      sessionTime = Util.getSecondsAsISODuration(seconds / 1000);\n    }\n\n    return Util.addTwoDurations(\n      this._total_time,\n      sessionTime,\n      Regex.scorm2004.CMITimespan,\n    );\n  }\n\n  /**\n   * toJSON for cmi\n   *\n   * @return {\n   *    {\n   *      comments_from_learner: CMICommentsFromLearner,\n   *      comments_from_lms: CMICommentsFromLMS,\n   *      completion_status: string,\n   *      completion_threshold: string,\n   *      credit: string,\n   *      entry: string,\n   *      exit: string,\n   *      interactions: CMIInteractions,\n   *      launch_data: string,\n   *      learner_id: string,\n   *      learner_name: string,\n   *      learner_preference: CMILearnerPreference,\n   *      location: string,\n   *      max_time_allowed: string,\n   *      mode: string,\n   *      objectives: CMIObjectives,\n   *      progress_measure: string,\n   *      scaled_passing_score: string,\n   *      score: Scorm2004CMIScore,\n   *      session_time: string,\n   *      success_status: string,\n   *      suspend_data: string,\n   *      time_limit_action: string\n   *    }\n   *  }\n   */\n  toJSON(): {\n    comments_from_learner: CMICommentsFromLearner;\n    comments_from_lms: CMICommentsFromLMS;\n    completion_status: string;\n    completion_threshold: string;\n    credit: string;\n    entry: string;\n    exit: string;\n    interactions: CMIInteractions;\n    launch_data: string;\n    learner_id: string;\n    learner_name: string;\n    learner_preference: CMILearnerPreference;\n    location: string;\n    max_time_allowed: string;\n    mode: string;\n    objectives: CMIObjectives;\n    progress_measure: string;\n    scaled_passing_score: string;\n    score: Scorm2004CMIScore;\n    session_time: string;\n    success_status: string;\n    suspend_data: string;\n    time_limit_action: string;\n  } {\n    this.jsonString = true;\n    const result = {\n      comments_from_learner: this.comments_from_learner,\n      comments_from_lms: this.comments_from_lms,\n      completion_status: this.completion_status,\n      completion_threshold: this.completion_threshold,\n      credit: this.credit,\n      entry: this.entry,\n      exit: this.exit,\n      interactions: this.interactions,\n      launch_data: this.launch_data,\n      learner_id: this.learner_id,\n      learner_name: this.learner_name,\n      learner_preference: this.learner_preference,\n      location: this.location,\n      max_time_allowed: this.max_time_allowed,\n      mode: this.mode,\n      objectives: this.objectives,\n      progress_measure: this.progress_measure,\n      scaled_passing_score: this.scaled_passing_score,\n      score: this.score,\n      session_time: this.session_time,\n      success_status: this.success_status,\n      suspend_data: this.suspend_data,\n      time_limit_action: this.time_limit_action,\n    };\n    delete this.jsonString;\n    return result;\n  }\n}\n","const ValidLanguages: string[] = [\n  \"aa\",\n  \"ab\",\n  \"ae\",\n  \"af\",\n  \"ak\",\n  \"am\",\n  \"an\",\n  \"ar\",\n  \"as\",\n  \"av\",\n  \"ay\",\n  \"az\",\n  \"ba\",\n  \"be\",\n  \"bg\",\n  \"bh\",\n  \"bi\",\n  \"bm\",\n  \"bn\",\n  \"bo\",\n  \"br\",\n  \"bs\",\n  \"ca\",\n  \"ce\",\n  \"ch\",\n  \"co\",\n  \"cr\",\n  \"cs\",\n  \"cu\",\n  \"cv\",\n  \"cy\",\n  \"da\",\n  \"de\",\n  \"dv\",\n  \"dz\",\n  \"ee\",\n  \"el\",\n  \"en\",\n  \"eo\",\n  \"es\",\n  \"et\",\n  \"eu\",\n  \"fa\",\n  \"ff\",\n  \"fi\",\n  \"fj\",\n  \"fo\",\n  \"fr\",\n  \"fy\",\n  \"ga\",\n  \"gd\",\n  \"gl\",\n  \"gn\",\n  \"gu\",\n  \"gv\",\n  \"ha\",\n  \"he\",\n  \"hi\",\n  \"ho\",\n  \"hr\",\n  \"ht\",\n  \"hu\",\n  \"hy\",\n  \"hz\",\n  \"ia\",\n  \"id\",\n  \"ie\",\n  \"ig\",\n  \"ii\",\n  \"ik\",\n  \"io\",\n  \"is\",\n  \"it\",\n  \"iu\",\n  \"ja\",\n  \"jv\",\n  \"ka\",\n  \"kg\",\n  \"ki\",\n  \"kj\",\n  \"kk\",\n  \"kl\",\n  \"km\",\n  \"kn\",\n  \"ko\",\n  \"kr\",\n  \"ks\",\n  \"ku\",\n  \"kv\",\n  \"kw\",\n  \"ky\",\n  \"la\",\n  \"lb\",\n  \"lg\",\n  \"li\",\n  \"ln\",\n  \"lo\",\n  \"lt\",\n  \"lu\",\n  \"lv\",\n  \"mg\",\n  \"mh\",\n  \"mi\",\n  \"mk\",\n  \"ml\",\n  \"mn\",\n  \"mo\",\n  \"mr\",\n  \"ms\",\n  \"mt\",\n  \"my\",\n  \"na\",\n  \"nb\",\n  \"nd\",\n  \"ne\",\n  \"ng\",\n  \"nl\",\n  \"nn\",\n  \"no\",\n  \"nr\",\n  \"nv\",\n  \"ny\",\n  \"oc\",\n  \"oj\",\n  \"om\",\n  \"or\",\n  \"os\",\n  \"pa\",\n  \"pi\",\n  \"pl\",\n  \"ps\",\n  \"pt\",\n  \"qu\",\n  \"rm\",\n  \"rn\",\n  \"ro\",\n  \"ru\",\n  \"rw\",\n  \"sa\",\n  \"sc\",\n  \"sd\",\n  \"se\",\n  \"sg\",\n  \"sh\",\n  \"si\",\n  \"sk\",\n  \"sl\",\n  \"sm\",\n  \"sn\",\n  \"so\",\n  \"sq\",\n  \"sr\",\n  \"ss\",\n  \"st\",\n  \"su\",\n  \"sv\",\n  \"sw\",\n  \"ta\",\n  \"te\",\n  \"tg\",\n  \"th\",\n  \"ti\",\n  \"tk\",\n  \"tl\",\n  \"tn\",\n  \"to\",\n  \"tr\",\n  \"ts\",\n  \"tt\",\n  \"tw\",\n  \"ty\",\n  \"ug\",\n  \"uk\",\n  \"ur\",\n  \"uz\",\n  \"ve\",\n  \"vi\",\n  \"vo\",\n  \"wa\",\n  \"wo\",\n  \"xh\",\n  \"yi\",\n  \"yo\",\n  \"za\",\n  \"zh\",\n  \"zu\",\n  \"aar\",\n  \"abk\",\n  \"ave\",\n  \"afr\",\n  \"aka\",\n  \"amh\",\n  \"arg\",\n  \"ara\",\n  \"asm\",\n  \"ava\",\n  \"aym\",\n  \"aze\",\n  \"bak\",\n  \"bel\",\n  \"bul\",\n  \"bih\",\n  \"bis\",\n  \"bam\",\n  \"ben\",\n  \"tib\",\n  \"bod\",\n  \"bre\",\n  \"bos\",\n  \"cat\",\n  \"che\",\n  \"cha\",\n  \"cos\",\n  \"cre\",\n  \"cze\",\n  \"ces\",\n  \"chu\",\n  \"chv\",\n  \"wel\",\n  \"cym\",\n  \"dan\",\n  \"ger\",\n  \"deu\",\n  \"div\",\n  \"dzo\",\n  \"ewe\",\n  \"gre\",\n  \"ell\",\n  \"eng\",\n  \"epo\",\n  \"spa\",\n  \"est\",\n  \"baq\",\n  \"eus\",\n  \"per\",\n  \"fas\",\n  \"ful\",\n  \"fin\",\n  \"fij\",\n  \"fao\",\n  \"fre\",\n  \"fra\",\n  \"fry\",\n  \"gle\",\n  \"gla\",\n  \"glg\",\n  \"grn\",\n  \"guj\",\n  \"glv\",\n  \"hau\",\n  \"heb\",\n  \"hin\",\n  \"hmo\",\n  \"hrv\",\n  \"hat\",\n  \"hun\",\n  \"arm\",\n  \"hye\",\n  \"her\",\n  \"ina\",\n  \"ind\",\n  \"ile\",\n  \"ibo\",\n  \"iii\",\n  \"ipk\",\n  \"ido\",\n  \"ice\",\n  \"isl\",\n  \"ita\",\n  \"iku\",\n  \"jpn\",\n  \"jav\",\n  \"geo\",\n  \"kat\",\n  \"kon\",\n  \"kik\",\n  \"kua\",\n  \"kaz\",\n  \"kal\",\n  \"khm\",\n  \"kan\",\n  \"kor\",\n  \"kau\",\n  \"kas\",\n  \"kur\",\n  \"kom\",\n  \"cor\",\n  \"kir\",\n  \"lat\",\n  \"ltz\",\n  \"lug\",\n  \"lim\",\n  \"lin\",\n  \"lao\",\n  \"lit\",\n  \"lub\",\n  \"lav\",\n  \"mlg\",\n  \"mah\",\n  \"mao\",\n  \"mri\",\n  \"mac\",\n  \"mkd\",\n  \"mal\",\n  \"mon\",\n  \"mol\",\n  \"mar\",\n  \"may\",\n  \"msa\",\n  \"mlt\",\n  \"bur\",\n  \"mya\",\n  \"nau\",\n  \"nob\",\n  \"nde\",\n  \"nep\",\n  \"ndo\",\n  \"dut\",\n  \"nld\",\n  \"nno\",\n  \"nor\",\n  \"nbl\",\n  \"nav\",\n  \"nya\",\n  \"oci\",\n  \"oji\",\n  \"orm\",\n  \"ori\",\n  \"oss\",\n  \"pan\",\n  \"pli\",\n  \"pol\",\n  \"pus\",\n  \"por\",\n  \"que\",\n  \"roh\",\n  \"run\",\n  \"rum\",\n  \"ron\",\n  \"rus\",\n  \"kin\",\n  \"san\",\n  \"srd\",\n  \"snd\",\n  \"sme\",\n  \"sag\",\n  \"slo\",\n  \"sin\",\n  \"slk\",\n  \"slv\",\n  \"smo\",\n  \"sna\",\n  \"som\",\n  \"alb\",\n  \"sqi\",\n  \"srp\",\n  \"ssw\",\n  \"sot\",\n  \"sun\",\n  \"swe\",\n  \"swa\",\n  \"tam\",\n  \"tel\",\n  \"tgk\",\n  \"tha\",\n  \"tir\",\n  \"tuk\",\n  \"tgl\",\n  \"tsn\",\n  \"ton\",\n  \"tur\",\n  \"tso\",\n  \"tat\",\n  \"twi\",\n  \"tah\",\n  \"uig\",\n  \"ukr\",\n  \"urd\",\n  \"uzb\",\n  \"ven\",\n  \"vie\",\n  \"vol\",\n  \"wln\",\n  \"wol\",\n  \"xho\",\n  \"yid\",\n  \"yor\",\n  \"zha\",\n  \"chi\",\n  \"zho\",\n  \"zul\",\n];\nexport default ValidLanguages;\n","import {BaseCMI} from \"../common/base_cmi\";\nimport {Scorm2004ValidationError} from \"../../exceptions\";\nimport ErrorCodes from \"../../constants/error_codes\";\nimport {check2004ValidFormat} from \"./validation\";\nimport Regex from \"../../constants/regex\";\n\n/**\n * Class representing SCORM 2004's adl object\n */\nexport class ADL extends BaseCMI {\n  /**\n   * Constructor for adl\n   */\n  constructor() {\n    super();\n    this.nav = new ADLNav();\n  }\n\n  public nav: ADLNav;\n\n  /**\n   * Called when the API has been initialized after the CMI has been created\n   */\n  initialize() {\n    super.initialize();\n    this.nav?.initialize();\n  }\n\n  /**\n   * toJSON for adl\n   * @return {\n   *    {\n   *      nav: ADLNav\n   *    }\n   *  }\n   */\n  toJSON(): {\n    nav: ADLNav;\n  } {\n    this.jsonString = true;\n    const result = {\n      nav: this.nav,\n    };\n    delete this.jsonString;\n    return result;\n  }\n}\n\n/**\n * Class representing SCORM 2004's `adl.nav` object\n */\n\nclass ADLNav extends BaseCMI {\n  private _request = \"_none_\";\n\n  /**\n   * Constructor for `adl.nav`\n   */\n  constructor() {\n    super();\n    this.request_valid = new ADLNavRequestValid();\n  }\n\n  public request_valid: ADLNavRequestValid;\n\n  /**\n   * Called when the API has been initialized after the CMI has been created\n   */\n  initialize() {\n    super.initialize();\n    this.request_valid?.initialize();\n  }\n\n  /**\n   * Getter for _request\n   * @return {string}\n   */\n  get request(): string {\n    return this._request;\n  }\n\n  /**\n   * Setter for _request\n   * @param {string} request\n   */\n  set request(request: string) {\n    if (check2004ValidFormat(request, Regex.scorm2004.NAVEvent)) {\n      this._request = request;\n    }\n  }\n\n  /**\n   * toJSON for adl.nav\n   *\n   * @return {\n   *    {\n   *      request: string\n   *    }\n   *  }\n   */\n  toJSON(): {\n    request: string;\n  } {\n    this.jsonString = true;\n    const result = {\n      request: this.request,\n    };\n    delete this.jsonString;\n    return result;\n  }\n}\n\n/**\n * Class representing SCORM 2004's adl.nav.request_valid object\n */\n\nclass ADLNavRequestValid extends BaseCMI {\n  private _continue = \"unknown\";\n  private _previous = \"unknown\";\n  choice = class {\n    /**\n     * Check if target is valid\n     * @param {string} _target\n     * @return {string}\n     */\n    _isTargetValid = (_target: string): string => \"unknown\";\n  };\n  jump = class {\n    /**\n     * Check if target is valid\n     * @param {string} _target\n     * @return {string}\n     */\n    _isTargetValid = (_target: string): string => \"unknown\";\n  };\n\n  /**\n   * Constructor for adl.nav.request_valid\n   */\n  constructor() {\n    super();\n  }\n\n  /**\n   * Getter for _continue\n   * @return {string}\n   */\n  get continue(): string {\n    return this._continue;\n  }\n\n  /**\n   * Setter for _continue. Just throws an error.\n   * @param {string} _continue\n   */\n  set continue(_continue: string) {\n    throw new Scorm2004ValidationError(ErrorCodes.scorm2004.READ_ONLY_ELEMENT);\n  }\n\n  /**\n   * Getter for _previous\n   * @return {string}\n   */\n  get previous(): string {\n    return this._previous;\n  }\n\n  /**\n   * Setter for _previous. Just throws an error.\n   * @param {string} _previous\n   */\n  set previous(_previous: string) {\n    throw new Scorm2004ValidationError(ErrorCodes.scorm2004.READ_ONLY_ELEMENT);\n  }\n\n  /**\n   * toJSON for adl.nav.request_valid\n   *\n   * @return {\n   *    {\n   *      previous: string,\n   *      continue: string\n   *    }\n   *  }\n   */\n  toJSON(): {\n    previous: string;\n    continue: string;\n  } {\n    this.jsonString = true;\n    const result = {\n      previous: this._previous,\n      continue: this.continue,\n    };\n    delete this.jsonString;\n    return result;\n  }\n}","import BaseAPI, { RefObject, ResultObject, Settings } from \"./BaseAPI\";\nimport { CMI } from \"./cmi/scorm2004/cmi\";\nimport * as Utilities from \"./utilities\";\nimport APIConstants from \"./constants/api_constants\";\nimport ErrorCodes from \"./constants/error_codes\";\nimport { CorrectResponses, ResponseType } from \"./constants/response_constants\";\nimport ValidLanguages from \"./constants/language_constants\";\nimport Regex from \"./constants/regex\";\nimport { CMIArray } from \"./cmi/common/array\";\nimport { BaseCMI } from \"./cmi/common/base_cmi\";\nimport {\n  CMIInteractionsCorrectResponsesObject,\n  CMIInteractionsObject,\n  CMIInteractionsObjectivesObject,\n} from \"./cmi/scorm2004/interactions\";\nimport { CMICommentsObject } from \"./cmi/scorm2004/comments\";\nimport { CMIObjectivesObject } from \"./cmi/scorm2004/objectives\";\nimport { ADL } from \"./cmi/scorm2004/adl\";\n\n/**\n * API class for SCORM 2004\n */\nexport default class Scorm2004API extends BaseAPI {\n  private _version: string = \"1.0\";\n\n  /**\n   * Constructor for SCORM 2004 API\n   * @param {Settings} settings\n   */\n  constructor(settings?: Settings) {\n    if (settings) {\n      if (settings.mastery_override === undefined) {\n        settings.mastery_override = false;\n      }\n    }\n\n    super(ErrorCodes.scorm2004, settings);\n\n    this.cmi = new CMI();\n    this.adl = new ADL();\n\n    // Rename functions to match 2004 Spec and expose to modules\n    this.Initialize = this.lmsInitialize;\n    this.Terminate = this.lmsFinish;\n    this.GetValue = this.lmsGetValue;\n    this.SetValue = this.lmsSetValue;\n    this.Commit = this.lmsCommit;\n    this.GetLastError = this.lmsGetLastError;\n    this.GetErrorString = this.lmsGetErrorString;\n    this.GetDiagnostic = this.lmsGetDiagnostic;\n  }\n\n  public cmi: CMI;\n  public adl: ADL;\n\n  public Initialize: () => string;\n  public Terminate: () => string;\n  public GetValue: (CMIElement: string) => string;\n  public SetValue: (CMIElement: string, value: any) => string;\n  public Commit: () => string;\n  public GetLastError: () => string;\n  public GetErrorString: (CMIErrorCode: string | number) => string;\n  public GetDiagnostic: (CMIErrorCode: string | number) => string;\n\n  /**\n   * Getter for _version\n   * @return {string}\n   */\n  get version(): string {\n    return this._version;\n  }\n\n  /**\n   * @return {string} bool\n   */\n  lmsInitialize(): string {\n    this.cmi.initialize();\n    return this.initialize(\"Initialize\");\n  }\n\n  /**\n   * @return {string} bool\n   */\n  lmsFinish(): string {\n    const result = this.terminate(\"Terminate\", true);\n\n    if (result === APIConstants.global.SCORM_TRUE) {\n      if (this.adl.nav.request !== \"_none_\") {\n        const navActions: { [key: string]: string } = {\n          continue: \"SequenceNext\",\n          previous: \"SequencePrevious\",\n          choice: \"SequenceChoice\",\n          exit: \"SequenceExit\",\n          exitAll: \"SequenceExitAll\",\n          abandon: \"SequenceAbandon\",\n          abandonAll: \"SequenceAbandonAll\",\n        };\n\n        const action = navActions[this.adl.nav.request];\n        if (action) {\n          this.processListeners(action);\n        }\n      } else if (this.settings.autoProgress) {\n        this.processListeners(\"SequenceNext\");\n      }\n    }\n\n    return result;\n  }\n\n  /**\n   * @param {string} CMIElement\n   * @return {string}\n   */\n  lmsGetValue(CMIElement: string): string {\n    return this.getValue(\"GetValue\", true, CMIElement);\n  }\n\n  /**\n   * @param {string} CMIElement\n   * @param {any} value\n   * @return {string}\n   */\n  lmsSetValue(CMIElement: string, value: any): string {\n    return this.setValue(\"SetValue\", \"Commit\", true, CMIElement, value);\n  }\n\n  /**\n   * Orders LMS to store all content parameters\n   *\n   * @return {string} bool\n   */\n  lmsCommit(): string {\n    return this.commit(\"Commit\");\n  }\n\n  /**\n   * Returns last error code\n   *\n   * @return {string}\n   */\n  lmsGetLastError(): string {\n    return this.getLastError(\"GetLastError\");\n  }\n\n  /**\n   * Returns the errorNumber error description\n   *\n   * @param {(string|number)} CMIErrorCode\n   * @return {string}\n   */\n  lmsGetErrorString(CMIErrorCode: string | number): string {\n    return this.getErrorString(\"GetErrorString\", CMIErrorCode);\n  }\n\n  /**\n   * Returns a comprehensive description of the errorNumber error.\n   *\n   * @param {(string|number)} CMIErrorCode\n   * @return {string}\n   */\n  lmsGetDiagnostic(CMIErrorCode: string | number): string {\n    return this.getDiagnostic(\"GetDiagnostic\", CMIErrorCode);\n  }\n\n  /**\n   * Sets a value on the CMI Object\n   *\n   * @param {string} CMIElement\n   * @param {any} value\n   * @return {string}\n   */\n  setCMIValue(CMIElement: string, value: any): string {\n    return this._commonSetCMIValue(\"SetValue\", true, CMIElement, value);\n  }\n\n  /**\n   * Gets or builds a new child element to add to the array.\n   *\n   * @param {string} CMIElement\n   * @param {any} value\n   * @param {boolean} foundFirstIndex\n   * @return {BaseCMI|null}\n   */\n  getChildElement(\n    CMIElement: string,\n    value: any,\n    foundFirstIndex: boolean,\n  ): BaseCMI | null {\n    if (this.stringMatches(CMIElement, \"cmi\\\\.objectives\\\\.\\\\d+\")) {\n      return new CMIObjectivesObject();\n    }\n\n    if (foundFirstIndex) {\n      if (\n        this.stringMatches(\n          CMIElement,\n          \"cmi\\\\.interactions\\\\.\\\\d+\\\\.correct_responses\\\\.\\\\d+\",\n        )\n      ) {\n        return this.createCorrectResponsesObject(CMIElement, value);\n      } else if (\n        this.stringMatches(\n          CMIElement,\n          \"cmi\\\\.interactions\\\\.\\\\d+\\\\.objectives\\\\.\\\\d+\",\n        )\n      ) {\n        return new CMIInteractionsObjectivesObject();\n      }\n    } else if (this.stringMatches(CMIElement, \"cmi\\\\.interactions\\\\.\\\\d+\")) {\n      return new CMIInteractionsObject();\n    }\n\n    if (this.stringMatches(CMIElement, \"cmi\\\\.comments_from_learner\\\\.\\\\d+\")) {\n      return new CMICommentsObject();\n    } else if (\n      this.stringMatches(CMIElement, \"cmi\\\\.comments_from_lms\\\\.\\\\d+\")\n    ) {\n      return new CMICommentsObject(true);\n    }\n\n    return null;\n  }\n\n  private createCorrectResponsesObject(\n    CMIElement: string,\n    value: any,\n  ): BaseCMI | null {\n    const parts = CMIElement.split(\".\");\n    const index = Number(parts[2]);\n    const interaction = this.cmi.interactions.childArray[index];\n\n    if (this.isInitialized()) {\n      if (!interaction.type) {\n        this.throwSCORMError(ErrorCodes.scorm2004.DEPENDENCY_NOT_ESTABLISHED);\n      } else {\n        this.checkDuplicateChoiceResponse(interaction, value);\n        const response_type = CorrectResponses[interaction.type];\n        if (response_type) {\n          this.checkValidResponseType(response_type, value, interaction.type);\n        } else {\n          this.throwSCORMError(\n            ErrorCodes.scorm2004.GENERAL_SET_FAILURE,\n            \"Incorrect Response Type: \" + interaction.type,\n          );\n        }\n      }\n    }\n\n    if (this.lastErrorCode === \"0\") {\n      return new CMIInteractionsCorrectResponsesObject();\n    }\n\n    return null;\n  }\n\n  /**\n   * Checks for valid response types\n   * @param {object} response_type\n   * @param {any} value\n   * @param {string} interaction_type\n   */\n  checkValidResponseType(\n    response_type: ResponseType,\n    value: any,\n    interaction_type: string,\n  ) {\n    let nodes = [];\n    if (response_type?.delimiter) {\n      nodes = String(value).split(response_type.delimiter);\n    } else {\n      nodes[0] = value;\n    }\n\n    if (nodes.length > 0 && nodes.length <= response_type.max) {\n      this.checkCorrectResponseValue(interaction_type, nodes, value);\n    } else if (nodes.length > response_type.max) {\n      this.throwSCORMError(\n        ErrorCodes.scorm2004.GENERAL_SET_FAILURE,\n        \"Data Model Element Pattern Too Long\",\n      );\n    }\n  }\n\n  /**\n   * Checks for duplicate 'choice' responses.\n   * @param {CMIInteractionsObject} interaction\n   * @param {any} value\n   */\n  checkDuplicateChoiceResponse(interaction: CMIInteractionsObject, value: any) {\n    const interaction_count = interaction.correct_responses._count;\n    if (interaction.type === \"choice\") {\n      for (\n        let i = 0;\n        i < interaction_count && this.lastErrorCode === \"0\";\n        i++\n      ) {\n        const response = interaction.correct_responses.childArray[i];\n        if (response.pattern === value) {\n          this.throwSCORMError(ErrorCodes.scorm2004.GENERAL_SET_FAILURE);\n        }\n      }\n    }\n  }\n\n  /**\n   * Validate correct response.\n   * @param {string} CMIElement\n   * @param {*} value\n   */\n  validateCorrectResponse(CMIElement: string, value: any) {\n    const parts = CMIElement.split(\".\");\n    const index = Number(parts[2]);\n    const pattern_index = Number(parts[4]);\n    const interaction = this.cmi.interactions.childArray[index];\n\n    const interaction_count = interaction.correct_responses._count;\n    this.checkDuplicateChoiceResponse(interaction, value);\n\n    const response_type = CorrectResponses[interaction.type];\n    if (\n      typeof response_type.limit === \"undefined\" ||\n      interaction_count <= response_type.limit\n    ) {\n      this.checkValidResponseType(response_type, value, interaction.type);\n\n      if (\n        (this.lastErrorCode === \"0\" &&\n          (!response_type.duplicate ||\n            !this.checkDuplicatedPattern(\n              interaction.correct_responses,\n              pattern_index,\n              value,\n            ))) ||\n        (this.lastErrorCode === \"0\" && value === \"\")\n      ) {\n        // do nothing, we want the inverse\n      } else {\n        if (this.lastErrorCode === \"0\") {\n          this.throwSCORMError(\n            ErrorCodes.scorm2004.GENERAL_SET_FAILURE,\n            \"Data Model Element Pattern Already Exists\",\n          );\n        }\n      }\n    } else {\n      this.throwSCORMError(\n        ErrorCodes.scorm2004.GENERAL_SET_FAILURE,\n        \"Data Model Element Collection Limit Reached\",\n      );\n    }\n  }\n\n  /**\n   * Gets a value from the CMI Object\n   *\n   * @param {string} CMIElement\n   * @return {*}\n   */\n  getCMIValue(CMIElement: string): any {\n    return this._commonGetCMIValue(\"GetValue\", true, CMIElement);\n  }\n\n  /**\n   * Returns the message that corresponds to errorNumber.\n   *\n   * @param {(string|number)} errorNumber\n   * @param {boolean} detail\n   * @return {string}\n   */\n  getLmsErrorMessageDetails(\n    errorNumber: string | number,\n    detail: boolean,\n  ): string {\n    let basicMessage = \"\";\n    let detailMessage = \"\";\n\n    // Set error number to string since inconsistent from modules if string or number\n    errorNumber = String(errorNumber);\n    if (APIConstants.scorm2004.error_descriptions[errorNumber]) {\n      basicMessage =\n        APIConstants.scorm2004.error_descriptions[errorNumber].basicMessage;\n      detailMessage =\n        APIConstants.scorm2004.error_descriptions[errorNumber].detailMessage;\n    }\n\n    return detail ? detailMessage : basicMessage;\n  }\n\n  /**\n   * Check to see if a correct_response value has been duplicated\n   * @param {CMIArray} correct_response\n   * @param {number} current_index\n   * @param {*} value\n   * @return {boolean}\n   */\n  checkDuplicatedPattern(\n    correct_response: CMIArray,\n    current_index: number,\n    value: any,\n  ): boolean {\n    let found = false;\n    const count = correct_response._count;\n    for (let i = 0; i < count && !found; i++) {\n      if (i !== current_index && correct_response.childArray[i] === value) {\n        found = true;\n      }\n    }\n    return found;\n  }\n\n  /**\n   * Checks for a valid correct_response value\n   * @param {string} interaction_type\n   * @param {Array} nodes\n   * @param {*} value\n   */\n  checkCorrectResponseValue(\n    interaction_type: string,\n    nodes: Array<any>,\n    value: any,\n  ) {\n    const response = CorrectResponses[interaction_type];\n    const formatRegex = new RegExp(response.format);\n    for (let i = 0; i < nodes.length && this.lastErrorCode === \"0\"; i++) {\n      if (\n        interaction_type.match(\n          \"^(fill-in|long-fill-in|matching|performance|sequencing)$\",\n        )\n      ) {\n        nodes[i] = this.removeCorrectResponsePrefixes(nodes[i]);\n      }\n\n      if (response?.delimiter2) {\n        const values = nodes[i].split(response.delimiter2);\n        if (values.length === 2) {\n          const matches = values[0].match(formatRegex);\n          if (!matches) {\n            this.throwSCORMError(ErrorCodes.scorm2004.TYPE_MISMATCH);\n          } else {\n            if (\n              !response.format2 ||\n              !values[1].match(new RegExp(response.format2))\n            ) {\n              this.throwSCORMError(ErrorCodes.scorm2004.TYPE_MISMATCH);\n            }\n          }\n        } else {\n          this.throwSCORMError(ErrorCodes.scorm2004.TYPE_MISMATCH);\n        }\n      } else {\n        const matches = nodes[i].match(formatRegex);\n        if (\n          (!matches && value !== \"\") ||\n          (!matches && interaction_type === \"true-false\")\n        ) {\n          this.throwSCORMError(ErrorCodes.scorm2004.TYPE_MISMATCH);\n        } else {\n          if (interaction_type === \"numeric\" && nodes.length > 1) {\n            if (Number(nodes[0]) > Number(nodes[1])) {\n              this.throwSCORMError(ErrorCodes.scorm2004.TYPE_MISMATCH);\n            }\n          } else {\n            if (nodes[i] !== \"\" && response.unique) {\n              for (let j = 0; j < i && this.lastErrorCode === \"0\"; j++) {\n                if (nodes[i] === nodes[j]) {\n                  this.throwSCORMError(ErrorCodes.scorm2004.TYPE_MISMATCH);\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Remove prefixes from correct_response\n   * @param {string} node\n   * @return {*}\n   */\n  removeCorrectResponsePrefixes(node: string): any {\n    let seenOrder = false;\n    let seenCase = false;\n    let seenLang = false;\n\n    const prefixRegex = new RegExp(\n      \"^({(lang|case_matters|order_matters)=([^}]+)})\",\n    );\n    let matches = node.match(prefixRegex);\n    let langMatches = null;\n    while (matches) {\n      switch (matches[2]) {\n        case \"lang\":\n          langMatches = node.match(Regex.scorm2004.CMILangcr);\n          if (langMatches) {\n            const lang = langMatches[3];\n            if (lang !== undefined && lang.length > 0) {\n              if (!ValidLanguages.includes(lang.toLowerCase())) {\n                this.throwSCORMError(ErrorCodes.scorm2004.TYPE_MISMATCH);\n              }\n            }\n          }\n          seenLang = true;\n          break;\n        case \"case_matters\":\n          if (!seenLang && !seenOrder && !seenCase) {\n            if (matches[3] !== \"true\" && matches[3] !== \"false\") {\n              this.throwSCORMError(ErrorCodes.scorm2004.TYPE_MISMATCH);\n            }\n          }\n\n          seenCase = true;\n          break;\n        case \"order_matters\":\n          if (!seenCase && !seenLang && !seenOrder) {\n            if (matches[3] !== \"true\" && matches[3] !== \"false\") {\n              this.throwSCORMError(ErrorCodes.scorm2004.TYPE_MISMATCH);\n            }\n          }\n\n          seenOrder = true;\n          break;\n      }\n      node = node.substring(matches[1].length);\n      matches = node.match(prefixRegex);\n    }\n\n    return node;\n  }\n\n  /**\n   * Replace the whole API with another\n   * @param {Scorm2004API} newAPI\n   */\n  replaceWithAnotherScormAPI(newAPI: Scorm2004API) {\n    // Data Model\n    this.cmi = newAPI.cmi;\n    this.adl = newAPI.adl;\n  }\n\n  /**\n   * Render the cmi object to the proper format for LMS commit\n   *\n   * @param {boolean} terminateCommit\n   * @return {object|Array}\n   */\n  renderCommitCMI(terminateCommit: boolean): object | Array<any> {\n    const cmiExport: RefObject = this.renderCMIToJSONObject();\n\n    if (terminateCommit) {\n      cmiExport.cmi.total_time = this.cmi.getCurrentTotalTime();\n    }\n\n    const result = [];\n    const flattened: RefObject = Utilities.flatten(cmiExport);\n    switch (this.settings.dataCommitFormat) {\n      case \"flattened\":\n        return Utilities.flatten(cmiExport);\n      case \"params\":\n        for (const item in flattened) {\n          if ({}.hasOwnProperty.call(flattened, item)) {\n            result.push(`${item}=${flattened[item]}`);\n          }\n        }\n        return result;\n      case \"json\":\n      default:\n        return cmiExport;\n    }\n  }\n\n  /**\n   * Attempts to store the data to the LMS\n   *\n   * @param {boolean} terminateCommit\n   * @return {ResultObject}\n   */\n  storeData(terminateCommit: boolean): ResultObject {\n    if (terminateCommit) {\n      if (this.cmi.mode === \"normal\") {\n        if (this.cmi.credit === \"credit\") {\n          if (this.cmi.completion_threshold && this.cmi.progress_measure) {\n            if (this.cmi.progress_measure >= this.cmi.completion_threshold) {\n              this.cmi.completion_status = \"completed\";\n            } else {\n              this.cmi.completion_status = \"incomplete\";\n            }\n          }\n          if (this.cmi.scaled_passing_score && this.cmi.score.scaled) {\n            if (this.cmi.score.scaled >= this.cmi.scaled_passing_score) {\n              this.cmi.success_status = \"passed\";\n            } else {\n              this.cmi.success_status = \"failed\";\n            }\n          }\n        }\n      }\n    }\n\n    let navRequest = false;\n    if (\n      this.adl.nav.request !== this.startingData?.adl?.nav?.request &&\n      this.adl.nav.request !== \"_none_\"\n    ) {\n      this.adl.nav.request = encodeURIComponent(this.adl.nav.request);\n      navRequest = true;\n    }\n\n    const commitObject = this.renderCommitCMI(\n      terminateCommit || this.settings.alwaysSendTotalTime,\n    );\n\n    if (this.apiLogLevel === APIConstants.global.LOG_LEVEL_DEBUG) {\n      console.debug(\n        \"Commit (terminated: \" + (terminateCommit ? \"yes\" : \"no\") + \"): \",\n      );\n      console.debug(commitObject);\n    }\n    if (typeof this.settings.lmsCommitUrl === \"string\") {\n      const result = this.processHttpRequest(\n        this.settings.lmsCommitUrl,\n        commitObject,\n        terminateCommit,\n      );\n\n      // check if this is a sequencing call, and then call the necessary JS\n      {\n        if (\n          navRequest &&\n          result.navRequest !== undefined &&\n          result.navRequest !== \"\"\n        ) {\n          Function(`\"use strict\";(() => { ${result.navRequest} })()`)();\n        }\n      }\n      return result;\n    } else {\n      return {\n        result: APIConstants.global.SCORM_TRUE,\n        errorCode: 0,\n      };\n    }\n  }\n}\n","import Scorm2004API from \"../Scorm2004API.ts\";\n\nwindow.Scorm2004API = Scorm2004API;\n"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","__extends","TypeError","String","__","this","constructor","create","__assign","assign","t","s","i","n","arguments","length","apply","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","__generator","body","f","y","_","label","sent","trys","ops","g","Iterator","verb","Symbol","iterator","v","op","pop","push","SuppressedError","errorCode","toString","_errorCode","name","setMessage","message","Error","BaseScormValidationError","jsonString","_initialized","_start_time","initialize","setStartTime","Date","getTime","BaseCMI","global","GENERAL","INITIALIZATION_FAILED","INITIALIZED","TERMINATED","TERMINATION_FAILURE","TERMINATION_BEFORE_INIT","MULTIPLE_TERMINATION","RETRIEVE_BEFORE_INIT","RETRIEVE_AFTER_TERM","STORE_BEFORE_INIT","STORE_AFTER_TERM","COMMIT_BEFORE_INIT","COMMIT_AFTER_TERM","ARGUMENT_ERROR","CHILDREN_ERROR","COUNT_ERROR","GENERAL_GET_FAILURE","GENERAL_SET_FAILURE","GENERAL_COMMIT_FAILURE","UNDEFINED_DATA_MODEL","UNIMPLEMENTED_ELEMENT","VALUE_NOT_INITIALIZED","INVALID_SET_VALUE","READ_ONLY_ELEMENT","WRITE_ONLY_ELEMENT","TYPE_MISMATCH","VALUE_OUT_OF_RANGE","DEPENDENCY_NOT_ESTABLISHED","scorm12","scorm2004","MULTIPLE_TERMINATIONS","scorm12_error_codes","params","__children","children","_errorClass","errorClass","BaseScorm12ValidationError","childArray","_children","_count","toJSON","cmi_children","core_children","score_children","comments_children","objectives_children","correct_responses_children","student_data_children","student_preference_children","interactions_children","error_descriptions","basicMessage","detailMessage","SCORM_TRUE","SCORM_FALSE","STATE_NOT_INITIALIZED","STATE_INITIALIZED","STATE_TERMINATED","LOG_LEVEL_DEBUG","LOG_LEVEL_INFO","LOG_LEVEL_WARNING","LOG_LEVEL_ERROR","LOG_LEVEL_NONE","aicc","student_demographics_children","tries_children","attempt_records_children","paths_children","scorm12_errors","aicc_errors","scorm2004_errors","errorMessage","detailedMessage","_detailedMessage","_errorMessage","ValidationError","SECONDS_PER_HOUR","designations","D","H","M","S","getSecondsAsISODuration","seconds","duration","remainder","designationsKey","current_seconds","Math","floor","countDecimals","Number","toFixed","indexOf","getDurationAsSeconds","durationRegex","RegExp","match","exec","years","days","hours","minutes","flatten","data","recurse","cur","prop","isArray","l","isEmpty","num","split","global_constants","DefaultSettings","autocommit","autocommitSeconds","asyncCommit","sendBeaconCommit","lmsCommitUrl","dataCommitFormat","commitRequestDataType","autoProgress","logLevel","selfReportSessionTime","alwaysSendTotalTime","strict_errors","xhrHeaders","xhrWithCredentials","responseHandler","response","JSON","parse","text","httpResult","status","requestHandler","commitObject","onLogMessage","messageLevel","logMessage","console","error","warn","info","debug","log","error_codes","settings","_settings","BaseAPI","currentState","lastErrorCode","listenerArray","_error_codes","apiLogLevel","callbackName","initializeMessage","terminationMessage","returnValue","isInitialized","throwSCORMError","isTerminated","cmi","processListeners","apiLog","clearSCORMError","terminate","checkTerminated","checkState","storeData","getValue","CMIElement","getCMIValue","handleValueAccessException","setValue","commitCallback","undefined","setCMIValue","_timeout","scheduleCommit","commit","clearScheduledCommit","getLastError","getErrorString","CMIErrorCode","getLmsErrorMessageDetails","getDiagnostic","beforeInitError","afterTermError","isNotInitialized","functionName","formatMessage","messageString","fillChars","j","stringMatches","str","tester","_checkObjectHasProperty","refObject","attribute","getOwnPropertyDescriptor","getPrototypeOf","_errorNumber","_detail","_CMIElement","_value","_commonSetCMIValue","methodName","structure","foundFirstIndex","invalidErrorMessage","invalidErrorCode","idx","substring","_isTargetValid","validateCorrectResponse","CMIArray","index","parseInt","isNaN","item","newChild","getChildElement","initialized","_commonGetCMIValue","uninitializedErrorMessage","target","on","listenerName","callback","listenerFunctions","listenerSplit","replace","off","removeIndex","findIndex","obj","splice","clear","filter","listener","functionsMatch","listenerHasCMIElement","CMIElementsMatch","errorNumber","success","loadFromFlattenedJSON","json","int_pattern","obj_pattern","keys","map","key","sort","test","a","c","testPattern","forEach","element","loadFromJSON","regex","m","unflatten","a_pattern","c_match","a_match","a_num","c_num","startingData","currentCMIElement","renderCMIToJSONString","stringify","renderCMIToJSONObject","processHttpRequest","url","immediate","api","genericError","debouncedProcess","func","wait","timeout","context","callNow","clearTimeout","setTimeout","args","debounce","fetch","method","join","headers","credentials","keepalive","when","ScheduledCommit","cancel","API","_cancelled","_API","wrapper","bind","_callback","CMIString256","CMIString4096","CMITime","CMITimespan","CMIInteger","CMISInteger","CMIDecimal","CMIIdentifier","CMIFeedback","CMIIndex","CMIStatus","CMIStatus2","CMIExit","CMIType","CMIResult","NAVEvent","score_range","audio_range","speed_range","weighting_range","text_range","CMIString200","CMIString250","CMIString1000","CMIString4000","CMIString64000","CMILang","CMILangString250","CMILangcr","CMILangString250cr","CMILangString4000","CMIShortIdentifier","CMILongIdentifier","CMIIndexStore","CMICStatus","CMISStatus","NAVBoolean","NAVTarget","scaled_range","progress_range","checkValidFormat","regexPattern","allowEmptyString","formatRegex","matches","checkValidRange","rangePattern","ranges","check2004ValidFormat","Scorm2004ValidationError","check2004ValidRange","_audio_level","_language","_delivery_speed","_audio_captioning","audio_level","language","delivery_speed","audio_captioning","scorm2004_regex","LearnerResponses","format","max","delimiter","unique","choice","matching","format2","delimiter2","performance","sequencing","likert","numeric","other","CorrectResponses","duplicate","limit","delimiter3","_id","_type","_timestamp","_weighting","_learner_response","_result","_latency","_description","objectives","correct_responses","id","type","timestamp","weighting","learner_response","nodes","response_type","values","latency","description","_pattern","pattern","scorm12_constants","scorm12_regex","invalidTypeCode","invalidRangeCode","decimalRegex","_scaled","scaled","raw","min","_raw","_min","__score_range","_max","__invalid_error_code","__invalid_type_code","__invalid_range_code","__decimal_regex","__error_class","readOnlyAfterInit","_comment","_location","_readOnlyAfterInit","comment","location","_success_status","_completion_status","_progress_measure","score","Scorm2004CMIScore","success_status","completion_status","progress_measure","__version","_completion_threshold","_credit","_entry","_exit","_launch_data","_learner_id","_learner_name","_max_time_allowed","_mode","_scaled_passing_score","_session_time","_suspend_data","_time_limit_action","_total_time","learner_preference","CMILearnerPreference","comments_from_learner","CMICommentsFromLearner","comments_from_lms","CMICommentsFromLMS","interactions","CMIInteractions","CMIObjectives","_version","completion_threshold","credit","entry","exit","launch_data","learner_id","learner_name","max_time_allowed","mode","scaled_passing_score","session_time","suspend_data","time_limit_action","total_time","getCurrentTotalTime","sessionTime","startTime","start_time","first","second","BaseRootCMI","nav","ADLNav","_request","request_valid","ADLNavRequestValid","request","_continue","_previous","_target","jump","previous","continue","mastery_override","CMI","adl","ADL","Initialize","lmsInitialize","Terminate","lmsFinish","GetValue","lmsGetValue","SetValue","lmsSetValue","Commit","lmsCommit","GetLastError","lmsGetLastError","GetErrorString","lmsGetErrorString","GetDiagnostic","lmsGetDiagnostic","action","exitAll","abandon","abandonAll","CMIObjectivesObject","createCorrectResponsesObject","CMIInteractionsObjectivesObject","CMIInteractionsObject","CMICommentsObject","parts","interaction","checkDuplicateChoiceResponse","checkValidResponseType","CMIInteractionsCorrectResponsesObject","interaction_type","checkCorrectResponseValue","interaction_count","pattern_index","checkDuplicatedPattern","detail","correct_response","current_index","found","count","removeCorrectResponsePrefixes","node","seenOrder","seenCase","seenLang","prefixRegex","langMatches","lang","includes","toLowerCase","replaceWithAnotherScormAPI","newAPI","renderCommitCMI","terminateCommit","cmiExport","flattened","navRequest","encodeURIComponent","Function","window","Scorm2004API"],"sourceRoot":""}