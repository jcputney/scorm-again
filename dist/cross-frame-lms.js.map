{"version":3,"file":"cross-frame-lms.js","sources":["../src/CrossFrameLMS.ts"],"sourcesContent":["// src/CrossFrameLMS.ts\nimport { MessageData, MessageResponse } from \"./types/CrossFrame\";\nimport { IBaseAPI } from \"./interfaces/IBaseAPI\";\n\n/**\n * Server‐side SCORM adapter running in your LMS frame (lms.example.com).\n * Listens for postMessage from child (content) frames, invokes real API,\n * and posts back { messageId, result, error }.\n */\nexport default class CrossFrameLMS {\n  private readonly _api: IBaseAPI;\n  private readonly _origin: string;\n\n  constructor(api: IBaseAPI, targetOrigin: string = \"*\") {\n    this._api = api;\n    this._origin = targetOrigin;\n    window.addEventListener(\"message\", this._onMessage.bind(this));\n  }\n\n  private _onMessage(ev: MessageEvent) {\n    // Validate the message origin unless all origins are allowed\n    if (this._origin !== \"*\" && ev.origin !== this._origin) {\n      return;\n    }\n\n    const msg = ev.data as MessageData;\n    if (!msg?.messageId || !msg.method || !ev.source) return;\n\n    this._process(msg, ev.source as Window);\n  }\n\n  private _process(msg: MessageData, source: Window) {\n    const sendResponse = (result?: any, error?: { message: string; stack?: string }) => {\n      const resp: MessageResponse = { messageId: msg.messageId };\n      if (result !== undefined) resp.result = result;\n      if (error !== undefined) resp.error = error;\n      source.postMessage(resp, this._origin);\n    };\n\n    try {\n      const fn = (this._api as any)[msg.method];\n      if (typeof fn !== \"function\") {\n        sendResponse(undefined, { message: `Method ${msg.method} not found` });\n        return;\n      }\n\n      const result = fn.apply(this._api, msg.params);\n\n      if (result && typeof (result as Promise<any>).then === \"function\") {\n        (result as Promise<any>)\n          .then((r) => sendResponse(r))\n          .catch((e: any) => sendResponse(undefined, { message: e.message, stack: e.stack }));\n      } else {\n        sendResponse(result);\n      }\n    } catch (e: any) {\n      sendResponse(undefined, { message: e.message, stack: e.stack });\n    }\n  }\n}\n"],"names":["CrossFrameLMS","constructor","api","targetOrigin","arguments","length","undefined","_api","_origin","window","addEventListener","_onMessage","bind","ev","origin","msg","data","messageId","method","source","_process","sendResponse","result","error","resp","postMessage","fn","message","apply","params","then","r","catch","e","stack"],"mappings":";;;EASA,MAAqBA,aAAc,CAAA;IAIjCC,WAAAA,CAAYC,GAAe,EAA4B;EAAA,IAAA,IAA5BC,YAAA,GAAAC,SAAA,CAAAC,MAAA,GAAA,CAAA,IAAAD,SAAA,CAAA,CAAA,CAAA,KAAAE,SAAA,GAAAF,SAAA,CAAA,CAAA,CAAA,GAAuB,GAAK;MACrD,IAAA,CAAKG,IAAO,GAAAL,GAAA;MACZ,IAAA,CAAKM,OAAU,GAAAL,YAAA;EACfM,IAAAA,MAAA,CAAOC,iBAAiB,SAAW,EAAA,IAAA,CAAKC,UAAW,CAAAC,IAAA,CAAK,IAAI,CAAC,CAAA;EAC/D;IAEQD,WAAWE,EAAkB,EAAA;EAEnC,IAAA,IAAI,KAAKL,OAAY,KAAA,GAAA,IAAOK,EAAG,CAAAC,MAAA,KAAW,KAAKN,OAAS,EAAA;EACtD,MAAA;EACF;EAEA,IAAA,MAAMO,MAAMF,EAAG,CAAAG,IAAA;EACX,IAAA,IAAA,CAACD,KAAKE,SAAa,IAAA,CAACF,IAAIG,MAAU,IAAA,CAACL,GAAGM,MAAQ,EAAA;MAE7C,IAAA,CAAAC,QAAA,CAASL,GAAK,EAAAF,EAAA,CAAGM,MAAgB,CAAA;EACxC;EAEQC,EAAAA,QAAAA,CAASL,KAAkBI,MAAgB,EAAA;EAC3C,IAAA,MAAAE,YAAA,GAAeA,CAACC,MAAA,EAAcC,KAAgD,KAAA;EAClF,MAAA,MAAMC,IAAwB,GAAA;UAAEP,SAAW,EAAAF,GAAA,CAAIE;SAAU;QACrD,IAAAK,MAAA,KAAW,MAAW,EAAAE,IAAA,CAAKF,MAAS,GAAAA,MAAA;QACpC,IAAAC,KAAA,KAAU,MAAW,EAAAC,IAAA,CAAKD,KAAQ,GAAAA,KAAA;QAC/BJ,MAAA,CAAAM,WAAA,CAAYD,IAAM,EAAA,IAAA,CAAKhB,OAAO,CAAA;OACvC;MAEI,IAAA;QACF,MAAMkB,EAAM,GAAA,IAAA,CAAKnB,IAAa,CAAAQ,GAAA,CAAIG,MAAM,CAAA;EACpC,MAAA,IAAA,OAAOQ,OAAO,UAAY,EAAA;UAC5BL,YAAA,CAAa,QAAW;EAAEM,UAAAA,OAAA,EAAS,CAAA,OAAA,EAAUZ,GAAI,CAAAG,MAAM,CAAA,UAAA;EAAa,SAAC,CAAA;EACrE,QAAA;EACF;EAEA,MAAA,MAAMI,SAASI,EAAG,CAAAE,KAAA,CAAM,IAAK,CAAArB,IAAA,EAAMQ,IAAIc,MAAM,CAAA;QAE7C,IAAIP,MAAU,IAAA,OAAQA,MAAwB,CAAAQ,IAAA,KAAS,UAAY,EAAA;EAChER,QAAAA,MAAA,CACEQ,KAAMC,CAAA,IAAMV,aAAaU,CAAC,CAAC,EAC3BC,KAAM,CAACC,KAAWZ,YAAa,CAAA,KAAA,CAAA,EAAW;YAAEM,OAAS,EAAAM,CAAA,CAAEN;YAASO,KAAO,EAAAD,CAAA,CAAEC;EAAM,SAAC,CAAC,CAAA;EACtF,OAAO,MAAA;UACLb,YAAA,CAAaC,MAAM,CAAA;EACrB;eACOW,CAAQ,EAAA;QACFZ,YAAA,CAAA,MAAA,EAAW;UAAEM,OAAS,EAAAM,CAAA,CAAEN;UAASO,KAAO,EAAAD,CAAA,CAAEC;EAAM,OAAC,CAAA;EAChE;EACF;EACF;;;;;;;;"}