{"version":3,"file":"cross-frame-lms.js","sources":["../src/CrossFrameLMS.ts"],"sourcesContent":["// src/CrossFrameLMS.ts\nimport { MessageData, MessageResponse } from \"./types/CrossFrame\";\nimport { IBaseAPI } from \"./interfaces/IBaseAPI\";\n\n/**\n * Server‐side SCORM adapter running in your LMS frame (lms.example.com).\n * Listens for postMessage from child (content) frames, invokes real API,\n * and posts back { messageId, result, error }.\n */\nexport default class CrossFrameLMS {\n  private readonly _api: IBaseAPI;\n  private readonly _origin: string;\n\n  constructor(api: IBaseAPI, targetOrigin: string = \"*\") {\n    this._api = api;\n    this._origin = targetOrigin;\n    window.addEventListener(\"message\", this._onMessage.bind(this));\n  }\n\n  private _onMessage(ev: MessageEvent) {\n    // Validate the message origin unless all origins are allowed\n    if (this._origin !== \"*\" && ev.origin !== this._origin) {\n      return;\n    }\n\n    const msg = ev.data as MessageData;\n    if (!msg?.messageId || !msg.method || !ev.source) return;\n\n    this._process(msg, ev.source as Window);\n  }\n\n  private _process(msg: MessageData, source: Window) {\n    const sendResponse = (result?: any, error?: { message: string; stack?: string }) => {\n      const resp: MessageResponse = { messageId: msg.messageId };\n      if (result !== undefined) resp.result = result;\n      if (error !== undefined) resp.error = error;\n      source.postMessage(resp, this._origin);\n    };\n\n    try {\n      const fn = (this._api as any)[msg.method];\n      if (typeof fn !== \"function\") {\n        sendResponse(undefined, { message: `Method ${msg.method} not found` });\n        return;\n      }\n\n      const result = fn.apply(this._api, msg.params);\n\n      if (result && typeof (result as Promise<any>).then === \"function\") {\n        (result as Promise<any>)\n          .then((r) => sendResponse(r))\n          .catch((e: any) => sendResponse(undefined, { message: e.message, stack: e.stack }));\n      } else {\n        sendResponse(result);\n      }\n    } catch (e: any) {\n      sendResponse(undefined, { message: e.message, stack: e.stack });\n    }\n  }\n}\n"],"names":["CrossFrameLMS","constructor","api","targetOrigin","arguments","length","undefined","_api","_origin","window","addEventListener","_onMessage","bind","ev","origin","msg","data","messageId","method","source","_process","sendResponse","result","error","resp","postMessage","fn","message","apply","params","then","r","catch","e","stack"],"mappings":";;;EASA,MAAqBA,aAAA,CAAc;IAIjCC,WAAAA,CAAYC,GAAA,EAA2C;EAAA,IAAA,IAA5BC,YAAA,GAAAC,SAAA,CAAAC,MAAA,GAAA,CAAA,IAAAD,SAAA,CAAA,CAAA,CAAA,KAAAE,SAAA,GAAAF,SAAA,CAAA,CAAA,CAAA,GAAuB,GAAA;MAChD,IAAA,CAAKG,IAAA,GAAOL,GAAA;MACZ,IAAA,CAAKM,OAAA,GAAUL,YAAA;EACfM,IAAAA,MAAA,CAAOC,iBAAiB,SAAA,EAAW,IAAA,CAAKC,UAAA,CAAWC,IAAA,CAAK,IAAI,CAAC,CAAA;EAC/D,EAAA;IAEQD,WAAWE,EAAA,EAAkB;EAEnC,IAAA,IAAI,KAAKL,OAAA,KAAY,GAAA,IAAOK,EAAA,CAAGC,MAAA,KAAW,KAAKN,OAAA,EAAS;EACtD,MAAA;EACF,IAAA;EAEA,IAAA,MAAMO,MAAMF,EAAA,CAAGG,IAAA;EACf,IAAA,IAAI,CAACD,KAAKE,SAAA,IAAa,CAACF,IAAIG,MAAA,IAAU,CAACL,GAAGM,MAAA,EAAQ;MAElD,IAAA,CAAKC,QAAA,CAASL,GAAA,EAAKF,EAAA,CAAGM,MAAgB,CAAA;EACxC,EAAA;EAEQC,EAAAA,QAAAA,CAASL,KAAkBI,MAAA,EAAgB;EACjD,IAAA,MAAME,YAAA,GAAeA,CAACC,MAAA,EAAcC,KAAA,KAAgD;EAClF,MAAA,MAAMC,IAAA,GAAwB;UAAEP,SAAA,EAAWF,GAAA,CAAIE;SAAU;QACzD,IAAIK,MAAA,KAAW,MAAA,EAAWE,IAAA,CAAKF,MAAA,GAASA,MAAA;QACxC,IAAIC,KAAA,KAAU,MAAA,EAAWC,IAAA,CAAKD,KAAA,GAAQA,KAAA;QACtCJ,MAAA,CAAOM,WAAA,CAAYD,IAAA,EAAM,IAAA,CAAKhB,OAAO,CAAA;MACvC,CAAA;MAEA,IAAI;QACF,MAAMkB,EAAA,GAAM,IAAA,CAAKnB,IAAA,CAAaQ,GAAA,CAAIG,MAAM,CAAA;EACxC,MAAA,IAAI,OAAOQ,OAAO,UAAA,EAAY;UAC5BL,YAAA,CAAa,QAAW;EAAEM,UAAAA,OAAA,EAAS,CAAA,OAAA,EAAUZ,GAAA,CAAIG,MAAM,CAAA,UAAA;EAAa,SAAC,CAAA;EACrE,QAAA;EACF,MAAA;EAEA,MAAA,MAAMI,SAASI,EAAA,CAAGE,KAAA,CAAM,IAAA,CAAKrB,IAAA,EAAMQ,IAAIc,MAAM,CAAA;QAE7C,IAAIP,MAAA,IAAU,OAAQA,MAAA,CAAwBQ,IAAA,KAAS,UAAA,EAAY;EAChER,QAAAA,MAAA,CACEQ,KAAMC,CAAA,IAAMV,aAAaU,CAAC,CAAC,EAC3BC,KAAA,CAAOC,KAAWZ,YAAA,CAAa,KAAA,CAAA,EAAW;YAAEM,OAAA,EAASM,CAAA,CAAEN;YAASO,KAAA,EAAOD,CAAA,CAAEC;EAAM,SAAC,CAAC,CAAA;EACtF,MAAA,CAAA,MAAO;UACLb,YAAA,CAAaC,MAAM,CAAA;EACrB,MAAA;MACF,SAASW,CAAA,EAAQ;QACfZ,YAAA,CAAa,MAAA,EAAW;UAAEM,OAAA,EAASM,CAAA,CAAEN;UAASO,KAAA,EAAOD,CAAA,CAAEC;EAAM,OAAC,CAAA;EAChE,IAAA;EACF,EAAA;EACF;;;;;;;;"}