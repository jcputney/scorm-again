{"version":3,"file":"cross-frame-lms.js","sources":["../src/CrossFrameLMS.ts"],"sourcesContent":["// src/CrossFrameLMS.ts\nimport { MessageData, MessageResponse } from \"./types/CrossFrame\";\nimport { IBaseAPI } from \"./interfaces/IBaseAPI\";\n\n/**\n * Server‚Äêside SCORM adapter running in your LMS frame (lms.example.com).\n * Listens for postMessage from child (content) frames, invokes real API,\n * and posts back { messageId, result, error }.\n */\nexport default class CrossFrameLMS {\n  private readonly _api: IBaseAPI;\n  private readonly _origin: string;\n\n  constructor(api: IBaseAPI, targetOrigin: string = \"*\") {\n    this._api = api;\n    this._origin = targetOrigin;\n    window.addEventListener(\"message\", this._onMessage.bind(this));\n  }\n\n  private _onMessage(ev: MessageEvent) {\n    const msg = ev.data as MessageData;\n    if (!msg?.messageId || !msg.method) return;\n    this._process(msg, ev.source as Window);\n  }\n\n  private _process(msg: MessageData, source: Window) {\n    let result: any, error: any;\n    try {\n      const fn = (this._api as any)[msg.method];\n      if (typeof fn !== \"function\") throw new Error(`Method ${msg.method} not found`);\n      result = fn.apply(this._api, msg.params);\n    } catch (e: any) {\n      error = { message: e.message, stack: e.stack };\n    }\n    const resp: MessageResponse = {\n      messageId: msg.messageId,\n      result,\n      error,\n    };\n    source.postMessage(resp, this._origin);\n  }\n}\n"],"names":["CrossFrameLMS","constructor","api","targetOrigin","arguments","length","undefined","_api","_origin","window","addEventListener","_onMessage","bind","ev","msg","data","messageId","method","_process","source","result","error","fn","Error","apply","params","e","message","stack","resp","postMessage"],"mappings":";;;EASA,MAAqBA,aAAc,CAAA;IAIjCC,WAAAA,CAAYC,GAAe,EAA4B;EAAA,IAAA,IAA5BC,YAAA,GAAAC,SAAA,CAAAC,MAAA,GAAA,CAAA,IAAAD,SAAA,CAAA,CAAA,CAAA,KAAAE,SAAA,GAAAF,SAAA,CAAA,CAAA,CAAA,GAAuB,GAAK;MACrD,IAAA,CAAKG,IAAO,GAAAL,GAAA;MACZ,IAAA,CAAKM,OAAU,GAAAL,YAAA;EACfM,IAAAA,MAAA,CAAOC,iBAAiB,SAAW,EAAA,IAAA,CAAKC,UAAW,CAAAC,IAAA,CAAK,IAAI,CAAC,CAAA;EAC/D;IAEQD,WAAWE,EAAkB,EAAA;EACnC,IAAA,MAAMC,MAAMD,EAAG,CAAAE,IAAA;MACf,IAAI,CAACD,GAAA,EAAKE,SAAa,IAAA,CAACF,IAAIG,MAAQ,EAAA;MAC/B,IAAA,CAAAC,QAAA,CAASJ,GAAK,EAAAD,EAAA,CAAGM,MAAgB,CAAA;EACxC;EAEQD,EAAAA,QAAAA,CAASJ,KAAkBK,MAAgB,EAAA;MACjD,IAAIC,MAAa,EAAAC,KAAA;MACb,IAAA;QACF,MAAMC,EAAM,GAAA,IAAA,CAAKf,IAAa,CAAAO,GAAA,CAAIG,MAAM,CAAA;EACpC,MAAA,IAAA,OAAOK,OAAO,UAAY,EAAA,MAAM,IAAIC,KAAM,CAAA,CAAUT,OAAAA,EAAAA,GAAI,CAAAG,MAAM,YAAY,CAAA;EAC9EG,MAAAA,MAAA,GAASE,EAAG,CAAAE,KAAA,CAAM,IAAK,CAAAjB,IAAA,EAAMO,IAAIW,MAAM,CAAA;eAChCC,CAAQ,EAAA;EACfL,MAAAA,KAAA,GAAQ;UAAEM,OAAS,EAAAD,CAAA,CAAEC,OAAS;UAAAC,KAAA,EAAOF,EAAEE;SAAM;EAC/C;EACA,IAAA,MAAMC,IAAwB,GAAA;QAC5Bb,WAAWF,GAAI,CAAAE,SAAA;QACfI,MAAA;EACAC,MAAAA;OACF;MACOF,MAAA,CAAAW,WAAA,CAAYD,IAAM,EAAA,IAAA,CAAKrB,OAAO,CAAA;EACvC;EACF;;;;;;;;"}