import { BaseRootCMI } from "../common/base_cmi";
import { CMILearnerPreference } from "./learner_preference";
import { CMIInteractions } from "./interactions";
import { Scorm2004CMIScore } from "./score";
import { CMICommentsFromLearner, CMICommentsFromLMS } from "./comments";
import { CMIObjectives } from "./objectives";
export declare class CMI extends BaseRootCMI {
    constructor(initialized?: boolean);
    learner_preference: CMILearnerPreference;
    score: Scorm2004CMIScore;
    comments_from_learner: CMICommentsFromLearner;
    comments_from_lms: CMICommentsFromLMS;
    interactions: CMIInteractions;
    objectives: CMIObjectives;
    private __version;
    private __children;
    private _completion_status;
    private _completion_threshold;
    private _credit;
    private _entry;
    private _exit;
    private _launch_data;
    private _learner_id;
    private _learner_name;
    private _location;
    private _max_time_allowed;
    private _mode;
    private _progress_measure;
    private _scaled_passing_score;
    private _session_time;
    private _success_status;
    private _suspend_data;
    private _time_limit_action;
    private _total_time;
    initialize(): void;
    reset(): void;
    get _version(): string;
    set _version(_version: string);
    get _children(): string;
    set _children(_children: number);
    get completion_status(): string;
    set completion_status(completion_status: string);
    get completion_threshold(): string;
    set completion_threshold(completion_threshold: string);
    get credit(): string;
    set credit(credit: string);
    get entry(): string;
    set entry(entry: string);
    get exit(): string;
    set exit(exit: string);
    get launch_data(): string;
    set launch_data(launch_data: string);
    get learner_id(): string;
    set learner_id(learner_id: string);
    get learner_name(): string;
    set learner_name(learner_name: string);
    get location(): string;
    set location(location: string);
    get max_time_allowed(): string;
    set max_time_allowed(max_time_allowed: string);
    get mode(): string;
    set mode(mode: string);
    get progress_measure(): string;
    set progress_measure(progress_measure: string);
    get scaled_passing_score(): string;
    set scaled_passing_score(scaled_passing_score: string);
    get session_time(): string;
    set session_time(session_time: string);
    get success_status(): string;
    set success_status(success_status: string);
    get suspend_data(): string;
    set suspend_data(suspend_data: string);
    get time_limit_action(): string;
    set time_limit_action(time_limit_action: string);
    get total_time(): string;
    set total_time(total_time: string);
    getCurrentTotalTime(): string;
    toJSON(): {
        comments_from_learner: CMICommentsFromLearner;
        comments_from_lms: CMICommentsFromLMS;
        completion_status: string;
        completion_threshold: string;
        credit: string;
        entry: string;
        exit: string;
        interactions: CMIInteractions;
        launch_data: string;
        learner_id: string;
        learner_name: string;
        learner_preference: CMILearnerPreference;
        location: string;
        max_time_allowed: string;
        mode: string;
        objectives: CMIObjectives;
        progress_measure: string;
        scaled_passing_score: string;
        score: Scorm2004CMIScore;
        session_time: string;
        success_status: string;
        suspend_data: string;
        time_limit_action: string;
    };
}
