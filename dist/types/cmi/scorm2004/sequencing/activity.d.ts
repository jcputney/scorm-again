import { BaseCMI } from "../../common/base_cmi";
import { CompletionStatus, SuccessStatus } from "../../../constants/enums";
export declare class Activity extends BaseCMI {
    private _id;
    private _title;
    private _children;
    private _parent;
    private _isVisible;
    private _isActive;
    private _isSuspended;
    private _isCompleted;
    private _completionStatus;
    private _successStatus;
    private _attemptCount;
    private _attemptCompletionAmount;
    private _attemptAbsoluteDuration;
    private _attemptExperiencedDuration;
    private _activityAbsoluteDuration;
    private _activityExperiencedDuration;
    private _objectiveSatisfiedStatus;
    private _objectiveMeasureStatus;
    private _objectiveNormalizedMeasure;
    constructor(id?: string, title?: string);
    initialize(): void;
    reset(): void;
    get id(): string;
    set id(id: string);
    get title(): string;
    set title(title: string);
    get children(): Activity[];
    addChild(child: Activity): void;
    removeChild(child: Activity): boolean;
    get parent(): Activity | null;
    get isVisible(): boolean;
    set isVisible(isVisible: boolean);
    get isActive(): boolean;
    set isActive(isActive: boolean);
    get isSuspended(): boolean;
    set isSuspended(isSuspended: boolean);
    get isCompleted(): boolean;
    set isCompleted(isCompleted: boolean);
    get completionStatus(): CompletionStatus;
    set completionStatus(completionStatus: CompletionStatus);
    get successStatus(): SuccessStatus;
    set successStatus(successStatus: SuccessStatus);
    get attemptCount(): number;
    incrementAttemptCount(): void;
    get objectiveMeasureStatus(): boolean;
    set objectiveMeasureStatus(objectiveMeasureStatus: boolean);
    get objectiveNormalizedMeasure(): number;
    set objectiveNormalizedMeasure(objectiveNormalizedMeasure: number);
    toJSON(): object;
}
