import { CompletionStatus, LogLevelEnum, SuccessStatus } from "../constants/enums";
import { StringKeyMap } from "../utilities";
import { SequencingSettings } from "./sequencing_types";
export type Settings = {
    autocommit?: boolean | undefined;
    autocommitSeconds?: number | undefined;
    asyncCommit?: boolean | undefined;
    sendFullCommit?: boolean | undefined;
    lmsCommitUrl?: boolean | string | undefined;
    dataCommitFormat?: string | undefined;
    commitRequestDataType?: string | undefined;
    autoProgress?: boolean | undefined;
    logLevel?: LogLevel | undefined;
    selfReportSessionTime?: boolean | undefined;
    alwaysSendTotalTime?: boolean | undefined;
    strict_errors?: boolean | undefined;
    xhrHeaders?: StringKeyMap | undefined;
    xhrWithCredentials?: boolean | undefined;
    fetchMode?: "cors" | "no-cors" | "same-origin" | "navigate" | undefined;
    responseHandler?: ((response: Response) => Promise<ResultObject>) | undefined;
    requestHandler?: ((commitObject: unknown) => unknown) | undefined;
    onLogMessage?: ((messageLevel: LogLevel, logMessage: string) => void) | undefined;
    mastery_override?: boolean | undefined;
    renderCommonCommitFields?: boolean | undefined;
    scoItemIds?: string[] | undefined;
    scoItemIdValidator?: false | ((scoItemId: string) => boolean) | undefined;
    globalObjectiveIds?: string[] | undefined;
    sequencing?: SequencingSettings | undefined;
    useBeaconInsteadOfFetch?: "always" | "on-terminate" | "never" | undefined;
    enableOfflineSupport?: boolean | undefined;
    courseId?: string | undefined;
    syncOnInitialize?: boolean | undefined;
    syncOnTerminate?: boolean | undefined;
    maxSyncAttempts?: number | undefined;
};
export type InternalSettings = {
    autocommit: boolean;
    autocommitSeconds: number;
    asyncCommit: boolean;
    sendFullCommit: boolean;
    lmsCommitUrl: string | boolean;
    dataCommitFormat: string;
    commitRequestDataType: string;
    autoProgress: boolean;
    logLevel: LogLevel;
    selfReportSessionTime: boolean;
    renderCommonCommitFields: boolean;
    alwaysSendTotalTime: boolean;
    strict_errors: boolean;
    xhrHeaders: StringKeyMap;
    xhrWithCredentials: boolean;
    fetchMode: "cors" | "no-cors" | "same-origin" | "navigate";
    responseHandler: (response: Response) => Promise<ResultObject>;
    requestHandler: (commitObject: unknown) => unknown;
    onLogMessage?: ((messageLevel: LogLevel, logMessage: string) => void) | undefined;
    mastery_override?: boolean | undefined;
    scoItemIds?: string[] | undefined;
    scoItemIdValidator?: false | ((scoItemId: string) => boolean) | undefined;
    globalObjectiveIds?: string[] | undefined;
    sequencing?: SequencingSettings | undefined;
    useBeaconInsteadOfFetch: "always" | "on-terminate" | "never";
    enableOfflineSupport?: boolean | undefined;
    courseId?: string | undefined;
    syncOnInitialize?: boolean | undefined;
    syncOnTerminate?: boolean | undefined;
    maxSyncAttempts?: number | undefined;
};
export type RefObject = {
    [key: string]: any;
};
export type RefValue = string | number | boolean | null | undefined | RefArray;
export type RefArray = ReadonlyArray<RefValue>;
export type ResultObject = {
    result: string;
    errorCode: number;
    navRequest?: string | StringKeyMap;
    errorMessage?: string;
    errorDetails?: string;
};
export type ReadonlyResultObject = Readonly<ResultObject>;
export type ScoreObject = {
    raw?: number;
    min?: number;
    max?: number;
    scaled?: number;
};
export type CompleteScoreObject = Required<ScoreObject>;
export type CommitObject = {
    successStatus: SuccessStatus;
    completionStatus: CompletionStatus;
    totalTimeSeconds: number;
    runtimeData: StringKeyMap;
    score?: ScoreObject;
    commitId?: string;
    courseId?: string;
    learnerId?: string;
    learnerName?: string;
    sessionId?: string;
    activityId?: string;
    attempt?: number;
};
export type CommitObjectWithScore = CommitObject & {
    score: ScoreObject;
};
export type NumericLogLevel = 1 | 2 | 3 | 4 | 5;
export type StringNumericLogLevel = "1" | "2" | "3" | "4" | "5";
export type NamedLogLevel = "DEBUG" | "INFO" | "WARN" | "ERROR" | "NONE";
export type LogLevel = NumericLogLevel | StringNumericLogLevel | NamedLogLevel | LogLevelEnum;
