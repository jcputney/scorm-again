(function(exports){"use strict";class CrossFrameLMS{constructor(api,targetOrigin){this._targetOrigin="*";this._api=api;if(targetOrigin){this._targetOrigin=targetOrigin}window.addEventListener("message",this._handleMessage.bind(this));this._setupEventForwarding()}_handleMessage(event){const data=event.data;if(!data||!data.messageId||!data.method){return}this._processMessage(data,event.source,event.origin)}_processMessage(data,source,origin){const{messageId:messageId,method:method,params:params,sab:sab}=data;let result;let error;try{if(typeof this._api[method]==="function"){result=this._api[method](...params)}else{throw new Error(`Method ${method} not found on API`)}}catch(e){if(e instanceof Error){error={message:e.message,stack:e.stack}}else{error={message:String(e)}}}const response={messageId:messageId,result:result,error:error,sab:sab};source.postMessage(response,this._targetOrigin,sab?[sab]:void 0)}_setupEventForwarding(){var _this=this;this._api.on("*",(function(event){for(var _len=arguments.length,args=new Array(_len>1?_len-1:0),_key=1;_key<_len;_key++){args[_key-1]=arguments[_key]}const frames=Array.from(document.querySelectorAll("iframe"));frames.forEach((frame=>{if(frame.contentWindow){frame.contentWindow.postMessage({event:event,args:args},_this._targetOrigin)}}))}))}}class CrossFrameAPI{constructor(targetOrigin){this._targetOrigin="*";this._pendingRequests=new Map;this._eventListeners=new Map;this._messageIdCounter=0;this._childFrames=new Set;this._isInitialized=false;this._lastError="0";this._cache=new Map;this._sabBuffers=new Map;if(targetOrigin){this._targetOrigin=targetOrigin}window.addEventListener("message",this._handleMessage.bind(this))}_syncCall(method,params){let timeoutMs=arguments.length>2&&arguments[2]!==undefined?arguments[2]:5e3;try{const sab=new SharedArrayBuffer(Int32Array.BYTES_PER_ELEMENT);const int32=new Int32Array(sab);const messageId=`${Date.now()}-sync-${this._messageIdCounter++}`;this._sabBuffers.set(messageId,sab);window.parent.postMessage({messageId:messageId,method:method,params:params,sab:sab},this._targetOrigin,[sab]);const status=Atomics.wait(int32,0,0,timeoutMs);this._sabBuffers.delete(messageId);const pending=this._pendingRequests.get(messageId)||{};this._pendingRequests.delete(messageId);if(status==="timed-out"){throw new Error(`SCORM ${method} timeout after ${timeoutMs}ms`)}if(pending.error)throw pending.error;return pending.result}catch(e){throw e}}_handleMessage(event){const data=event.data;const source=event.source;const isFromChildFrame=source!==window.parent&&source!==window;if(data.messageId&&(data.result!==void 0||data.error!==void 0)&&!isFromChildFrame){this._handleMethodResponse(data)}if(data.messageId&&data.method&&isFromChildFrame){this._childFrames.add(source);const{messageId:messageId,method:method,params:params}=data;const forwardedMessageId=`forwarded-${messageId}`;this._pendingRequests.set(forwardedMessageId,{resolve:result=>{source.postMessage({messageId:messageId,result:result},this._targetOrigin)},reject:error=>{source.postMessage({messageId:messageId,error:error},this._targetOrigin)},source:source});window.parent.postMessage({messageId:forwardedMessageId,method:method,params:params},this._targetOrigin);setTimeout((()=>{if(this._pendingRequests.has(forwardedMessageId)){const request=this._pendingRequests.get(forwardedMessageId);this._pendingRequests.delete(forwardedMessageId);if(request?.source){request.source.postMessage({messageId:messageId,error:{message:`Timeout waiting for response to method ${method}`}},this._targetOrigin)}}}),5e3)}if(data.event&&!isFromChildFrame){this._handleEvent(data.event,...data.args||[]);this._forwardEventToChildFrames(data.event,data.args||[])}}_handleMethodResponse(data){const{messageId:messageId,result:result,error:error}=data;if(data.sab){const int32=new Int32Array(data.sab);Atomics.store(int32,0,1);Atomics.notify(int32,0)}const pendingRequest=this._pendingRequests.get(messageId);if(pendingRequest){const{resolve:resolve,reject:reject}=pendingRequest;if(error){reject(error)}else{resolve(result)}this._pendingRequests.delete(messageId)}}_handleEvent(event){for(var _len2=arguments.length,args=new Array(_len2>1?_len2-1:0),_key2=1;_key2<_len2;_key2++){args[_key2-1]=arguments[_key2]}const listeners=this._eventListeners.get(event);if(listeners){listeners.forEach((listener=>{try{listener(...args)}catch(e){console.error(`Error in event listener for ${event}:`,e)}}))}const allListeners=this._eventListeners.get("*");if(allListeners){allListeners.forEach((listener=>{try{listener(event,...args)}catch(e){console.error(`Error in "*" event listener for ${event}:`,e)}}))}}_forwardEventToChildFrames(event,args){this._childFrames.forEach((frame=>{try{frame.postMessage({event:event,args:args},this._targetOrigin)}catch(e){console.error(`Error forwarding event to child frame:`,e)}}))}_sendMessage(method){let params=arguments.length>1&&arguments[1]!==undefined?arguments[1]:[];if(typeof window==="undefined"||typeof window.parent==="undefined"||typeof window.parent.postMessage!=="function"){return Promise.resolve("")}return new Promise(((resolve,reject)=>{const messageId=`${Date.now()}-${this._messageIdCounter++}`;this._pendingRequests.set(messageId,{resolve:resolve,reject:reject});try{window.parent.postMessage({messageId:messageId,method:method,params:params},this._targetOrigin);setTimeout((()=>{if(this._pendingRequests.has(messageId)){this._pendingRequests.delete(messageId);reject(new Error(`Timeout waiting for response to method ${method}`))}}),5e3)}catch(e){this._pendingRequests.delete(messageId);reject(e)}}))}async initialize(){const result=await this._sendMessage("lmsInitialize");this._isInitialized=result==="true";return this._isInitialized}lmsInitialize(){try{return String(this._syncCall("lmsInitialize",[]))}catch(e){this._lastError="101";return"false"}}async Initialize(){return this.initialize()}LMSInitialize(){try{return String(this._syncCall("LMSInitialize",[]))}catch(e){this._lastError="101";return"false"}}async terminate(){const result=await this._sendMessage("lmsFinish");const success=result==="true";if(success){this._isInitialized=false}return success}lmsFinish(){try{return String(this._syncCall("lmsFinish",[]))}catch(e){this._lastError="101";return"false"}}async Terminate(){return this.terminate()}LMSFinish(){try{return String(this._syncCall("LMSFinish",[]))}catch(e){this._lastError="101";return"false"}}async getValue(element){try{const result=await this._sendMessage("lmsGetValue",[element]);const value=String(result);this._cache.set(element,value);return value}catch(e){this._lastError="101";console.error(`Error in getValue(${element}):`,e);return""}}lmsGetValue(element){try{return String(this._syncCall("lmsGetValue",[element]))}catch(e){this._lastError="101";return""}}async GetValue(element){return this.getValue(element)}LMSGetValue(element){try{return String(this._syncCall("LMSGetValue",[element]))}catch(e){this._lastError="101";return""}}async setValue(element,value){try{const result=await this._sendMessage("lmsSetValue",[element,value]);const success=result==="true";if(success){this._cache.set(element,String(value))}return success}catch(e){this._lastError="101";console.error(`Error in setValue(${element}, ${value}):`,e);return false}}lmsSetValue(element,value){try{return String(this._syncCall("lmsSetValue",[element,value]))}catch(e){this._lastError="101";return"false"}}async SetValue(element,value){return this.setValue(element,value)}LMSSetValue(element,value){try{return String(this._syncCall("LMSSetValue",[element,value]))}catch(e){this._lastError="101";return"false"}}async commit(){try{const result=await this._sendMessage("lmsCommit");return result==="true"}catch(e){this._lastError="101";console.error("Error in commit:",e);return false}}lmsCommit(){try{return String(this._syncCall("lmsCommit",[]))}catch(e){this._lastError="101";return"false"}}async Commit(){return this.commit()}LMSCommit(){try{return String(this._syncCall("LMSCommit",[]))}catch(e){this._lastError="101";return"false"}}async getLastError(){try{const result=await this._sendMessage("lmsGetLastError");this._lastError=String(result);return this._lastError}catch(e){console.error("Error in getLastError:",e);return"101"}}lmsGetLastError(){try{return String(this._syncCall("lmsGetLastError",[]))}catch(e){return"101"}}async GetLastError(){return this.getLastError()}LMSGetLastError(){try{return String(this._syncCall("LMSGetLastError",[]))}catch(e){return"101"}}async getErrorString(errorCode){try{const result=await this._sendMessage("lmsGetErrorString",[errorCode]);const errorString=String(result);this._cache.set(`error_${errorCode}`,errorString);return errorString}catch(e){console.error(`Error in getErrorString(${errorCode}):`,e);return""}}lmsGetErrorString(errorCode){try{return String(this._syncCall("lmsGetErrorString",[errorCode]))}catch(e){return"No error"}}async GetErrorString(errorCode){return this.getErrorString(errorCode)}LMSGetErrorString(errorCode){try{return String(this._syncCall("LMSGetErrorString",[errorCode]))}catch(e){return"No error"}}async getDiagnostic(errorCode){try{const result=await this._sendMessage("lmsGetDiagnostic",[errorCode]);const diagnostic=String(result);this._cache.set(`diagnostic_${errorCode}`,diagnostic);return diagnostic}catch(e){console.error(`Error in getDiagnostic(${errorCode}):`,e);return""}}lmsGetDiagnostic(errorCode){try{return String(this._syncCall("lmsGetDiagnostic",[errorCode]))}catch(e){return"No diagnostic information available"}}async GetDiagnostic(errorCode){return this.getDiagnostic(errorCode)}LMSGetDiagnostic(errorCode){try{return String(this._syncCall("LMSGetDiagnostic",[errorCode]))}catch(e){return"No diagnostic information available"}}async isInitialized(){try{const result=await this._sendMessage("isInitialized");this._isInitialized=Boolean(result);return this._isInitialized}catch(e){console.error("Error in isInitialized:",e);return this._isInitialized}}getIsInitialized(){return this._isInitialized}on(event,callback){if(!this._eventListeners.has(event)){this._eventListeners.set(event,new Set)}const listeners=this._eventListeners.get(event);if(listeners){listeners.add(callback)}}off(event,callback){const listeners=this._eventListeners.get(event);if(listeners){listeners.delete(callback);if(listeners.size===0){this._eventListeners.delete(event)}}}}function createCrossFrameServer(api,targetOrigin){return new CrossFrameLMS(api,targetOrigin)}function createCrossFrameClient(targetOrigin){return new CrossFrameAPI(targetOrigin)}exports.CrossFrameAPI=CrossFrameAPI;exports.CrossFrameLMS=CrossFrameLMS;exports.createCrossFrameClient=createCrossFrameClient;exports.createCrossFrameServer=createCrossFrameServer})(this["cross-frame-facade"]=this["cross-frame-facade"]||{});
//# sourceMappingURL=cross-frame-facade.js.map
