this.CrossFrameLMS=function(){"use strict";return class{constructor(s){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"*";this._api=s,this._origin=t,window.addEventListener("message",this._onMessage.bind(this))}_onMessage(s){if("*"!==this._origin&&s.origin!==this._origin)return;const t=s.data;t?.messageId&&t.method&&s.source&&this._process(t,s.source)}_process(s,t){const e=(result,e)=>{const i={messageId:s.messageId};void 0!==result&&(i.result=result),void 0!==e&&(i.error=e),t.postMessage(i,this._origin)};try{const t=this._api[s.method];if("function"!=typeof t)return void e(void 0,{message:`Method ${s.method} not found`});const result=t.apply(this._api,s.params);result&&"function"==typeof result.then?result.then(s=>e(s)).catch(s=>e(void 0,{message:s.message,stack:s.stack})):e(result)}catch(s){e(void 0,{message:s.message,stack:s.stack})}}}}();
//# sourceMappingURL=cross-frame-lms.min.js.map
