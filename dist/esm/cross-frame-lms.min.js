class s{constructor(s,e="*"){this._api=s,this._origin=e,window.addEventListener("message",this._onMessage.bind(this))}_onMessage(s){const e=s.data;e?.messageId&&e.method&&this._process(e,s.source)}_process(s,e){let result,t;try{const e=this._api[s.method];"function"!=typeof e?t={message:`Method ${s.method} not found`}:result=e.apply(this._api,s.params)}catch(s){t={message:s.message,stack:s.stack}}e.postMessage({messageId:s.messageId,result:result,error:t},this._origin)}}export{s as CrossFrameLMS};
//# sourceMappingURL=cross-frame-lms.min.js.map
