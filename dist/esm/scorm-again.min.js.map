{"version":3,"file":"scorm-again.min.js","mappings":"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","sources":["webpack://scorm-again/./src/exceptions/aicc_exceptions.ts","webpack://scorm-again/./src/cmi/aicc/validation.ts","webpack://scorm-again/./src/cmi/aicc/evaluation.ts","webpack://scorm-again/./src/cmi/aicc/student_preferences.ts","webpack://scorm-again/./src/cmi/aicc/student_demographics.ts","webpack://scorm-again/./src/cmi/aicc/tries.ts","webpack://scorm-again/./src/cmi/aicc/attempts.ts","webpack://scorm-again/./src/cmi/aicc/student_data.ts","webpack://scorm-again/./src/cmi/aicc/paths.ts","webpack://scorm-again/./src/cmi/aicc/cmi.ts","webpack://scorm-again/./src/AICC.ts","webpack://scorm-again/./src/constants/default_settings.ts","webpack://scorm-again/./src/helpers/scheduled_commit.ts","webpack://scorm-again/./src/BaseAPI.ts","webpack://scorm-again/./src/Scorm12API.ts","webpack://scorm-again/./src/exceptions/scorm2004_exceptions.ts","webpack://scorm-again/./src/cmi/scorm2004/validation.ts","webpack://scorm-again/./src/cmi/scorm2004/learner_preference.ts","webpack://scorm-again/./src/constants/response_constants.ts","webpack://scorm-again/./src/cmi/scorm2004/interactions.ts","webpack://scorm-again/./src/cmi/scorm2004/score.ts","webpack://scorm-again/./src/cmi/scorm2004/comments.ts","webpack://scorm-again/./src/cmi/scorm2004/objectives.ts","webpack://scorm-again/./src/cmi/scorm2004/cmi.ts","webpack://scorm-again/./src/constants/language_constants.ts","webpack://scorm-again/./src/cmi/scorm2004/adl.ts","webpack://scorm-again/./src/Scorm2004API.ts","webpack://scorm-again/./src/cmi/common/array.ts","webpack://scorm-again/./src/cmi/common/base_cmi.ts","webpack://scorm-again/./src/cmi/common/score.ts","webpack://scorm-again/./src/cmi/common/validation.ts","webpack://scorm-again/./src/cmi/aicc/core.ts","webpack://scorm-again/./src/cmi/scorm12/cmi.ts","webpack://scorm-again/./src/cmi/scorm12/interactions.ts","webpack://scorm-again/./src/cmi/scorm12/nav.ts","webpack://scorm-again/./src/cmi/scorm12/objectives.ts","webpack://scorm-again/./src/cmi/scorm12/student_data.ts","webpack://scorm-again/./src/cmi/scorm12/student_preference.ts","webpack://scorm-again/./src/cmi/scorm12/validation.ts","webpack://scorm-again/./src/constants/api_constants.ts","webpack://scorm-again/./src/constants/enums.ts","webpack://scorm-again/./src/constants/error_codes.ts","webpack://scorm-again/./src/constants/regex.ts","webpack://scorm-again/./src/exceptions.ts","webpack://scorm-again/./src/exceptions/scorm12_exceptions.ts","webpack://scorm-again/./src/utilities.ts","webpack://scorm-again/./node_modules/tslib/tslib.es6.mjs","webpack://scorm-again/webpack/bootstrap","webpack://scorm-again/webpack/runtime/define property getters","webpack://scorm-again/webpack/runtime/hasOwnProperty shorthand","webpack://scorm-again/webpack/runtime/make namespace object"],"sourcesContent":["import { ValidationError } from \"../exceptions\";\nimport { aicc_constants } from \"../constants/api_constants\";\n\nconst aicc_errors = aicc_constants.error_descriptions;\n\n/**\n * AICC Validation Error\n */\nexport class AICCValidationError extends ValidationError {\n  /**\n   * Constructor to take in an error code\n   * @param {number} errorCode\n   */\n  constructor(errorCode: number) {\n    if ({}.hasOwnProperty.call(aicc_errors, String(errorCode))) {\n      super(\n        errorCode,\n        aicc_errors[String(errorCode)]?.basicMessage || \"Unknown rror\",\n        aicc_errors[String(errorCode)]?.detailMessage,\n      );\n    } else {\n      super(\n        101,\n        aicc_errors[\"101\"]?.basicMessage || \"General error\",\n        aicc_errors[\"101\"]?.detailMessage,\n      );\n    }\n  }\n}\n","import { checkValidFormat } from \"../common/validation\";\nimport { AICCValidationError } from \"../../exceptions/aicc_exceptions\";\nimport { scorm12_errors } from \"../../constants/error_codes\";\n\n/**\n * Helper method, no reason to have to pass the same error codes every time\n * @param {string} value\n * @param {string} regexPattern\n * @param {boolean} allowEmptyString\n * @return {boolean}\n */\nexport function checkAICCValidFormat(\n  value: string,\n  regexPattern: string,\n  allowEmptyString?: boolean,\n): boolean {\n  return checkValidFormat(\n    value,\n    regexPattern,\n    scorm12_errors.TYPE_MISMATCH as number,\n    AICCValidationError,\n    allowEmptyString,\n  );\n}\n","import { CMIArray } from \"../common/array\";\nimport { AICCValidationError } from \"../../exceptions/aicc_exceptions\";\nimport { BaseCMI } from \"../common/base_cmi\";\nimport { aicc_constants } from \"../../constants/api_constants\";\nimport { scorm12_errors } from \"../../constants/error_codes\";\nimport { checkAICCValidFormat } from \"./validation\";\nimport { aicc_regex } from \"../../constants/regex\";\n\n/**\n * AICC Evaluation object\n */\nexport class CMIEvaluation extends BaseCMI {\n  /**\n   * Constructor for AICC Evaluation object\n   */\n  constructor() {\n    super();\n    this.comments = new CMIEvaluationComments();\n  }\n\n  public comments: CMIEvaluationComments;\n\n  /**\n   * Called when the API has been initialized after the CMI has been created\n   */\n  override initialize() {\n    super.initialize();\n    this.comments?.initialize();\n  }\n\n  /**\n   * Called when the API has been reset\n   */\n  reset(): void {\n    this._initialized = false;\n    this.comments?.reset();\n  }\n\n  /**\n   * toJSON for cmi.evaluation object\n   * @return {{comments: CMIEvaluationComments}}\n   */\n  toJSON(): {\n    comments: CMIEvaluationComments;\n  } {\n    this.jsonString = true;\n    const result = {\n      comments: this.comments,\n    };\n    delete this.jsonString;\n    return result;\n  }\n}\n\n/**\n * Class representing AICC's cmi.evaluation.comments object\n */\n\nclass CMIEvaluationComments extends CMIArray {\n  /**\n   * Constructor for AICC Evaluation Comments object\n   */\n  constructor() {\n    super({\n      children: aicc_constants.comments_children,\n      errorCode: scorm12_errors.INVALID_SET_VALUE as number,\n      errorClass: AICCValidationError,\n    });\n  }\n}\n\n/**\n * Class for AICC Evaluation Comments\n */\nexport class CMIEvaluationCommentsObject extends BaseCMI {\n  private _content = \"\";\n  private _location = \"\";\n  private _time = \"\";\n\n  /**\n   * Constructor for Evaluation Comments\n   */\n  constructor() {\n    super();\n  }\n\n  /**\n   * Called when the API has been reset\n   */\n  reset(): void {\n    this._initialized = false;\n\n    this._content = \"\";\n    this._location = \"\";\n    this._time = \"\";\n  }\n\n  /**\n   * Getter for _content\n   * @return {string}\n   */\n  get content(): string {\n    return this._content;\n  }\n\n  /**\n   * Setter for _content\n   * @param {string} content\n   */\n  set content(content: string) {\n    if (checkAICCValidFormat(content, aicc_regex.CMIString256)) {\n      this._content = content;\n    }\n  }\n\n  /**\n   * Getter for _location\n   * @return {string}\n   */\n  get location(): string {\n    return this._location;\n  }\n\n  /**\n   * Setter for _location\n   * @param {string} location\n   */\n  set location(location: string) {\n    if (checkAICCValidFormat(location, aicc_regex.CMIString256)) {\n      this._location = location;\n    }\n  }\n\n  /**\n   * Getter for _time\n   * @return {string}\n   */\n  get time(): string {\n    return this._time;\n  }\n\n  /**\n   * Setting for _time\n   * @param {string} time\n   */\n  set time(time: string) {\n    if (checkAICCValidFormat(time, aicc_regex.CMITime)) {\n      this._time = time;\n    }\n  }\n\n  /**\n   * toJSON for cmi.evaluation.comments.n object\n   * @return {\n   *    {\n   *      content: string,\n   *      location: string,\n   *      time: string\n   *    }\n   *  }\n   */\n  toJSON(): {\n    content: string;\n    location: string;\n    time: string;\n  } {\n    this.jsonString = true;\n    const result = {\n      content: this.content,\n      location: this.location,\n      time: this.time,\n    };\n    delete this.jsonString;\n    return result;\n  }\n}\n","import { CMIArray } from \"../common/array\";\nimport { AICCValidationError } from \"../../exceptions/aicc_exceptions\";\nimport { checkAICCValidFormat } from \"./validation\";\nimport { scorm12_errors } from \"../../constants/error_codes\";\nimport { aicc_regex } from \"../../constants/regex\";\nimport { aicc_constants } from \"../../constants/api_constants\";\nimport { CMIStudentPreference } from \"../scorm12/student_preference\";\n\n/**\n * StudentPreferences class for AICC\n */\nexport class AICCStudentPreferences extends CMIStudentPreference {\n  /**\n   * Constructor for AICC Student Preferences object\n   */\n  constructor() {\n    super(aicc_constants.student_preference_children);\n    this.windows = new CMIArray({\n      errorCode: scorm12_errors.INVALID_SET_VALUE as number,\n      errorClass: AICCValidationError,\n      children: \"\",\n    });\n  }\n\n  public windows: CMIArray;\n\n  /**\n   * Called when the API has been initialized after the CMI has been created\n   */\n  override initialize() {\n    super.initialize();\n    this.windows?.initialize();\n  }\n\n  private _lesson_type = \"\";\n  private _text_color = \"\";\n  private _text_location = \"\";\n  private _text_size = \"\";\n  private _video = \"\";\n\n  /**\n   * Getter for _lesson_type\n   * @return {string}\n   */\n  get lesson_type(): string {\n    return this._lesson_type;\n  }\n\n  /**\n   * Setter for _lesson_type\n   * @param {string} lesson_type\n   */\n  set lesson_type(lesson_type: string) {\n    if (checkAICCValidFormat(lesson_type, aicc_regex.CMIString256)) {\n      this._lesson_type = lesson_type;\n    }\n  }\n\n  /**\n   * Getter for _text_color\n   * @return {string}\n   */\n  get text_color(): string {\n    return this._text_color;\n  }\n\n  /**\n   * Setter for _text_color\n   * @param {string} text_color\n   */\n  set text_color(text_color: string) {\n    if (checkAICCValidFormat(text_color, aicc_regex.CMIString256)) {\n      this._text_color = text_color;\n    }\n  }\n\n  /**\n   * Getter for _text_location\n   * @return {string}\n   */\n  get text_location(): string {\n    return this._text_location;\n  }\n\n  /**\n   * Setter for _text_location\n   * @param {string} text_location\n   */\n  set text_location(text_location: string) {\n    if (checkAICCValidFormat(text_location, aicc_regex.CMIString256)) {\n      this._text_location = text_location;\n    }\n  }\n\n  /**\n   * Getter for _text_size\n   * @return {string}\n   */\n  get text_size(): string {\n    return this._text_size;\n  }\n\n  /**\n   * Setter for _text_size\n   * @param {string} text_size\n   */\n  set text_size(text_size: string) {\n    if (checkAICCValidFormat(text_size, aicc_regex.CMIString256)) {\n      this._text_size = text_size;\n    }\n  }\n\n  /**\n   * Getter for _video\n   * @return {string}\n   */\n  get video(): string {\n    return this._video;\n  }\n\n  /**\n   * Setter for _video\n   * @param {string} video\n   */\n  set video(video: string) {\n    if (checkAICCValidFormat(video, aicc_regex.CMIString256)) {\n      this._video = video;\n    }\n  }\n\n  /**\n   * toJSON for cmi.student_preference\n   *\n   * @return {\n   *    {\n   *      audio: string,\n   *      language: string,\n   *      speed: string,\n   *      text: string,\n   *      text_color: string,\n   *      text_location: string,\n   *      text_size: string,\n   *      video: string,\n   *      windows: CMIArray\n   *    }\n   *  }\n   */\n  override toJSON(): {\n    audio: string;\n    language: string;\n    lesson_type: string;\n    speed: string;\n    text: string;\n    text_color: string;\n    text_location: string;\n    text_size: string;\n    video: string;\n    windows: CMIArray;\n  } {\n    this.jsonString = true;\n    const result = {\n      audio: this.audio,\n      language: this.language,\n      lesson_type: this.lesson_type,\n      speed: this.speed,\n      text: this.text,\n      text_color: this.text_color,\n      text_location: this.text_location,\n      text_size: this.text_size,\n      video: this.video,\n      windows: this.windows,\n    };\n    delete this.jsonString;\n    return result;\n  }\n}\n","import { BaseCMI } from \"../common/base_cmi\";\nimport { AICCValidationError } from \"../../exceptions/aicc_exceptions\";\nimport { aicc_constants } from \"../../constants/api_constants\";\nimport { scorm12_errors } from \"../../constants/error_codes\";\n\n/**\n * Class representing the AICC cmi.student_demographics object\n */\nexport class CMIStudentDemographics extends BaseCMI {\n  private __children = aicc_constants.student_demographics_children;\n  private _city = \"\";\n  private _class = \"\";\n  private _company = \"\";\n  private _country = \"\";\n  private _experience = \"\";\n  private _familiar_name = \"\";\n  private _instructor_name = \"\";\n  private _title = \"\";\n  private _native_language = \"\";\n  private _state = \"\";\n  private _street_address = \"\";\n  private _telephone = \"\";\n  private _years_experience = \"\";\n\n  /**\n   * Constructor for AICC StudentDemographics object\n   */\n  constructor() {\n    super();\n  }\n\n  /**\n   * Called when the API has been reset\n   */\n  reset(): void {\n    this._initialized = false;\n  }\n\n  /**\n   * Getter for _children\n   * @return {string}\n   */\n  get _children(): string {\n    return this.__children;\n  }\n\n  /**\n   * Getter for city\n   * @return {string}\n   */\n  get city(): string {\n    return this._city;\n  }\n\n  /**\n   * Setter for _city. Sets an error if trying to set after\n   *  initialization.\n   * @param {string} city\n   */\n  set city(city: string) {\n    if (this.initialized) {\n      throw new AICCValidationError(scorm12_errors.READ_ONLY_ELEMENT as number);\n    } else {\n      this._city = city;\n    }\n  }\n\n  /**\n   * Getter for class\n   * @return {string}\n   */\n  get class(): string {\n    return this._class;\n  }\n\n  /**\n   * Setter for _class. Sets an error if trying to set after\n   *  initialization.\n   * @param {string} clazz\n   */\n  set class(clazz: string) {\n    if (this.initialized) {\n      throw new AICCValidationError(scorm12_errors.READ_ONLY_ELEMENT as number);\n    } else {\n      this._class = clazz;\n    }\n  }\n\n  /**\n   * Getter for company\n   * @return {string}\n   */\n  get company(): string {\n    return this._company;\n  }\n\n  /**\n   * Setter for _company. Sets an error if trying to set after\n   *  initialization.\n   * @param {string} company\n   */\n  set company(company: string) {\n    if (this.initialized) {\n      throw new AICCValidationError(scorm12_errors.READ_ONLY_ELEMENT as number);\n    } else {\n      this._company = company;\n    }\n  }\n\n  /**\n   * Getter for country\n   * @return {string}\n   */\n  get country(): string {\n    return this._country;\n  }\n\n  /**\n   * Setter for _country. Sets an error if trying to set after\n   *  initialization.\n   * @param {string} country\n   */\n  set country(country: string) {\n    if (this.initialized) {\n      throw new AICCValidationError(scorm12_errors.READ_ONLY_ELEMENT as number);\n    } else {\n      this._country = country;\n    }\n  }\n\n  /**\n   * Getter for experience\n   * @return {string}\n   */\n  get experience(): string {\n    return this._experience;\n  }\n\n  /**\n   * Setter for _experience. Sets an error if trying to set after\n   *  initialization.\n   * @param {string} experience\n   */\n  set experience(experience: string) {\n    if (this.initialized) {\n      throw new AICCValidationError(scorm12_errors.READ_ONLY_ELEMENT as number);\n    } else {\n      this._experience = experience;\n    }\n  }\n\n  /**\n   * Getter for familiar_name\n   * @return {string}\n   */\n  get familiar_name(): string {\n    return this._familiar_name;\n  }\n\n  /**\n   * Setter for _familiar_name. Sets an error if trying to set after\n   *  initialization.\n   * @param {string} familiar_name\n   */\n  set familiar_name(familiar_name: string) {\n    if (this.initialized) {\n      throw new AICCValidationError(scorm12_errors.READ_ONLY_ELEMENT as number);\n    } else {\n      this._familiar_name = familiar_name;\n    }\n  }\n\n  /**\n   * Getter for instructor_name\n   * @return {string}\n   */\n  get instructor_name(): string {\n    return this._instructor_name;\n  }\n\n  /**\n   * Setter for _instructor_name. Sets an error if trying to set after\n   *  initialization.\n   * @param {string} instructor_name\n   */\n  set instructor_name(instructor_name: string) {\n    if (this.initialized) {\n      throw new AICCValidationError(scorm12_errors.READ_ONLY_ELEMENT as number);\n    } else {\n      this._instructor_name = instructor_name;\n    }\n  }\n\n  /**\n   * Getter for title\n   * @return {string}\n   */\n  get title(): string {\n    return this._title;\n  }\n\n  /**\n   * Setter for _title. Sets an error if trying to set after\n   *  initialization.\n   * @param {string} title\n   */\n  set title(title: string) {\n    if (this.initialized) {\n      throw new AICCValidationError(scorm12_errors.READ_ONLY_ELEMENT as number);\n    } else {\n      this._title = title;\n    }\n  }\n\n  /**\n   * Getter for native_language\n   * @return {string}\n   */\n  get native_language(): string {\n    return this._native_language;\n  }\n\n  /**\n   * Setter for _native_language. Sets an error if trying to set after\n   *  initialization.\n   * @param {string} native_language\n   */\n  set native_language(native_language: string) {\n    if (this.initialized) {\n      throw new AICCValidationError(scorm12_errors.READ_ONLY_ELEMENT as number);\n    } else {\n      this._native_language = native_language;\n    }\n  }\n\n  /**\n   * Getter for state\n   * @return {string}\n   */\n  get state(): string {\n    return this._state;\n  }\n\n  /**\n   * Setter for _state. Sets an error if trying to set after\n   *  initialization.\n   * @param {string} state\n   */\n  set state(state: string) {\n    if (this.initialized) {\n      throw new AICCValidationError(scorm12_errors.READ_ONLY_ELEMENT as number);\n    } else {\n      this._state = state;\n    }\n  }\n\n  /**\n   * Getter for street_address\n   * @return {string}\n   */\n  get street_address(): string {\n    return this._street_address;\n  }\n\n  /**\n   * Setter for _street_address. Sets an error if trying to set after\n   *  initialization.\n   * @param {string} street_address\n   */\n  set street_address(street_address: string) {\n    if (this.initialized) {\n      throw new AICCValidationError(scorm12_errors.READ_ONLY_ELEMENT as number);\n    } else {\n      this._street_address = street_address;\n    }\n  }\n\n  /**\n   * Getter for telephone\n   * @return {string}\n   */\n  get telephone(): string {\n    return this._telephone;\n  }\n\n  /**\n   * Setter for _telephone. Sets an error if trying to set after\n   *  initialization.\n   * @param {string} telephone\n   */\n  set telephone(telephone: string) {\n    if (this.initialized) {\n      throw new AICCValidationError(scorm12_errors.READ_ONLY_ELEMENT as number);\n    } else {\n      this._telephone = telephone;\n    }\n  }\n\n  /**\n   * Getter for years_experience\n   * @return {string}\n   */\n  get years_experience(): string {\n    return this._years_experience;\n  }\n\n  /**\n   * Setter for _years_experience. Sets an error if trying to set after\n   *  initialization.\n   * @param {string} years_experience\n   */\n  set years_experience(years_experience: string) {\n    if (this.initialized) {\n      throw new AICCValidationError(scorm12_errors.READ_ONLY_ELEMENT as number);\n    } else {\n      this._years_experience = years_experience;\n    }\n  }\n\n  /**\n   * toJSON for cmi.student_demographics object\n   * @return {\n   *      {\n   *        city: string,\n   *        class: string,\n   *        company: string,\n   *        country: string,\n   *        experience: string,\n   *        familiar_name: string,\n   *        instructor_name: string,\n   *        title: string,\n   *        native_language: string,\n   *        state: string,\n   *        street_address: string,\n   *        telephone: string,\n   *        years_experience: string\n   *      }\n   *    }\n   */\n  toJSON(): {\n    city: string;\n    class: string;\n    company: string;\n    country: string;\n    experience: string;\n    familiar_name: string;\n    instructor_name: string;\n    title: string;\n    native_language: string;\n    state: string;\n    street_address: string;\n    telephone: string;\n    years_experience: string;\n  } {\n    this.jsonString = true;\n    const result = {\n      city: this.city,\n      class: this.class,\n      company: this.company,\n      country: this.country,\n      experience: this.experience,\n      familiar_name: this.familiar_name,\n      instructor_name: this.instructor_name,\n      title: this.title,\n      native_language: this.native_language,\n      state: this.state,\n      street_address: this.street_address,\n      telephone: this.telephone,\n      years_experience: this.years_experience,\n    };\n    delete this.jsonString;\n    return result;\n  }\n}\n","import { CMIArray } from \"../common/array\";\nimport { aicc_constants } from \"../../constants/api_constants\";\nimport { BaseCMI } from \"../common/base_cmi\";\nimport { CMIScore } from \"../common/score\";\nimport { aicc_regex } from \"../../constants/regex\";\nimport { scorm12_errors } from \"../../constants/error_codes\";\nimport { AICCValidationError } from \"../../exceptions/aicc_exceptions\";\nimport { checkAICCValidFormat } from \"./validation\";\n\n/**\n * Class representing the AICC cmi.student_data.tries object\n */\nexport class CMITries extends CMIArray {\n  /**\n   * Constructor for inline Tries Array class\n   */\n  constructor() {\n    super({\n      children: aicc_constants.tries_children,\n    });\n  }\n}\n\n/**\n * Class for AICC Tries\n */\nexport class CMITriesObject extends BaseCMI {\n  private _status = \"\";\n  private _time = \"\";\n\n  /**\n   * Constructor for AICC Tries object\n   */\n  constructor() {\n    super();\n    this.score = new CMIScore({\n      score_children: aicc_constants.score_children,\n      score_range: aicc_regex.score_range,\n      invalidErrorCode: scorm12_errors.INVALID_SET_VALUE as number,\n      invalidTypeCode: scorm12_errors.TYPE_MISMATCH as number,\n      invalidRangeCode: scorm12_errors.VALUE_OUT_OF_RANGE as number,\n      errorClass: AICCValidationError,\n    });\n  }\n\n  public score: CMIScore;\n\n  /**\n   * Called when the API has been initialized after the CMI has been created\n   */\n  override initialize() {\n    super.initialize();\n    this.score?.initialize();\n  }\n\n  /**\n   * Called when the API has been reset\n   */\n  reset(): void {\n    this._initialized = false;\n    this._status = \"\";\n    this._time = \"\";\n    this.score?.reset();\n  }\n\n  /**\n   * Getter for _status\n   * @return {string}\n   */\n  get status(): string {\n    return this._status;\n  }\n\n  /**\n   * Setter for _status\n   * @param {string} status\n   */\n  set status(status: string) {\n    if (checkAICCValidFormat(status, aicc_regex.CMIStatus2)) {\n      this._status = status;\n    }\n  }\n\n  /**\n   * Getter for _time\n   * @return {string}\n   */\n  get time(): string {\n    return this._time;\n  }\n\n  /**\n   * Setter for _time\n   * @param {string} time\n   */\n  set time(time: string) {\n    if (checkAICCValidFormat(time, aicc_regex.CMITime)) {\n      this._time = time;\n    }\n  }\n\n  /**\n   * toJSON for cmi.student_data.tries.n object\n   * @return {\n   *    {\n   *      status: string,\n   *      time: string,\n   *      score: CMIScore\n   *    }\n   *  }\n   */\n  toJSON(): {\n    status: string;\n    time: string;\n    score: CMIScore;\n  } {\n    this.jsonString = true;\n    const result = {\n      status: this.status,\n      time: this.time,\n      score: this.score,\n    };\n    delete this.jsonString;\n    return result;\n  }\n}\n","import { BaseCMI } from \"../common/base_cmi\";\nimport { CMIScore } from \"../common/score\";\nimport { aicc_constants } from \"../../constants/api_constants\";\nimport { aicc_regex } from \"../../constants/regex\";\nimport { scorm12_errors } from \"../../constants/error_codes\";\nimport { AICCValidationError } from \"../../exceptions/aicc_exceptions\";\nimport { checkAICCValidFormat } from \"./validation\";\nimport { CMIArray } from \"../common/array\";\n\n/**\n * Class for cmi.student_data.attempt_records array\n */\nexport class CMIAttemptRecords extends CMIArray {\n  /**\n   * Constructor for inline Tries Array class\n   */\n  constructor() {\n    super({\n      children: aicc_constants.attempt_records_children,\n    });\n  }\n}\n\n/**\n * Class for AICC Attempt Records\n */\nexport class CMIAttemptRecordsObject extends BaseCMI {\n  private _lesson_status = \"\";\n\n  /**\n   * Constructor for AICC Attempt Records object\n   */\n  constructor() {\n    super();\n    this.score = new CMIScore({\n      score_children: aicc_constants.score_children,\n      score_range: aicc_regex.score_range,\n      invalidErrorCode: scorm12_errors.INVALID_SET_VALUE as number,\n      invalidTypeCode: scorm12_errors.TYPE_MISMATCH as number,\n      invalidRangeCode: scorm12_errors.VALUE_OUT_OF_RANGE as number,\n      errorClass: AICCValidationError,\n    });\n  }\n\n  public score: CMIScore;\n\n  /**\n   * Called when the API has been initialized after the CMI has been created\n   */\n  override initialize() {\n    super.initialize();\n\n    this._lesson_status = \"\";\n    this.score?.initialize();\n  }\n\n  /**\n   * Called when the API has been reset\n   */\n  reset(): void {\n    this._initialized = false;\n    this.score?.reset();\n  }\n\n  /**\n   * Getter for _lesson_status\n   * @return {string}\n   */\n  get lesson_status(): string {\n    return this._lesson_status;\n  }\n\n  /**\n   * Setter for _lesson_status\n   * @param {string} lesson_status\n   */\n  set lesson_status(lesson_status: string) {\n    if (checkAICCValidFormat(lesson_status, aicc_regex.CMIStatus2)) {\n      this._lesson_status = lesson_status;\n    }\n  }\n\n  /**\n   * toJSON for cmi.student_data.attempt_records.n object\n   * @return {\n   *    {\n   *         lesson_status: string,\n   *         score: CMIScore\n   *     }\n   *  }\n   */\n  toJSON(): {\n    lesson_status: string;\n    score: CMIScore;\n  } {\n    this.jsonString = true;\n    const result = {\n      lesson_status: this.lesson_status,\n      score: this.score,\n    };\n    delete this.jsonString;\n    return result;\n  }\n}\n","import { AICCValidationError } from \"../../exceptions/aicc_exceptions\";\nimport { scorm12_errors } from \"../../constants/error_codes\";\nimport { aicc_constants } from \"../../constants/api_constants\";\nimport { CMITries } from \"./tries\";\nimport { CMIStudentData } from \"../scorm12/student_data\";\nimport { CMIAttemptRecords } from \"./attempts\";\n\n/**\n * StudentData class for AICC\n */\nexport class AICCCMIStudentData extends CMIStudentData {\n  /**\n   * Constructor for AICC StudentData object\n   */\n  constructor() {\n    super(aicc_constants.student_data_children);\n    this.tries = new CMITries();\n    this.attempt_records = new CMIAttemptRecords();\n  }\n\n  public tries: CMITries;\n  public attempt_records: CMIAttemptRecords;\n\n  /**\n   * Called when the API has been initialized after the CMI has been created\n   */\n  override initialize() {\n    super.initialize();\n    this.tries?.initialize();\n    this.attempt_records?.initialize();\n  }\n\n  /**\n   * Called when the API has been reset\n   */\n  override reset(): void {\n    this._initialized = false;\n    this.tries?.reset(true);\n    this.attempt_records?.reset(true);\n  }\n\n  private _tries_during_lesson = \"\";\n\n  /**\n   * Getter for tries_during_lesson\n   * @return {string}\n   */\n  get tries_during_lesson(): string {\n    return this._tries_during_lesson;\n  }\n\n  /**\n   * Setter for _tries_during_lesson. Sets an error if trying to set after\n   *  initialization.\n   * @param {string} tries_during_lesson\n   */\n  set tries_during_lesson(tries_during_lesson: string) {\n    if (this.initialized) {\n      throw new AICCValidationError(scorm12_errors.READ_ONLY_ELEMENT as number);\n    } else {\n      this._tries_during_lesson = tries_during_lesson;\n    }\n  }\n\n  /**\n   * toJSON for cmi.student_data object\n   * @return {\n   *    {\n   *      mastery_score: string,\n   *      max_time_allowed: string,\n   *      time_limit_action: string,\n   *      tries: CMITries,\n   *      attempt_records: CMIAttemptRecords\n   *    }\n   *  }\n   */\n  override toJSON(): {\n    mastery_score: string;\n    max_time_allowed: string;\n    time_limit_action: string;\n    tries: CMITries;\n    attempt_records: CMIAttemptRecords;\n  } {\n    this.jsonString = true;\n    const result = {\n      mastery_score: this.mastery_score,\n      max_time_allowed: this.max_time_allowed,\n      time_limit_action: this.time_limit_action,\n      tries: this.tries,\n      attempt_records: this.attempt_records,\n    };\n    delete this.jsonString;\n    return result;\n  }\n}\n","import { BaseCMI } from \"../common/base_cmi\";\nimport { checkAICCValidFormat } from \"./validation\";\nimport { CMIArray } from \"../common/array\";\nimport { aicc_regex } from \"../../constants/regex\";\nimport { aicc_constants } from \"../../constants/api_constants\";\n\n/**\n * Class representing the AICC `cmi.paths` object\n */\nexport class CMIPaths extends CMIArray {\n  /**\n   * Constructor for inline Paths Array class\n   */\n  constructor() {\n    super({\n      children: aicc_constants.paths_children,\n    });\n  }\n}\n\n/**\n * Class for AICC Paths\n */\nexport class CMIPathsObject extends BaseCMI {\n  private _location_id = \"\";\n  private _date = \"\";\n  private _time = \"\";\n  private _status = \"\";\n  private _why_left = \"\";\n  private _time_in_element = \"\";\n\n  /**\n   * Constructor for AICC Paths objects\n   */\n  constructor() {\n    super();\n  }\n\n  /**\n   * Called when the API has been reset\n   */\n  reset(): void {\n    this._initialized = false;\n\n    this._location_id = \"\";\n    this._date = \"\";\n    this._time = \"\";\n    this._status = \"\";\n    this._why_left = \"\";\n    this._time_in_element = \"\";\n  }\n\n  /**\n   * Getter for _location_id\n   * @return {string}\n   */\n  get location_id(): string {\n    return this._location_id;\n  }\n\n  /**\n   * Setter for _location_id\n   * @param {string} location_id\n   */\n  set location_id(location_id: string) {\n    if (checkAICCValidFormat(location_id, aicc_regex.CMIString256)) {\n      this._location_id = location_id;\n    }\n  }\n\n  /**\n   * Getter for _date\n   * @return {string}\n   */\n  get date(): string {\n    return this._date;\n  }\n\n  /**\n   * Setter for _date\n   * @param {string} date\n   */\n  set date(date: string) {\n    if (checkAICCValidFormat(date, aicc_regex.CMIString256)) {\n      this._date = date;\n    }\n  }\n\n  /**\n   * Getter for _time\n   * @return {string}\n   */\n  get time(): string {\n    return this._time;\n  }\n\n  /**\n   * Setter for _time\n   * @param {string} time\n   */\n  set time(time: string) {\n    if (checkAICCValidFormat(time, aicc_regex.CMITime)) {\n      this._time = time;\n    }\n  }\n\n  /**\n   * Getter for _status\n   * @return {string}\n   */\n  get status(): string {\n    return this._status;\n  }\n\n  /**\n   * Setter for _status\n   * @param {string} status\n   */\n  set status(status: string) {\n    if (checkAICCValidFormat(status, aicc_regex.CMIStatus2)) {\n      this._status = status;\n    }\n  }\n\n  /**\n   * Getter for _why_left\n   * @return {string}\n   */\n  get why_left(): string {\n    return this._why_left;\n  }\n\n  /**\n   * Setter for _why_left\n   * @param {string} why_left\n   */\n  set why_left(why_left: string) {\n    if (checkAICCValidFormat(why_left, aicc_regex.CMIString256)) {\n      this._why_left = why_left;\n    }\n  }\n\n  /**\n   * Getter for _time_in_element\n   * @return {string}\n   */\n  get time_in_element(): string {\n    return this._time_in_element;\n  }\n\n  /**\n   * Setter for _time_in_element\n   * @param {string} time_in_element\n   */\n  set time_in_element(time_in_element: string) {\n    if (checkAICCValidFormat(time_in_element, aicc_regex.CMITime)) {\n      this._time_in_element = time_in_element;\n    }\n  }\n\n  /**\n   * toJSON for cmi.paths.n object\n   * @return {\n   *    {\n   *      location_id: string,\n   *      date: string,\n   *      time: string,\n   *      status: string,\n   *      why_left: string,\n   *      time_in_element: string\n   *    }\n   *  }\n   */\n  toJSON(): {\n    location_id: string;\n    date: string;\n    time: string;\n    status: string;\n    why_left: string;\n    time_in_element: string;\n  } {\n    this.jsonString = true;\n    const result = {\n      location_id: this.location_id,\n      date: this.date,\n      time: this.time,\n      status: this.status,\n      why_left: this.why_left,\n      time_in_element: this.time_in_element,\n    };\n    delete this.jsonString;\n    return result;\n  }\n}\n","import * as Scorm12CMI from \"../scorm12/cmi\";\nimport { aicc_constants } from \"../../constants/api_constants\";\nimport { CMIEvaluation } from \"./evaluation\";\nimport { AICCStudentPreferences } from \"./student_preferences\";\nimport { CMIStudentDemographics } from \"./student_demographics\";\nimport { AICCCMIStudentData } from \"./student_data\";\nimport { CMIPaths } from \"./paths\";\nimport { CMICore } from \"./core\";\nimport { CMIObjectives } from \"../scorm12/objectives\";\nimport { CMIStudentData } from \"../scorm12/student_data\";\nimport { CMIStudentPreference } from \"../scorm12/student_preference\";\nimport { CMIInteractions } from \"../scorm12/interactions\";\n\n/**\n * CMI Class for AICC\n */\nexport class CMI extends Scorm12CMI.CMI {\n  /**\n   * Constructor for AICC CMI object\n   * @param {boolean} initialized\n   */\n  constructor(initialized: boolean = false) {\n    super(aicc_constants.cmi_children);\n    if (initialized) this.initialize();\n    this.student_preference = new AICCStudentPreferences();\n    this.student_data = new AICCCMIStudentData();\n    this.student_demographics = new CMIStudentDemographics();\n    this.evaluation = new CMIEvaluation();\n    this.paths = new CMIPaths();\n  }\n\n  public override student_data: AICCCMIStudentData;\n  public override student_preference: AICCStudentPreferences;\n  public student_demographics: CMIStudentDemographics;\n  public evaluation: CMIEvaluation;\n  public paths: CMIPaths;\n\n  /**\n   * Called when the API has been initialized after the CMI has been created\n   */\n  override initialize() {\n    super.initialize();\n    this.student_preference?.initialize();\n    this.student_data?.initialize();\n    this.student_demographics?.initialize();\n    this.evaluation?.initialize();\n    this.paths?.initialize();\n  }\n\n  /**\n   * toJSON for cmi\n   *\n   * @return {\n   *    {\n   *      suspend_data: string,\n   *      launch_data: string,\n   *      comments: string,\n   *      comments_from_lms: string,\n   *      core: CMICore,\n   *      objectives: CMIObjectives,\n   *      student_data: CMIStudentData,\n   *      student_preference: CMIStudentPreference,\n   *      interactions: CMIInteractions,\n   *      paths: CMIPaths\n   *    }\n   *  }\n   */\n  override toJSON(): {\n    suspend_data: string;\n    launch_data: string;\n    comments: string;\n    comments_from_lms: string;\n    core: CMICore;\n    objectives: CMIObjectives;\n    student_data: CMIStudentData;\n    student_preference: CMIStudentPreference;\n    student_demographics: CMIStudentDemographics;\n    interactions: CMIInteractions;\n    evaluation: CMIEvaluation;\n    paths: CMIPaths;\n  } {\n    this.jsonString = true;\n    const result = {\n      suspend_data: this.suspend_data,\n      launch_data: this.launch_data,\n      comments: this.comments,\n      comments_from_lms: this.comments_from_lms,\n      core: this.core,\n      objectives: this.objectives,\n      student_data: this.student_data,\n      student_preference: this.student_preference,\n      student_demographics: this.student_demographics,\n      interactions: this.interactions,\n      evaluation: this.evaluation,\n      paths: this.paths,\n    };\n    delete this.jsonString;\n    return result;\n  }\n}\n","import { Scorm12API } from \"./Scorm12API\";\nimport { CMI } from \"./cmi/aicc/cmi\";\n\nimport { BaseCMI } from \"./cmi/common/base_cmi\";\nimport { CMITriesObject } from \"./cmi/aicc/tries\";\nimport { CMIAttemptRecordsObject } from \"./cmi/aicc/attempts\";\nimport { CMIEvaluationCommentsObject } from \"./cmi/aicc/evaluation\";\nimport { NAV } from \"./cmi/scorm12/nav\";\nimport { CMIPathsObject } from \"./cmi/aicc/paths\";\nimport { Settings } from \"./types/api_types\";\nimport { stringMatches } from \"./utilities\";\n\n/**\n * The AICC API class\n */\nclass AICCImpl extends Scorm12API {\n  /**\n   * Constructor to create AICC API object\n   * @param {Settings} settings\n   */\n  constructor(settings?: Settings) {\n    super(settings);\n\n    this.cmi = new CMI();\n    this.nav = new NAV();\n  }\n\n  override cmi: CMI;\n  override nav: NAV;\n\n  /**\n   * Gets or builds a new child element to add to the array.\n   *\n   * @param {string} CMIElement\n   * @param {any} value\n   * @param {boolean} foundFirstIndex\n   * @return {BaseCMI | null}\n   */\n  override getChildElement(\n    CMIElement: string,\n    value: any,\n    foundFirstIndex: boolean,\n  ): BaseCMI | null {\n    let newChild = super.getChildElement(CMIElement, value, foundFirstIndex);\n\n    if (!newChild) {\n      if (stringMatches(CMIElement, \"cmi\\\\.evaluation\\\\.comments\\\\.\\\\d+\")) {\n        newChild = new CMIEvaluationCommentsObject();\n      } else if (\n        stringMatches(CMIElement, \"cmi\\\\.student_data\\\\.tries\\\\.\\\\d+\")\n      ) {\n        newChild = new CMITriesObject();\n      } else if (\n        stringMatches(CMIElement, \"cmi\\\\.student_data\\\\.attempt_records\\\\.\\\\d+\")\n      ) {\n        newChild = new CMIAttemptRecordsObject();\n      } else if (stringMatches(CMIElement, \"cmi\\\\.paths\\\\.\\\\d+\")) {\n        newChild = new CMIPathsObject();\n      }\n    }\n\n    return newChild;\n  }\n\n  /**\n   * Replace the whole API with another\n   *\n   * @param {AICCImpl} newAPI\n   */\n  override replaceWithAnotherScormAPI(newAPI: AICCImpl) {\n    // Data Model\n    this.cmi = newAPI.cmi;\n    this.nav = newAPI.nav;\n  }\n}\n\nexport { AICCImpl as AICC };\n","import { InternalSettings, LogLevel, ResultObject } from \"../types/api_types\";\nimport { global_constants } from \"./api_constants\";\nimport { LogLevelEnum } from \"./enums\";\n\n/**\n * Default settings for the SCORM API\n */\nexport const DefaultSettings: InternalSettings = {\n  autocommit: false,\n  autocommitSeconds: 10,\n  asyncCommit: false,\n  sendFullCommit: true,\n  lmsCommitUrl: false,\n  dataCommitFormat: \"json\",\n  commitRequestDataType: \"application/json;charset=UTF-8\",\n  autoProgress: false,\n  logLevel: LogLevelEnum.ERROR,\n  selfReportSessionTime: false,\n  alwaysSendTotalTime: false,\n  renderCommonCommitFields: false,\n  strict_errors: true,\n  xhrHeaders: {},\n  xhrWithCredentials: false,\n  fetchMode: \"cors\",\n  responseHandler: async function (response: Response): Promise<ResultObject> {\n    if (typeof response !== \"undefined\") {\n      const responseText = await response.text();\n      let httpResult = null;\n      if (responseText) {\n        httpResult = JSON.parse(responseText);\n      }\n      if (\n        httpResult === null ||\n        !{}.hasOwnProperty.call(httpResult, \"result\")\n      ) {\n        if (response.status === 200) {\n          return {\n            result: global_constants.SCORM_TRUE,\n            errorCode: 0,\n          };\n        } else {\n          return {\n            result: global_constants.SCORM_FALSE,\n            errorCode: 101,\n          };\n        }\n      } else {\n        return {\n          result: httpResult.result,\n          errorCode: httpResult.errorCode\n            ? httpResult.errorCode\n            : httpResult.result === global_constants.SCORM_TRUE\n              ? 0\n              : 101,\n        };\n      }\n    }\n    return {\n      result: global_constants.SCORM_FALSE,\n      errorCode: 101,\n    };\n  },\n  requestHandler: function (commitObject) {\n    return commitObject;\n  },\n  onLogMessage: function (messageLevel: LogLevel, logMessage) {\n    switch (messageLevel) {\n      case \"4\":\n      case 4:\n      case \"ERROR\":\n      case LogLevelEnum.ERROR:\n        console.error(logMessage);\n        break;\n      case \"3\":\n      case 3:\n      case \"WARN\":\n      case LogLevelEnum.WARN:\n        console.warn(logMessage);\n        break;\n      case \"2\":\n      case 2:\n      case \"INFO\":\n      case LogLevelEnum.INFO:\n        console.info(logMessage);\n        break;\n      case \"1\":\n      case 1:\n      case \"DEBUG\":\n      case LogLevelEnum.DEBUG:\n        if (console.debug) {\n          console.debug(logMessage);\n        } else {\n          console.log(logMessage);\n        }\n        break;\n    }\n  },\n  scoItemIds: [],\n  scoItemIdValidator: false,\n  globalObjectiveIds: [],\n};\n","import BaseAPI from \"../BaseAPI\";\n\n/**\n * Private class that wraps a timeout call to the commit() function\n */\nexport class ScheduledCommit {\n  private _API;\n  private _cancelled = false;\n  private readonly _timeout;\n  private readonly _callback;\n\n  /**\n   * Constructor for ScheduledCommit\n   * @param {BaseAPI} API\n   * @param {number} when\n   * @param {string} callback\n   */\n  constructor(API: BaseAPI, when: number, callback: string) {\n    this._API = API;\n    this._timeout = setTimeout(this.wrapper.bind(this), when);\n    this._callback = callback;\n  }\n\n  /**\n   * Cancel any currently scheduled commit\n   */\n  cancel() {\n    this._cancelled = true;\n    if (this._timeout) {\n      clearTimeout(this._timeout);\n    }\n  }\n\n  /**\n   * Wrap the API commit call to check if the call has already been cancelled\n   */\n  wrapper() {\n    if (!this._cancelled) {\n      (async () => await this._API.commit(this._callback))();\n    }\n  }\n}\n","import { CMIArray } from \"./cmi/common/array\";\nimport { ValidationError } from \"./exceptions\";\nimport { ErrorCode } from \"./constants/error_codes\";\nimport { global_constants } from \"./constants/api_constants\";\nimport { formatMessage, stringMatches, unflatten } from \"./utilities\";\nimport { BaseCMI } from \"./cmi/common/base_cmi\";\nimport { CommitObject, InternalSettings, LogLevel, RefObject, ResultObject, Settings } from \"./types/api_types\";\nimport { DefaultSettings } from \"./constants/default_settings\";\nimport { IBaseAPI } from \"./interfaces/IBaseAPI\";\nimport { ScheduledCommit } from \"./helpers/scheduled_commit\";\nimport { LogLevelEnum } from \"./constants/enums\";\n\n/**\n * Base API class for AICC, SCORM 1.2, and SCORM 2004. Should be considered\n * abstract, and never initialized on its own.\n */\nexport default abstract class BaseAPI implements IBaseAPI {\n  private _timeout?: ScheduledCommit | undefined;\n  private readonly _error_codes: ErrorCode;\n  private _settings: InternalSettings = DefaultSettings;\n\n  /**\n   * Constructor for Base API class. Sets some shared API fields, as well as\n   * sets up options for the API.\n   * @param {ErrorCode} error_codes\n   * @param {Settings} settings\n   */\n  protected constructor(error_codes: ErrorCode, settings?: Settings) {\n    if (new.target === BaseAPI) {\n      throw new TypeError(\"Cannot construct BaseAPI instances directly\");\n    }\n    this.currentState = global_constants.STATE_NOT_INITIALIZED;\n    this.lastErrorCode = \"0\";\n    this.listenerArray = [];\n\n    this._error_codes = error_codes;\n\n    if (settings) {\n      this.settings = {\n        ...DefaultSettings,\n        ...settings,\n      } as InternalSettings;\n    }\n    this.apiLogLevel = this.settings.logLevel ?? LogLevelEnum.ERROR;\n    this.selfReportSessionTime = this.settings.selfReportSessionTime ?? false;\n  }\n\n  public abstract cmi: BaseCMI;\n  public startingData?: RefObject;\n\n  public currentState: number;\n  public lastErrorCode: string;\n  public listenerArray: any[];\n  public apiLogLevel: LogLevel;\n  public selfReportSessionTime: boolean;\n\n  abstract reset(settings?: Settings): void;\n\n  /**\n   * Common reset method for all APIs. New settings are merged with the existing settings.\n   * @param {Settings} settings\n   * @protected\n   */\n  commonReset(settings?: Settings): void {\n    this.apiLog(\"reset\", \"Called\", LogLevelEnum.INFO);\n\n    this.settings = { ...this.settings, ...settings };\n\n    this.clearScheduledCommit();\n    this.currentState = global_constants.STATE_NOT_INITIALIZED;\n    this.lastErrorCode = \"0\";\n    this.listenerArray = [];\n    this.startingData = {};\n  }\n\n  /**\n   * Initialize the API\n   * @param {string} callbackName\n   * @param {string} initializeMessage\n   * @param {string} terminationMessage\n   * @return {string}\n   */\n  initialize(\n    callbackName: string,\n    initializeMessage?: string,\n    terminationMessage?: string,\n  ): string {\n    let returnValue = global_constants.SCORM_FALSE;\n\n    if (this.isInitialized()) {\n      this.throwSCORMError(\n        this._error_codes.INITIALIZED as number,\n        initializeMessage,\n      );\n    } else if (this.isTerminated()) {\n      this.throwSCORMError(\n        this._error_codes.TERMINATED as number,\n        terminationMessage,\n      );\n    } else {\n      if (this.selfReportSessionTime) {\n        this.cmi.setStartTime();\n      }\n\n      this.currentState = global_constants.STATE_INITIALIZED;\n      this.lastErrorCode = \"0\";\n      returnValue = global_constants.SCORM_TRUE;\n      this.processListeners(callbackName);\n    }\n\n    this.apiLog(callbackName, \"returned: \" + returnValue, LogLevelEnum.INFO);\n    this.clearSCORMError(returnValue);\n\n    return returnValue;\n  }\n\n  abstract lmsInitialize(): string;\n\n  abstract lmsFinish(): string;\n\n  abstract lmsGetValue(CMIElement: string): string;\n\n  abstract lmsSetValue(CMIElement: string, value: any): string;\n\n  abstract lmsCommit(): string;\n\n  abstract lmsGetLastError(): string;\n\n  abstract lmsGetErrorString(CMIErrorCode: string | number): string;\n\n  abstract lmsGetDiagnostic(CMIErrorCode: string | number): string;\n\n  /**\n   * Abstract method for validating that a response is correct.\n   *\n   * @param {string} _CMIElement\n   * @param {any} _value\n   */\n  abstract validateCorrectResponse(_CMIElement: string, _value: any): void;\n\n  /**\n   * Gets or builds a new child element to add to the array.\n   * APIs that inherit BaseAPI should override this method.\n   *\n   * @param {string} _CMIElement - unused\n   * @param {*} _value - unused\n   * @param {boolean} _foundFirstIndex - unused\n   * @return {BaseCMI|null}\n   * @abstract\n   */\n  abstract getChildElement(\n    _CMIElement: string,\n    _value: any,\n    _foundFirstIndex: boolean,\n  ): BaseCMI | null;\n\n  /**\n   * Attempts to store the data to the LMS, logs data if no LMS configured\n   * APIs that inherit BaseAPI should override this function\n   *\n   * @param {boolean} _calculateTotalTime\n   * @return {ResultObject}\n   * @abstract\n   */\n  abstract storeData(_calculateTotalTime: boolean): Promise<ResultObject>;\n\n  /**\n   * Render the cmi object to the proper format for LMS commit\n   * APIs that inherit BaseAPI should override this function\n   *\n   * @param {boolean} _terminateCommit\n   * @return {RefObject|Array}\n   * @abstract\n   */\n  abstract renderCommitCMI(_terminateCommit: boolean): RefObject | Array<any>;\n\n  /**\n   * Render the commit object to the shortened format for LMS commit\n   * @param {boolean} _terminateCommit\n   * @return {CommitObject}\n   */\n  abstract renderCommitObject(_terminateCommit: boolean): CommitObject;\n\n  /**\n   * Logging for all SCORM actions\n   *\n   * @param {string} functionName\n   * @param {string} logMessage\n   * @param {number} messageLevel\n   * @param {string} CMIElement\n   */\n  apiLog(\n    functionName: string,\n    logMessage: string,\n    messageLevel: LogLevel,\n    CMIElement?: string,\n  ) {\n    logMessage = formatMessage(functionName, logMessage, CMIElement);\n\n    if (messageLevel >= this.apiLogLevel) {\n      this.settings.onLogMessage(messageLevel, logMessage);\n    }\n  }\n\n  /**\n   * Getter for _error_codes\n   * @return {ErrorCode}\n   */\n  get error_codes(): ErrorCode {\n    return this._error_codes;\n  }\n\n  /**\n   * Getter for _settings\n   * @return {Settings}\n   */\n  get settings(): InternalSettings {\n    return this._settings;\n  }\n\n  /**\n   * Setter for _settings\n   * @param {Settings} settings\n   */\n  set settings(settings: Settings) {\n    this._settings = { ...this._settings, ...settings };\n  }\n\n  /**\n   * Terminates the current run of the API\n   * @param {string} callbackName\n   * @param {boolean} checkTerminated\n   * @return {string}\n   */\n  async terminate(\n    callbackName: string,\n    checkTerminated: boolean,\n  ): Promise<string> {\n    let returnValue = global_constants.SCORM_FALSE;\n\n    if (\n      this.checkState(\n        checkTerminated,\n        this._error_codes.TERMINATION_BEFORE_INIT as number,\n        this._error_codes.MULTIPLE_TERMINATION as number,\n      )\n    ) {\n      this.currentState = global_constants.STATE_TERMINATED;\n\n      const result: ResultObject = await this.storeData(true);\n      if (typeof result.errorCode !== \"undefined\" && result.errorCode > 0) {\n        this.throwSCORMError(result.errorCode);\n      }\n      returnValue =\n        typeof result !== \"undefined\" && result.result\n          ? result.result\n          : global_constants.SCORM_FALSE;\n\n      if (checkTerminated) this.lastErrorCode = \"0\";\n\n      returnValue = global_constants.SCORM_TRUE;\n      this.processListeners(callbackName);\n    }\n\n    this.apiLog(callbackName, \"returned: \" + returnValue, LogLevelEnum.INFO);\n    this.clearSCORMError(returnValue);\n\n    return returnValue;\n  }\n\n  /**\n   * Get the value of the CMIElement.\n   *\n   * @param {string} callbackName\n   * @param {boolean} checkTerminated\n   * @param {string} CMIElement\n   * @return {string}\n   */\n  getValue(\n    callbackName: string,\n    checkTerminated: boolean,\n    CMIElement: string,\n  ): string {\n    let returnValue: string = \"\";\n\n    if (\n      this.checkState(\n        checkTerminated,\n        this._error_codes.RETRIEVE_BEFORE_INIT as number,\n        this._error_codes.RETRIEVE_AFTER_TERM as number,\n      )\n    ) {\n      if (checkTerminated) this.lastErrorCode = \"0\";\n      try {\n        returnValue = this.getCMIValue(CMIElement);\n      } catch (e) {\n        returnValue = this.handleValueAccessException(e, returnValue);\n      }\n      this.processListeners(callbackName, CMIElement);\n    }\n\n    this.apiLog(\n      callbackName,\n      \": returned: \" + returnValue,\n      LogLevelEnum.INFO,\n      CMIElement,\n    );\n\n    if (returnValue === undefined) {\n      return \"\";\n    }\n\n    this.clearSCORMError(returnValue);\n\n    return returnValue;\n  }\n\n  /**\n   * Sets the value of the CMIElement.\n   *\n   * @param {string} callbackName\n   * @param {string} commitCallback\n   * @param {boolean} checkTerminated\n   * @param {string} CMIElement\n   * @param {*} value\n   * @return {string}\n   */\n  setValue(\n    callbackName: string,\n    commitCallback: string,\n    checkTerminated: boolean,\n    CMIElement: string,\n    value: any,\n  ): string {\n    if (value !== undefined) {\n      value = String(value);\n    }\n    let returnValue: string = global_constants.SCORM_FALSE;\n\n    if (\n      this.checkState(\n        checkTerminated,\n        this._error_codes.STORE_BEFORE_INIT as number,\n        this._error_codes.STORE_AFTER_TERM as number,\n      )\n    ) {\n      if (checkTerminated) this.lastErrorCode = \"0\";\n      try {\n        returnValue = this.setCMIValue(CMIElement, value);\n      } catch (e) {\n        this.handleValueAccessException(e, returnValue);\n      }\n      this.processListeners(callbackName, CMIElement, value);\n    }\n\n    if (returnValue === undefined) {\n      returnValue = global_constants.SCORM_FALSE;\n    }\n\n    // If we didn't have any errors while setting the data, go ahead and\n    // schedule a commit, if autocommit is turned on\n    if (String(this.lastErrorCode) === \"0\") {\n      if (this.settings.autocommit) {\n        this.scheduleCommit(\n          this.settings.autocommitSeconds * 1000,\n          commitCallback,\n        );\n      }\n    }\n\n    this.apiLog(\n      callbackName,\n      \": \" + value + \": result: \" + returnValue,\n      LogLevelEnum.INFO,\n      CMIElement,\n    );\n    this.clearSCORMError(returnValue);\n\n    return returnValue;\n  }\n\n  /**\n   * Orders LMS to store all content parameters\n   * @param {string} callbackName\n   * @param {boolean} checkTerminated\n   * @return {string}\n   */\n  async commit(\n    callbackName: string,\n    checkTerminated: boolean = false,\n  ): Promise<string> {\n    this.clearScheduledCommit();\n\n    let returnValue = global_constants.SCORM_FALSE;\n\n    if (\n      this.checkState(\n        checkTerminated,\n        this._error_codes.COMMIT_BEFORE_INIT as number,\n        this._error_codes.COMMIT_AFTER_TERM as number,\n      )\n    ) {\n      const result = await this.storeData(false);\n      if (result.errorCode && result.errorCode > 0) {\n        this.throwSCORMError(result.errorCode);\n      }\n      returnValue =\n        typeof result !== \"undefined\" && result.result\n          ? result.result\n          : global_constants.SCORM_FALSE;\n\n      this.apiLog(\n        callbackName,\n        \" Result: \" + returnValue,\n        LogLevelEnum.DEBUG,\n        \"HttpRequest\",\n      );\n\n      if (checkTerminated) this.lastErrorCode = \"0\";\n\n      this.processListeners(callbackName);\n    }\n\n    this.apiLog(callbackName, \"returned: \" + returnValue, LogLevelEnum.INFO);\n    this.clearSCORMError(returnValue);\n\n    return returnValue;\n  }\n\n  /**\n   * Returns last error code\n   * @param {string} callbackName\n   * @return {string}\n   */\n  getLastError(callbackName: string): string {\n    const returnValue = String(this.lastErrorCode);\n\n    this.processListeners(callbackName);\n\n    this.apiLog(callbackName, \"returned: \" + returnValue, LogLevelEnum.INFO);\n\n    return returnValue;\n  }\n\n  /**\n   * Returns the errorNumber error description\n   *\n   * @param {string} callbackName\n   * @param {(string|number)} CMIErrorCode\n   * @return {string}\n   */\n  getErrorString(callbackName: string, CMIErrorCode: string | number): string {\n    let returnValue = \"\";\n\n    if (CMIErrorCode !== null && CMIErrorCode !== \"\") {\n      returnValue = this.getLmsErrorMessageDetails(CMIErrorCode);\n      this.processListeners(callbackName);\n    }\n\n    this.apiLog(callbackName, \"returned: \" + returnValue, LogLevelEnum.INFO);\n\n    return returnValue;\n  }\n\n  /**\n   * Returns a comprehensive description of the errorNumber error.\n   *\n   * @param {string} callbackName\n   * @param {(string|number)} CMIErrorCode\n   * @return {string}\n   */\n  getDiagnostic(callbackName: string, CMIErrorCode: string | number): string {\n    let returnValue = \"\";\n\n    if (CMIErrorCode !== null && CMIErrorCode !== \"\") {\n      returnValue = this.getLmsErrorMessageDetails(CMIErrorCode, true);\n      this.processListeners(callbackName);\n    }\n\n    this.apiLog(callbackName, \"returned: \" + returnValue, LogLevelEnum.INFO);\n\n    return returnValue;\n  }\n\n  /**\n   * Checks the LMS state and ensures it has been initialized.\n   *\n   * @param {boolean} checkTerminated\n   * @param {number} beforeInitError\n   * @param {number} afterTermError\n   * @return {boolean}\n   */\n  checkState(\n    checkTerminated: boolean,\n    beforeInitError: number,\n    afterTermError: number,\n  ): boolean {\n    if (this.isNotInitialized()) {\n      this.throwSCORMError(beforeInitError);\n      return false;\n    } else if (checkTerminated && this.isTerminated()) {\n      this.throwSCORMError(afterTermError);\n      return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Returns the message that corresponds to errorNumber\n   * APIs that inherit BaseAPI should override this function\n   *\n   * @param {(string|number)} _errorNumber\n   * @param {boolean} _detail\n   * @return {string}\n   * @abstract\n   */\n  getLmsErrorMessageDetails(\n    _errorNumber: string | number,\n    _detail: boolean = false,\n  ): string {\n    throw new Error(\n      \"The getLmsErrorMessageDetails method has not been implemented\",\n    );\n  }\n\n  /**\n   * Gets the value for the specific element.\n   * APIs that inherit BaseAPI should override this function\n   *\n   * @param {string} _CMIElement\n   * @return {string}\n   * @abstract\n   */\n  getCMIValue(_CMIElement: string): string {\n    throw new Error(\"The getCMIValue method has not been implemented\");\n  }\n\n  /**\n   * Sets the value for the specific element.\n   * APIs that inherit BaseAPI should override this function\n   *\n   * @param {string} _CMIElement\n   * @param {any} _value\n   * @return {string}\n   * @abstract\n   */\n  setCMIValue(_CMIElement: string, _value: any): string {\n    throw new Error(\"The setCMIValue method has not been implemented\");\n  }\n\n  /**\n   * Shared API method to set a valid for a given element.\n   *\n   * @param {string} methodName\n   * @param {boolean} scorm2004\n   * @param {string} CMIElement\n   * @param {any} value\n   * @return {string}\n   */\n  _commonSetCMIValue(\n    methodName: string,\n    scorm2004: boolean,\n    CMIElement: string,\n    value: any,\n  ): string {\n    if (!CMIElement || CMIElement === \"\") {\n      return global_constants.SCORM_FALSE;\n    }\n\n    const structure = CMIElement.split(\".\");\n    let refObject: RefObject = this;\n    let returnValue = global_constants.SCORM_FALSE;\n    let foundFirstIndex = false;\n\n    const invalidErrorMessage = `The data model element passed to ${methodName} (${CMIElement}) is not a valid SCORM data model element.`;\n    const invalidErrorCode = scorm2004\n      ? this._error_codes.UNDEFINED_DATA_MODEL\n      : this._error_codes.GENERAL;\n\n    for (let idx = 0; idx < structure.length; idx++) {\n      const attribute = structure[idx];\n      if (!attribute) {\n        this.throwSCORMError(invalidErrorCode as number, invalidErrorMessage);\n        return global_constants.SCORM_FALSE;\n      }\n\n      if (idx === structure.length - 1) {\n        if (scorm2004 && attribute.substring(0, 8) === \"{target=\") {\n          if (this.isInitialized()) {\n            this.throwSCORMError(this._error_codes.READ_ONLY_ELEMENT as number);\n          } else {\n            refObject = {\n              ...refObject,\n              attribute: value,\n            };\n          }\n        } else if (!this._checkObjectHasProperty(refObject, attribute)) {\n          this.throwSCORMError(invalidErrorCode as number, invalidErrorMessage);\n        } else {\n          if (\n            stringMatches(CMIElement, \"\\\\.correct_responses\\\\.\\\\d+\") &&\n            this.isInitialized()\n          ) {\n            this.validateCorrectResponse(CMIElement, value);\n          }\n\n          if (!scorm2004 || this.lastErrorCode === \"0\") {\n            refObject[attribute] = value;\n            returnValue = global_constants.SCORM_TRUE;\n          }\n        }\n      } else {\n        refObject = refObject[attribute];\n        if (!refObject) {\n          this.throwSCORMError(invalidErrorCode as number, invalidErrorMessage);\n          break;\n        }\n\n        if (refObject instanceof CMIArray) {\n          const index = parseInt(structure[idx + 1] || \"0\", 10);\n\n          // SCO is trying to set an item on an array\n          if (!isNaN(index)) {\n            const item = refObject.childArray[index];\n\n            if (item) {\n              refObject = item;\n              foundFirstIndex = true;\n            } else {\n              const newChild = this.getChildElement(\n                CMIElement,\n                value,\n                foundFirstIndex,\n              );\n              foundFirstIndex = true;\n\n              if (!newChild) {\n                this.throwSCORMError(\n                  invalidErrorCode as number,\n                  invalidErrorMessage,\n                );\n              } else {\n                if (refObject.initialized) newChild.initialize();\n\n                refObject.childArray.push(newChild);\n                refObject = newChild;\n              }\n            }\n\n            // Have to update idx value to skip the array position\n            idx++;\n          }\n        }\n      }\n    }\n\n    if (returnValue === global_constants.SCORM_FALSE) {\n      this.apiLog(\n        methodName,\n        `There was an error setting the value for: ${CMIElement}, value of: ${value}`,\n        LogLevelEnum.WARN,\n      );\n    }\n\n    return returnValue;\n  }\n\n  /**\n   * Gets a value from the CMI Object\n   *\n   * @param {string} methodName\n   * @param {boolean} scorm2004\n   * @param {string} CMIElement\n   * @return {any}\n   */\n  _commonGetCMIValue(\n    methodName: string,\n    scorm2004: boolean,\n    CMIElement: string,\n  ): any {\n    if (!CMIElement || CMIElement === \"\") {\n      return \"\";\n    }\n\n    const structure = CMIElement.split(\".\");\n    let refObject: RefObject = this;\n    let attribute = null;\n\n    const uninitializedErrorMessage = `The data model element passed to ${methodName} (${CMIElement}) has not been initialized.`;\n    const invalidErrorMessage = `The data model element passed to ${methodName} (${CMIElement}) is not a valid SCORM data model element.`;\n    const invalidErrorCode = scorm2004\n      ? this._error_codes.UNDEFINED_DATA_MODEL\n      : this._error_codes.GENERAL;\n\n    for (let idx = 0; idx < structure.length; idx++) {\n      attribute = structure[idx];\n\n      if (!attribute) {\n        this.throwSCORMError(invalidErrorCode as number, invalidErrorMessage);\n        return;\n      }\n\n      if (!scorm2004) {\n        if (idx === structure.length - 1) {\n          if (!this._checkObjectHasProperty(refObject, attribute)) {\n            this.throwSCORMError(\n              invalidErrorCode as number,\n              invalidErrorMessage,\n            );\n            return;\n          }\n        }\n      } else {\n        if (\n          String(attribute).substring(0, 8) === \"{target=\" &&\n          typeof refObject._isTargetValid == \"function\"\n        ) {\n          const target = String(attribute).substring(\n            8,\n            String(attribute).length - 9,\n          );\n          return refObject._isTargetValid(target);\n        } else if (!this._checkObjectHasProperty(refObject, attribute)) {\n          this.throwSCORMError(invalidErrorCode as number, invalidErrorMessage);\n          return;\n        }\n      }\n\n      refObject = refObject[attribute];\n      if (refObject === undefined) {\n        this.throwSCORMError(invalidErrorCode as number, invalidErrorMessage);\n        break;\n      }\n\n      if (refObject instanceof CMIArray) {\n        const index = parseInt(structure[idx + 1] || \"\", 10);\n\n        // SCO is trying to set an item on an array\n        if (!isNaN(index)) {\n          const item = refObject.childArray[index];\n\n          if (item) {\n            refObject = item;\n          } else {\n            this.throwSCORMError(\n              this._error_codes.VALUE_NOT_INITIALIZED as number,\n              uninitializedErrorMessage,\n            );\n            break;\n          }\n\n          // Have to update idx value to skip the array position\n          idx++;\n        }\n      }\n    }\n\n    if (refObject === null || refObject === undefined) {\n      if (!scorm2004) {\n        if (attribute === \"_children\") {\n          this.throwSCORMError(this._error_codes.CHILDREN_ERROR as number);\n        } else if (attribute === \"_count\") {\n          this.throwSCORMError(this._error_codes.COUNT_ERROR as number);\n        }\n      }\n    } else {\n      return refObject;\n    }\n  }\n\n  /**\n   * Returns true if the API's current state is STATE_INITIALIZED\n   *\n   * @return {boolean}\n   */\n  isInitialized(): boolean {\n    return this.currentState === global_constants.STATE_INITIALIZED;\n  }\n\n  /**\n   * Returns true if the API's current state is STATE_NOT_INITIALIZED\n   *\n   * @return {boolean}\n   */\n  isNotInitialized(): boolean {\n    return this.currentState === global_constants.STATE_NOT_INITIALIZED;\n  }\n\n  /**\n   * Returns true if the API's current state is STATE_TERMINATED\n   *\n   * @return {boolean}\n   */\n  isTerminated(): boolean {\n    return this.currentState === global_constants.STATE_TERMINATED;\n  }\n\n  /**\n   * Provides a mechanism for attaching to a specific SCORM event\n   *\n   * @param {string} listenerName\n   * @param {function} callback\n   */\n  on(listenerName: string, callback: Function) {\n    if (!callback) return;\n\n    const listenerFunctions = listenerName.split(\" \");\n    for (let i = 0; i < listenerFunctions.length; i++) {\n      const listenerSplit = listenerFunctions[i]?.split(\".\");\n      if (!listenerSplit || listenerSplit.length === 0) return;\n\n      const functionName = listenerSplit[0];\n\n      let CMIElement = null;\n      if (listenerSplit.length > 1) {\n        CMIElement = listenerFunctions[i]?.replace(functionName + \".\", \"\");\n      }\n\n      this.listenerArray.push({\n        functionName: functionName,\n        CMIElement: CMIElement,\n        callback: callback,\n      });\n\n      this.apiLog(\n        \"on\",\n        `Added event listener: ${this.listenerArray.length}`,\n        LogLevelEnum.INFO,\n        functionName,\n      );\n    }\n  }\n\n  /**\n   * Provides a mechanism for detaching a specific SCORM event listener\n   *\n   * @param {string} listenerName\n   * @param {function} callback\n   */\n  off(listenerName: string, callback: Function) {\n    if (!callback) return;\n\n    const listenerFunctions = listenerName.split(\" \");\n    for (let i = 0; i < listenerFunctions.length; i++) {\n      const listenerSplit = listenerFunctions[i]?.split(\".\");\n      if (!listenerSplit || listenerSplit.length === 0) return;\n\n      const functionName = listenerSplit[0];\n\n      let CMIElement = null;\n      if (listenerSplit.length > 1) {\n        CMIElement = listenerFunctions[i]?.replace(functionName + \".\", \"\");\n      }\n\n      const removeIndex = this.listenerArray.findIndex(\n        (obj) =>\n          obj.functionName === functionName &&\n          obj.CMIElement === CMIElement &&\n          obj.callback === callback,\n      );\n      if (removeIndex !== -1) {\n        this.listenerArray.splice(removeIndex, 1);\n        this.apiLog(\n          \"off\",\n          `Removed event listener: ${this.listenerArray.length}`,\n          LogLevelEnum.INFO,\n          functionName,\n        );\n      }\n    }\n  }\n\n  /**\n   * Provides a mechanism for clearing all listeners from a specific SCORM event\n   *\n   * @param {string} listenerName\n   */\n  clear(listenerName: string) {\n    const listenerFunctions = listenerName.split(\" \");\n    for (let i = 0; i < listenerFunctions.length; i++) {\n      const listenerSplit = listenerFunctions[i]?.split(\".\");\n      if (!listenerSplit || listenerSplit?.length === 0) return;\n\n      const functionName = listenerSplit[0];\n\n      let CMIElement = null;\n      if (listenerSplit.length > 1) {\n        CMIElement = listenerFunctions[i]?.replace(functionName + \".\", \"\");\n      }\n\n      this.listenerArray = this.listenerArray.filter(\n        (obj) =>\n          obj.functionName !== functionName && obj.CMIElement !== CMIElement,\n      );\n    }\n  }\n\n  /**\n   * Processes any 'on' listeners that have been created\n   *\n   * @param {string} functionName\n   * @param {string} CMIElement\n   * @param {any} value\n   */\n  processListeners(functionName: string, CMIElement?: string, value?: any) {\n    this.apiLog(functionName, value, LogLevelEnum.INFO, CMIElement);\n    for (let i = 0; i < this.listenerArray.length; i++) {\n      const listener = this.listenerArray[i];\n      const functionsMatch = listener.functionName === functionName;\n      const listenerHasCMIElement = !!listener.CMIElement;\n      let CMIElementsMatch = false;\n      if (\n        CMIElement &&\n        listener.CMIElement &&\n        listener.CMIElement.substring(listener.CMIElement.length - 1) === \"*\"\n      ) {\n        CMIElementsMatch =\n          CMIElement.indexOf(\n            listener.CMIElement.substring(0, listener.CMIElement.length - 1),\n          ) === 0;\n      } else {\n        CMIElementsMatch = listener.CMIElement === CMIElement;\n      }\n\n      if (functionsMatch && (!listenerHasCMIElement || CMIElementsMatch)) {\n        this.apiLog(\n          \"processListeners\",\n          `Processing listener: ${listener.functionName}`,\n          LogLevelEnum.INFO,\n          CMIElement,\n        );\n        listener.callback(CMIElement, value);\n      }\n    }\n  }\n\n  /**\n   * Throws a SCORM error\n   *\n   * @param {number} errorNumber\n   * @param {string} message\n   */\n  throwSCORMError(errorNumber: number, message?: string) {\n    if (!message) {\n      message = this.getLmsErrorMessageDetails(errorNumber);\n    }\n\n    this.apiLog(\n      \"throwSCORMError\",\n      errorNumber + \": \" + message,\n      LogLevelEnum.ERROR,\n    );\n\n    this.lastErrorCode = String(errorNumber);\n  }\n\n  /**\n   * Clears the last SCORM error code on success.\n   *\n   * @param {string} success\n   */\n  clearSCORMError(success: string) {\n    if (success !== undefined && success !== global_constants.SCORM_FALSE) {\n      this.lastErrorCode = \"0\";\n    }\n  }\n\n  /**\n   * Load the CMI from a flattened JSON object\n   * @param {RefObject} json\n   * @param {string} CMIElement\n   */\n  loadFromFlattenedJSON(json: RefObject, CMIElement?: string) {\n    if (!CMIElement) {\n      // by default, we start from a blank string because we're expecting each element to start with `cmi`\n      CMIElement = \"\";\n    }\n    if (!this.isNotInitialized()) {\n      console.error(\n        \"loadFromFlattenedJSON can only be called before the call to lmsInitialize.\",\n      );\n      return;\n    }\n\n    /**\n     * Tests two strings against a given regular expression pattern and determines a numeric or null result based on the matching criterion.\n     *\n     * @param {string} a - The first string to be tested against the pattern.\n     * @param {string} c - The second string to be tested against the pattern.\n     * @param {RegExp} a_pattern - The regular expression pattern to test the strings against.\n     * @return {number | null} A numeric result based on the matching criterion, or null if the strings do not match the pattern.\n     */\n    function testPattern(\n      a: string,\n      c: string,\n      a_pattern: RegExp,\n    ): number | null {\n      const a_match = a.match(a_pattern);\n\n      let c_match;\n      if (a_match !== null && (c_match = c.match(a_pattern)) !== null) {\n        const a_num = Number(a_match[2]);\n        const c_num = Number(c_match[2]);\n        if (a_num === c_num) {\n          if (a_match[3] === \"id\") {\n            return -1;\n          } else if (a_match[3] === \"type\") {\n            if (c_match[3] === \"id\") {\n              return 1;\n            } else {\n              return -1;\n            }\n          } else {\n            return 1;\n          }\n        }\n        return a_num - c_num;\n      }\n\n      return null;\n    }\n\n    const int_pattern = /^(cmi\\.interactions\\.)(\\d+)\\.(.*)$/;\n    const obj_pattern = /^(cmi\\.objectives\\.)(\\d+)\\.(.*)$/;\n\n    const result = Object.keys(json).map(function (key) {\n      return [String(key), json[key]];\n    });\n\n    // CMI interactions need to have id and type loaded before any other fields\n    result.sort(function ([a, _b], [c, _d]) {\n      let test;\n      if ((test = testPattern(a, c, int_pattern)) !== null) {\n        return test;\n      }\n      if ((test = testPattern(a, c, obj_pattern)) !== null) {\n        return test;\n      }\n\n      if (a < c) {\n        return -1;\n      }\n      if (a > c) {\n        return 1;\n      }\n      return 0;\n    });\n\n    let obj: RefObject;\n    result.forEach((element) => {\n      obj = {};\n      obj[element[0]] = element[1];\n      this.loadFromJSON(unflatten(obj), CMIElement);\n    });\n  }\n\n  /**\n   * Loads CMI data from a JSON object.\n   *\n   * @param {RefObject} json\n   * @param {string} CMIElement\n   */\n  loadFromJSON(json: RefObject, CMIElement: string = \"\") {\n    if (\n      (!CMIElement || CMIElement === \"\") &&\n      !Object.hasOwnProperty.call(json, \"cmi\") &&\n      !Object.hasOwnProperty.call(json, \"adl\")\n    ) {\n      // providing a backward compatibility for the old v1 API\n      CMIElement = \"cmi\";\n    }\n\n    if (!this.isNotInitialized()) {\n      console.error(\n        \"loadFromJSON can only be called before the call to lmsInitialize.\",\n      );\n      return;\n    }\n\n    CMIElement = CMIElement !== undefined ? CMIElement : \"cmi\";\n\n    this.startingData = json;\n\n    // could this be refactored down to flatten(json) then setCMIValue on each?\n    for (const key in json) {\n      if ({}.hasOwnProperty.call(json, key) && json[key]) {\n        const currentCMIElement = (CMIElement ? CMIElement + \".\" : \"\") + key;\n        const value = json[key];\n\n        if (value[\"childArray\"]) {\n          for (let i = 0; i < value[\"childArray\"].length; i++) {\n            this.loadFromJSON(\n              value[\"childArray\"][i],\n              currentCMIElement + \".\" + i,\n            );\n          }\n        } else if (value.constructor === Object) {\n          this.loadFromJSON(value, currentCMIElement);\n        } else {\n          this.setCMIValue(currentCMIElement, value);\n        }\n      }\n    }\n  }\n\n  /**\n   * Render the CMI object to JSON for sending to an LMS.\n   *\n   * @return {string}\n   */\n  renderCMIToJSONString(): string {\n    const cmi = this.cmi;\n    // Do we want/need to return fields that have no set value?\n    if (this.settings.sendFullCommit) {\n      return JSON.stringify({ cmi });\n    }\n    return JSON.stringify({ cmi }, (k, v) => (v === undefined ? null : v), 2);\n  }\n\n  /**\n   * Returns a JS object representing the current cmi\n   * @return {object}\n   */\n  renderCMIToJSONObject(): object {\n    return JSON.parse(this.renderCMIToJSONString());\n  }\n\n  /**\n   * Send the request to the LMS\n   * @param {string} url\n   * @param {CommitObject|RefObject|Array} params\n   * @param {boolean} immediate\n   * @return {ResultObject}\n   */\n  async processHttpRequest(\n    url: string,\n    params: CommitObject | RefObject | Array<any>,\n    immediate: boolean = false,\n  ): Promise<ResultObject> {\n    const api = this;\n    const genericError: ResultObject = {\n      result: global_constants.SCORM_FALSE,\n      errorCode: this.error_codes.GENERAL as number,\n    };\n\n    // if we are terminating the module or closing the browser window/tab, we need to make this fetch ASAP.\n    // Some browsers, especially Chrome, do not like synchronous requests to be made when the window is closing.\n    if (immediate) {\n      this.performFetch(url, params).then(async (response) => {\n        await this.transformResponse(response);\n      });\n      return {\n        result: global_constants.SCORM_TRUE,\n        errorCode: 0,\n      };\n    }\n\n    const process = async (\n      url: string,\n      params: CommitObject | RefObject | Array<any>,\n      settings: InternalSettings,\n    ): Promise<ResultObject> => {\n      try {\n        params = settings.requestHandler(params);\n        const response = await this.performFetch(url, params);\n\n        return this.transformResponse(response);\n      } catch (e: unknown) {\n        const message = e instanceof Error ? e.message : String(e);\n        this.apiLog(\"processHttpRequest\", message, LogLevelEnum.ERROR);\n        api.processListeners(\"CommitError\");\n        return genericError;\n      }\n    };\n\n    return await process(url, params, this.settings);\n  }\n\n  /**\n   * Throws a SCORM error\n   *\n   * @param {number} when - the number of milliseconds to wait before committing\n   * @param {string} callback - the name of the commit event callback\n   */\n  scheduleCommit(when: number, callback: string) {\n    if (!this._timeout) {\n      this._timeout = new ScheduledCommit(this, when, callback);\n      this.apiLog(\"scheduleCommit\", \"scheduled\", LogLevelEnum.DEBUG, \"\");\n    }\n  }\n\n  /**\n   * Clears and cancels any currently scheduled commits\n   */\n  clearScheduledCommit() {\n    if (this._timeout) {\n      this._timeout.cancel();\n      this._timeout = undefined;\n      this.apiLog(\"clearScheduledCommit\", \"cleared\", LogLevelEnum.DEBUG, \"\");\n    }\n  }\n\n  /**\n   * Check to see if the specific object has the given property\n   * @param {RefObject} refObject\n   * @param {string} attribute\n   * @return {boolean}\n   * @private\n   */\n  private _checkObjectHasProperty(\n    refObject: RefObject,\n    attribute: string,\n  ): boolean {\n    return (\n      Object.hasOwnProperty.call(refObject, attribute) ||\n      Object.getOwnPropertyDescriptor(\n        Object.getPrototypeOf(refObject),\n        attribute,\n      ) != null ||\n      attribute in refObject\n    );\n  }\n\n  /**\n   * Handles the error that occurs when trying to access a value\n   * @param {any} e\n   * @param {string} returnValue\n   * @return {string}\n   * @private\n   */\n  private handleValueAccessException(e: any, returnValue: string): string {\n    if (e instanceof ValidationError) {\n      this.lastErrorCode = String(e.errorCode);\n      returnValue = global_constants.SCORM_FALSE;\n    } else {\n      if (e instanceof Error && e.message) {\n        console.error(e.message);\n      } else {\n        console.error(e);\n      }\n      this.throwSCORMError(this._error_codes.GENERAL as number);\n    }\n    return returnValue;\n  }\n\n  /**\n   * Builds the commit object to be sent to the LMS\n   * @param {boolean} terminateCommit\n   * @return {CommitObject|RefObject|Array}\n   * @private\n   */\n  protected getCommitObject(\n    terminateCommit: boolean,\n  ): CommitObject | RefObject | Array<any> {\n    const shouldTerminateCommit =\n      terminateCommit || this.settings.alwaysSendTotalTime;\n    const commitObject = this.settings.renderCommonCommitFields\n      ? this.renderCommitObject(shouldTerminateCommit)\n      : this.renderCommitCMI(shouldTerminateCommit);\n\n    if ([LogLevelEnum.DEBUG, \"1\", 1, \"DEBUG\"].includes(this.apiLogLevel)) {\n      console.debug(\n        \"Commit (terminated: \" + (terminateCommit ? \"yes\" : \"no\") + \"): \",\n      );\n      console.debug(commitObject);\n    }\n    return commitObject;\n  }\n\n  /**\n   * Perform the fetch request to the LMS\n   * @param {string} url\n   * @param {RefObject|Array} params\n   * @return {Promise<Response>}\n   * @private\n   */\n  private async performFetch(\n    url: string,\n    params: RefObject | Array<any>,\n  ): Promise<Response> {\n    let init = {\n      method: \"POST\",\n      mode: this.settings.fetchMode,\n      body: params instanceof Array ? params.join(\"&\") : JSON.stringify(params),\n      headers: {\n        ...this.settings.xhrHeaders,\n        \"Content-Type\": this.settings.commitRequestDataType,\n      },\n      keepalive: true,\n    } as RequestInit;\n\n    if (this.settings.xhrWithCredentials) {\n      init = {\n        ...init,\n        credentials: \"include\",\n      };\n    }\n\n    return fetch(url, init);\n  }\n\n  /**\n   * Transforms the response from the LMS to a ResultObject\n   * @param {Response} response\n   * @return {Promise<ResultObject>}\n   * @private\n   */\n  private async transformResponse(response: Response): Promise<ResultObject> {\n    const result =\n      typeof this.settings.responseHandler === \"function\"\n        ? await this.settings.responseHandler(response)\n        : await response.json();\n\n    if (\n      response.status >= 200 &&\n      response.status <= 299 &&\n      (result.result === true || result.result === global_constants.SCORM_TRUE)\n    ) {\n      this.processListeners(\"CommitSuccess\");\n    } else {\n      this.processListeners(\"CommitError\");\n    }\n    return result;\n  }\n}\n","import { CMI } from \"./cmi/scorm12/cmi\";\nimport * as Utilities from \"./utilities\";\nimport { stringMatches } from \"./utilities\";\nimport { global_constants, scorm12_constants } from \"./constants/api_constants\";\nimport { scorm12_errors } from \"./constants/error_codes\";\n\nimport { BaseCMI } from \"./cmi/common/base_cmi\";\nimport { CMIObjectivesObject } from \"./cmi/scorm12/objectives\";\nimport {\n  CMIInteractionsCorrectResponsesObject,\n  CMIInteractionsObject,\n  CMIInteractionsObjectivesObject\n} from \"./cmi/scorm12/interactions\";\nimport { NAV } from \"./cmi/scorm12/nav\";\nimport { CommitObject, RefObject, ResultObject, ScoreObject, Settings } from \"./types/api_types\";\nimport { CompletionStatus, SuccessStatus } from \"./constants/enums\";\nimport BaseAPI from \"./BaseAPI\";\nimport { scorm12_regex } from \"./constants/regex\";\n\n/**\n * API class for SCORM 1.2\n */\nclass Scorm12Impl extends BaseAPI {\n  /**\n   * Constructor for SCORM 1.2 API\n   * @param {object} settings\n   */\n  constructor(settings?: Settings) {\n    if (settings) {\n      if (settings.mastery_override === undefined) {\n        settings.mastery_override = false;\n      }\n    }\n\n    super(scorm12_errors, settings);\n\n    this.cmi = new CMI();\n    this.nav = new NAV();\n\n    // Rename functions to match 1.2 Spec and expose to modules\n    this.LMSInitialize = this.lmsInitialize;\n    this.LMSFinish = this.lmsFinish;\n    this.LMSGetValue = this.lmsGetValue;\n    this.LMSSetValue = this.lmsSetValue;\n    this.LMSCommit = this.lmsCommit;\n    this.LMSGetLastError = this.lmsGetLastError;\n    this.LMSGetErrorString = this.lmsGetErrorString;\n    this.LMSGetDiagnostic = this.lmsGetDiagnostic;\n  }\n\n  public statusSetByModule = false;\n\n  cmi: CMI;\n  nav: NAV;\n\n  LMSInitialize: () => string;\n  LMSFinish: () => string;\n  LMSGetValue: (CMIElement: string) => string;\n  LMSSetValue: (CMIElement: string, value: any) => string;\n  LMSCommit: () => string;\n  LMSGetLastError: () => string;\n  LMSGetErrorString: (CMIErrorCode: string) => string;\n  LMSGetDiagnostic: (CMIErrorCode: string) => string;\n\n  /**\n   * Called when the API needs to be reset\n   */\n  reset(settings?: Settings) {\n    this.commonReset(settings);\n\n    this.cmi?.reset();\n    this.nav?.reset();\n  }\n\n  /**\n   * lmsInitialize function from SCORM 1.2 Spec\n   *\n   * @return {string} bool\n   */\n  lmsInitialize(): string {\n    this.cmi.initialize();\n    if (this.cmi.core.lesson_status) {\n      this.statusSetByModule = true;\n    } else {\n      this.cmi.core.lesson_status = \"not attempted\";\n    }\n    return this.initialize(\n      \"LMSInitialize\",\n      \"LMS was already initialized!\",\n      \"LMS is already finished!\",\n    );\n  }\n\n  /**\n   * LMSFinish function from SCORM 1.2 Spec\n   *\n   * @return {string} bool\n   */\n  lmsFinish(): string {\n    (async () => {\n      await this.internalFinish();\n    })();\n    return global_constants.SCORM_TRUE;\n  }\n\n  async internalFinish(): Promise<string> {\n    const result = await this.terminate(\"LMSFinish\", true);\n\n    if (result === global_constants.SCORM_TRUE) {\n      if (this.nav.event !== \"\") {\n        if (this.nav.event === \"continue\") {\n          this.processListeners(\"SequenceNext\");\n        } else {\n          this.processListeners(\"SequencePrevious\");\n        }\n      } else if (this.settings.autoProgress) {\n        this.processListeners(\"SequenceNext\");\n      }\n    }\n\n    return result;\n  }\n\n  /**\n   * LMSGetValue function from SCORM 1.2 Spec\n   *\n   * @param {string} CMIElement\n   * @return {string}\n   */\n  lmsGetValue(CMIElement: string): string {\n    return this.getValue(\"LMSGetValue\", false, CMIElement);\n  }\n\n  /**\n   * LMSSetValue function from SCORM 1.2 Spec\n   *\n   * @param {string} CMIElement\n   * @param {*} value\n   * @return {string}\n   */\n  lmsSetValue(CMIElement: string, value: any): string {\n    if (CMIElement === \"cmi.core.lesson_status\") {\n      this.statusSetByModule = true;\n    }\n    return this.setValue(\"LMSSetValue\", \"LMSCommit\", false, CMIElement, value);\n  }\n\n  /**\n   * LMSCommit function from SCORM 1.2 Spec\n   *\n   * @return {string} bool\n   */\n  lmsCommit(): string {\n    if (this.settings.asyncCommit) {\n      this.scheduleCommit(500, \"LMSCommit\");\n    } else {\n      (async () => {\n        await this.commit(\"LMSCommit\", false);\n      })();\n    }\n    return global_constants.SCORM_TRUE;\n  }\n\n  /**\n   * LMSGetLastError function from SCORM 1.2 Spec\n   *\n   * @return {string}\n   */\n  lmsGetLastError(): string {\n    return this.getLastError(\"LMSGetLastError\");\n  }\n\n  /**\n   * LMSGetErrorString function from SCORM 1.2 Spec\n   *\n   * @param {string} CMIErrorCode\n   * @return {string}\n   */\n  lmsGetErrorString(CMIErrorCode: string): string {\n    return this.getErrorString(\"LMSGetErrorString\", CMIErrorCode);\n  }\n\n  /**\n   * LMSGetDiagnostic function from SCORM 1.2 Spec\n   *\n   * @param {string} CMIErrorCode\n   * @return {string}\n   */\n  lmsGetDiagnostic(CMIErrorCode: string): string {\n    return this.getDiagnostic(\"LMSGetDiagnostic\", CMIErrorCode);\n  }\n\n  /**\n   * Sets a value on the CMI Object\n   *\n   * @param {string} CMIElement\n   * @param {*} value\n   * @return {string}\n   */\n  override setCMIValue(CMIElement: string, value: any): string {\n    return this._commonSetCMIValue(\"LMSSetValue\", false, CMIElement, value);\n  }\n\n  /**\n   * Gets a value from the CMI Object\n   *\n   * @param {string} CMIElement\n   * @return {*}\n   */\n  override getCMIValue(CMIElement: string): any {\n    return this._commonGetCMIValue(\"getCMIValue\", false, CMIElement);\n  }\n\n  /**\n   * Gets or builds a new child element to add to the array.\n   *\n   * @param {string} CMIElement\n   * @param {*} _value\n   * @param {boolean} foundFirstIndex\n   * @return {BaseCMI|null}\n   */\n  getChildElement(\n    CMIElement: string,\n    _value: any,\n    foundFirstIndex: boolean,\n  ): BaseCMI | null {\n    if (stringMatches(CMIElement, \"cmi\\\\.objectives\\\\.\\\\d+\")) {\n      return new CMIObjectivesObject();\n    } else if (\n      foundFirstIndex &&\n      stringMatches(\n        CMIElement,\n        \"cmi\\\\.interactions\\\\.\\\\d+\\\\.correct_responses\\\\.\\\\d+\",\n      )\n    ) {\n      return new CMIInteractionsCorrectResponsesObject();\n    } else if (\n      foundFirstIndex &&\n      stringMatches(CMIElement, \"cmi\\\\.interactions\\\\.\\\\d+\\\\.objectives\\\\.\\\\d+\")\n    ) {\n      return new CMIInteractionsObjectivesObject();\n    } else if (\n      !foundFirstIndex &&\n      stringMatches(CMIElement, \"cmi\\\\.interactions\\\\.\\\\d+\")\n    ) {\n      return new CMIInteractionsObject();\n    }\n\n    return null;\n  }\n\n  /**\n   * Validates Correct Response values\n   *\n   * @param {string} _CMIElement\n   * @param {*} _value\n   */\n  validateCorrectResponse(_CMIElement: string, _value: any) {\n    // do nothing\n  }\n\n  /**\n   * Returns the message that corresponds to errorNumber.\n   *\n   * @param {number|string} errorNumber\n   * @param {boolean} detail\n   * @return {string}\n   */\n  override getLmsErrorMessageDetails(\n    errorNumber: number | string,\n    detail: boolean,\n  ): string {\n    let basicMessage = \"No Error\";\n    let detailMessage = \"No Error\";\n\n    // Set error number to string since inconsistent from modules if string or number\n    errorNumber = String(errorNumber);\n    if (scorm12_constants.error_descriptions[errorNumber]) {\n      basicMessage =\n        scorm12_constants.error_descriptions[errorNumber]?.basicMessage ||\n        \"General Error\";\n      detailMessage =\n        scorm12_constants.error_descriptions[errorNumber]?.detailMessage || \"\";\n    }\n\n    return detail ? detailMessage : basicMessage;\n  }\n\n  /**\n   * Replace the whole API with another\n   *\n   * @param {Scorm12Impl} newAPI\n   */\n  replaceWithAnotherScormAPI(newAPI: Scorm12Impl) {\n    // Data Model\n    this.cmi = newAPI.cmi;\n  }\n\n  /**\n   * Render the cmi object to the proper format for LMS commit\n   *\n   * @param {boolean} terminateCommit\n   * @return {object|Array}\n   */\n  renderCommitCMI(terminateCommit: boolean): object | Array<any> {\n    const cmiExport: RefObject = this.renderCMIToJSONObject();\n\n    if (terminateCommit) {\n      cmiExport.cmi.core.total_time = this.cmi.getCurrentTotalTime();\n    }\n\n    const result = [];\n    const flattened: RefObject = Utilities.flatten(cmiExport);\n    switch (this.settings.dataCommitFormat) {\n      case \"flattened\":\n        return Utilities.flatten(cmiExport);\n      case \"params\":\n        for (const item in flattened) {\n          if ({}.hasOwnProperty.call(flattened, item)) {\n            result.push(`${item}=${flattened[item]}`);\n          }\n        }\n        return result;\n      case \"json\":\n      default:\n        return cmiExport;\n    }\n  }\n\n  /**\n   * Render the cmi object to the proper format for LMS commit\n   * @param {boolean} terminateCommit\n   * @return {CommitObject}\n   */\n  renderCommitObject(terminateCommit: boolean): CommitObject {\n    const cmiExport = this.renderCommitCMI(terminateCommit);\n    const totalTimeHHMMSS = this.cmi.getCurrentTotalTime();\n    const totalTimeSeconds = Utilities.getTimeAsSeconds(\n      totalTimeHHMMSS,\n      scorm12_regex.CMITimespan,\n    );\n    const lessonStatus = this.cmi.core.lesson_status;\n    let completionStatus = CompletionStatus.unknown;\n    let successStatus = SuccessStatus.unknown;\n    if (lessonStatus) {\n      completionStatus =\n        lessonStatus === \"completed\" || lessonStatus === \"passed\"\n          ? CompletionStatus.completed\n          : CompletionStatus.incomplete;\n      if (lessonStatus === \"passed\") {\n        successStatus = SuccessStatus.passed;\n      } else if (lessonStatus === \"failed\") {\n        successStatus = SuccessStatus.failed;\n      }\n    }\n\n    const score = this.cmi.core.score;\n    const scoreObject: ScoreObject = {};\n    if (score) {\n      if (!Number.isNaN(Number.parseFloat(score.raw))) {\n        scoreObject.raw = Number.parseFloat(score.raw);\n      }\n      if (!Number.isNaN(Number.parseFloat(score.min))) {\n        scoreObject.min = Number.parseFloat(score.min);\n      }\n      if (!Number.isNaN(Number.parseFloat(score.max))) {\n        scoreObject.max = Number.parseFloat(score.max);\n      }\n    }\n\n    const commitObject: CommitObject = {\n      successStatus: successStatus,\n      completionStatus: completionStatus,\n      runtimeData: cmiExport,\n      totalTimeSeconds: totalTimeSeconds,\n    };\n    if (scoreObject) {\n      commitObject.score = scoreObject;\n    }\n    return commitObject;\n  }\n\n  /**\n   * Attempts to store the data to the LMS\n   *\n   * @param {boolean} terminateCommit\n   * @return {ResultObject}\n   */\n  async storeData(terminateCommit: boolean): Promise<ResultObject> {\n    if (terminateCommit) {\n      const originalStatus = this.cmi.core.lesson_status;\n      if (\n        !this.cmi.core.lesson_status ||\n        (!this.statusSetByModule &&\n          this.cmi.core.lesson_status === \"not attempted\")\n      ) {\n        this.cmi.core.lesson_status = \"completed\";\n      }\n\n      if (this.cmi.core.lesson_mode === \"normal\") {\n        if (this.cmi.core.credit === \"credit\") {\n          if (\n            this.settings.mastery_override &&\n            this.cmi.student_data.mastery_score !== \"\" &&\n            this.cmi.core.score.raw !== \"\"\n          ) {\n            this.cmi.core.lesson_status =\n              parseFloat(this.cmi.core.score.raw) >=\n              parseFloat(this.cmi.student_data.mastery_score)\n                ? \"passed\"\n                : \"failed\";\n          }\n        }\n      } else if (this.cmi.core.lesson_mode === \"browse\") {\n        if (\n          (this.startingData?.cmi?.core?.lesson_status || \"\") === \"\" &&\n          originalStatus === \"not attempted\"\n        ) {\n          this.cmi.core.lesson_status = \"browsed\";\n        }\n      }\n    }\n\n    const commitObject = this.getCommitObject(terminateCommit);\n    if (typeof this.settings.lmsCommitUrl === \"string\") {\n      return await this.processHttpRequest(\n        this.settings.lmsCommitUrl,\n        commitObject,\n        terminateCommit,\n      );\n    } else {\n      return {\n        result: global_constants.SCORM_TRUE,\n        errorCode: 0,\n      };\n    }\n  }\n}\n\nexport { Scorm12Impl as Scorm12API };\n","import { ValidationError } from \"../exceptions\";\nimport { scorm2004_constants } from \"../constants/api_constants\";\n\nconst scorm2004_errors = scorm2004_constants.error_descriptions;\n\n/**\n * SCORM 2004 Validation Error\n */\nexport class Scorm2004ValidationError extends ValidationError {\n  /**\n   * Constructor to take in an error code\n   * @param {number} errorCode\n   */\n  constructor(errorCode: number) {\n    if ({}.hasOwnProperty.call(scorm2004_errors, String(errorCode))) {\n      super(\n        errorCode,\n        scorm2004_errors[String(errorCode)]?.basicMessage || \"Unknown error\",\n        scorm2004_errors[String(errorCode)]?.detailMessage,\n      );\n    } else {\n      super(\n        101,\n        scorm2004_errors[\"101\"]?.basicMessage || \"General error\",\n        scorm2004_errors[\"101\"]?.detailMessage,\n      );\n    }\n  }\n}\n","import { checkValidFormat, checkValidRange } from \"../common/validation\";\nimport { scorm2004_errors } from \"../../constants/error_codes\";\nimport { Scorm2004ValidationError } from \"../../exceptions/scorm2004_exceptions\";\n\n/**\n * Helper method, no reason to have to pass the same error codes every time\n * @param {string} value\n * @param {string} regexPattern\n * @param {boolean} allowEmptyString\n * @return {boolean}\n */\nexport function check2004ValidFormat(\n  value: string,\n  regexPattern: string,\n  allowEmptyString?: boolean,\n): boolean {\n  return checkValidFormat(\n    value,\n    regexPattern,\n    scorm2004_errors.TYPE_MISMATCH as number,\n    Scorm2004ValidationError,\n    allowEmptyString,\n  );\n}\n\n/**\n * Helper method, no reason to have to pass the same error codes every time\n * @param {string} value\n * @param {string} rangePattern\n * @return {boolean}\n */\nexport function check2004ValidRange(\n  value: string,\n  rangePattern: string,\n): boolean {\n  return checkValidRange(\n    value,\n    rangePattern,\n    scorm2004_errors.VALUE_OUT_OF_RANGE as number,\n    Scorm2004ValidationError,\n  );\n}\n","/**\n * Class for SCORM 2004's cmi.learner_preference object\n */\nimport { BaseCMI } from \"../common/base_cmi\";\nimport { scorm2004_constants } from \"../../constants/api_constants\";\nimport { Scorm2004ValidationError } from \"../../exceptions/scorm2004_exceptions\";\nimport { scorm2004_errors } from \"../../constants/error_codes\";\nimport { check2004ValidFormat, check2004ValidRange } from \"./validation\";\nimport { scorm2004_regex } from \"../../constants/regex\";\n\nexport class CMILearnerPreference extends BaseCMI {\n  private __children = scorm2004_constants.student_preference_children;\n  private _audio_level = \"1\";\n  private _language = \"\";\n  private _delivery_speed = \"1\";\n  private _audio_captioning = \"0\";\n\n  /**\n   * Constructor for cmi.learner_preference\n   */\n  constructor() {\n    super();\n  }\n\n  /**\n   * Called when the API has been reset\n   */\n  override reset() {\n    this._initialized = false;\n  }\n\n  /**\n   * Getter for __children\n   * @return {string}\n   * @private\n   */\n  get _children(): string {\n    return this.__children;\n  }\n\n  /**\n   * Setter for __children. Just throws an error.\n   * @param {string} _children\n   * @private\n   */\n  set _children(_children: string) {\n    throw new Scorm2004ValidationError(\n      scorm2004_errors.READ_ONLY_ELEMENT as number,\n    );\n  }\n\n  /**\n   * Getter for _audio_level\n   * @return {string}\n   */\n  get audio_level(): string {\n    return this._audio_level;\n  }\n\n  /**\n   * Setter for _audio_level\n   * @param {string} audio_level\n   */\n  set audio_level(audio_level: string) {\n    if (\n      check2004ValidFormat(audio_level, scorm2004_regex.CMIDecimal) &&\n      check2004ValidRange(audio_level, scorm2004_regex.audio_range)\n    ) {\n      this._audio_level = audio_level;\n    }\n  }\n\n  /**\n   * Getter for _language\n   * @return {string}\n   */\n  get language(): string {\n    return this._language;\n  }\n\n  /**\n   * Setter for _language\n   * @param {string} language\n   */\n  set language(language: string) {\n    if (check2004ValidFormat(language, scorm2004_regex.CMILang)) {\n      this._language = language;\n    }\n  }\n\n  /**\n   * Getter for _delivery_speed\n   * @return {string}\n   */\n  get delivery_speed(): string {\n    return this._delivery_speed;\n  }\n\n  /**\n   * Setter for _delivery_speed\n   * @param {string} delivery_speed\n   */\n  set delivery_speed(delivery_speed: string) {\n    if (\n      check2004ValidFormat(delivery_speed, scorm2004_regex.CMIDecimal) &&\n      check2004ValidRange(delivery_speed, scorm2004_regex.speed_range)\n    ) {\n      this._delivery_speed = delivery_speed;\n    }\n  }\n\n  /**\n   * Getter for _audio_captioning\n   * @return {string}\n   */\n  get audio_captioning(): string {\n    return this._audio_captioning;\n  }\n\n  /**\n   * Setter for _audio_captioning\n   * @param {string} audio_captioning\n   */\n  set audio_captioning(audio_captioning: string) {\n    if (\n      check2004ValidFormat(audio_captioning, scorm2004_regex.CMISInteger) &&\n      check2004ValidRange(audio_captioning, scorm2004_regex.text_range)\n    ) {\n      this._audio_captioning = audio_captioning;\n    }\n  }\n\n  /**\n   * toJSON for cmi.learner_preference\n   *\n   * @return {\n   *    {\n   *      audio_level: string,\n   *      language: string,\n   *      delivery_speed: string,\n   *      audio_captioning: string\n   *    }\n   *  }\n   */\n  toJSON(): {\n    audio_level: string;\n    language: string;\n    delivery_speed: string;\n    audio_captioning: string;\n  } {\n    this.jsonString = true;\n    const result = {\n      audio_level: this.audio_level,\n      language: this.language,\n      delivery_speed: this.delivery_speed,\n      audio_captioning: this.audio_captioning,\n    };\n    delete this.jsonString;\n    return result;\n  }\n}\n","import { scorm2004_regex } from \"./regex\";\n\nexport const LearnerResponses: Responses = {\n  \"true-false\": {\n    format: \"^true$|^false$\",\n    max: 1,\n    delimiter: \"\",\n    unique: false,\n  },\n  choice: {\n    format: scorm2004_regex.CMILongIdentifier,\n    max: 36,\n    delimiter: \"[,]\",\n    unique: true,\n  },\n  \"fill-in\": {\n    format: scorm2004_regex.CMILangString250,\n    max: 10,\n    delimiter: \"[,]\",\n    unique: false,\n  },\n  \"long-fill-in\": {\n    format: scorm2004_regex.CMILangString4000,\n    max: 1,\n    delimiter: \"\",\n    unique: false,\n  },\n  matching: {\n    format: scorm2004_regex.CMIShortIdentifier,\n    format2: scorm2004_regex.CMIShortIdentifier,\n    max: 36,\n    delimiter: \"[,]\",\n    delimiter2: \"[.]\",\n    unique: false,\n  },\n  performance: {\n    format: \"^$|\" + scorm2004_regex.CMIShortIdentifier,\n    format2:\n      scorm2004_regex.CMIDecimal + \"|^$|\" + scorm2004_regex.CMIShortIdentifier,\n    max: 250,\n    delimiter: \"[,]\",\n    delimiter2: \"[.]\",\n    unique: false,\n  },\n  sequencing: {\n    format: scorm2004_regex.CMIShortIdentifier,\n    max: 36,\n    delimiter: \"[,]\",\n    unique: false,\n  },\n  likert: {\n    format: scorm2004_regex.CMIShortIdentifier,\n    max: 1,\n    delimiter: \"\",\n    unique: false,\n  },\n  numeric: {\n    format: scorm2004_regex.CMIDecimal,\n    max: 1,\n    delimiter: \"\",\n    unique: false,\n  },\n  other: {\n    format: scorm2004_regex.CMIString4000,\n    max: 1,\n    delimiter: \"\",\n    unique: false,\n  },\n};\nexport const CorrectResponses: Responses = {\n  \"true-false\": {\n    max: 1,\n    delimiter: \"\",\n    unique: false,\n    duplicate: false,\n    format: \"^true$|^false$\",\n    limit: 1,\n  },\n  choice: {\n    max: 36,\n    delimiter: \"[,]\",\n    unique: true,\n    duplicate: false,\n    format: scorm2004_regex.CMILongIdentifier,\n  },\n  \"fill-in\": {\n    max: 10,\n    delimiter: \"[,]\",\n    unique: false,\n    duplicate: false,\n    format: scorm2004_regex.CMILangString250cr,\n  },\n  \"long-fill-in\": {\n    max: 1,\n    delimiter: \"\",\n    unique: false,\n    duplicate: true,\n    format: scorm2004_regex.CMILangString4000,\n  },\n  matching: {\n    max: 36,\n    delimiter: \"[,]\",\n    delimiter2: \"[.]\",\n    unique: false,\n    duplicate: false,\n    format: scorm2004_regex.CMIShortIdentifier,\n    format2: scorm2004_regex.CMIShortIdentifier,\n  },\n  performance: {\n    max: 250,\n    delimiter: \"[,]\",\n    delimiter2: \"[.]\",\n    delimiter3: \"[:]\",\n    unique: false,\n    duplicate: false,\n    format: \"^$|\" + scorm2004_regex.CMIShortIdentifier,\n    format2:\n      scorm2004_regex.CMIDecimal + \"|^$|\" + scorm2004_regex.CMIShortIdentifier,\n  },\n  sequencing: {\n    max: 36,\n    delimiter: \"[,]\",\n    unique: false,\n    duplicate: false,\n    format: scorm2004_regex.CMIShortIdentifier,\n  },\n  likert: {\n    max: 1,\n    delimiter: \"\",\n    unique: false,\n    duplicate: false,\n    format: scorm2004_regex.CMIShortIdentifier,\n    limit: 1,\n  },\n  numeric: {\n    max: 2,\n    delimiter: \"[:]\",\n    unique: false,\n    duplicate: false,\n    format: scorm2004_regex.CMIDecimal,\n    limit: 1,\n  },\n  other: {\n    max: 1,\n    delimiter: \"\",\n    unique: false,\n    duplicate: false,\n    format: scorm2004_regex.CMIString4000,\n    limit: 1,\n  },\n};\n\nexport type ResponseType = {\n  format: string;\n  max: number;\n  delimiter: string;\n  unique: boolean;\n  duplicate?: boolean;\n  format2?: string;\n  delimiter2?: string;\n  limit?: number;\n  delimiter3?: string;\n};\n\nexport type Responses = {\n  [key: string]: ResponseType;\n};\n","/**\n * Class representing SCORM 2004's `cmi.interactions` object\n */\nimport { BaseCMI } from \"../common/base_cmi\";\nimport { CMIArray } from \"../common/array\";\nimport { scorm2004_errors } from \"../../constants/error_codes\";\nimport { Scorm2004ValidationError } from \"../../exceptions/scorm2004_exceptions\";\nimport { scorm2004_constants } from \"../../constants/api_constants\";\nimport { check2004ValidFormat } from \"./validation\";\nimport { scorm2004_regex } from \"../../constants/regex\";\nimport { LearnerResponses } from \"../../constants/response_constants\";\n\nexport class CMIInteractions extends CMIArray {\n  /**\n   * Constructor for `cmi.objectives` Array\n   */\n  constructor() {\n    super({\n      children: scorm2004_constants.interactions_children,\n      errorCode: scorm2004_errors.READ_ONLY_ELEMENT as number,\n      errorClass: Scorm2004ValidationError,\n    });\n  }\n}\n\n/**\n * Class for SCORM 2004's cmi.interaction.n object\n */\n\nexport class CMIInteractionsObject extends BaseCMI {\n  private _id = \"\";\n  private _type = \"\";\n  private _timestamp = \"\";\n  private _weighting = \"\";\n  private _learner_response = \"\";\n  private _result = \"\";\n  private _latency = \"\";\n  private _description = \"\";\n\n  /**\n   * Constructor for cmi.interaction.n\n   */\n  constructor() {\n    super();\n    this.objectives = new CMIArray({\n      errorCode: scorm2004_errors.READ_ONLY_ELEMENT as number,\n      errorClass: Scorm2004ValidationError,\n      children: scorm2004_constants.objectives_children,\n    });\n    this.correct_responses = new CMIArray({\n      errorCode: scorm2004_errors.READ_ONLY_ELEMENT as number,\n      errorClass: Scorm2004ValidationError,\n      children: scorm2004_constants.correct_responses_children,\n    });\n  }\n\n  public objectives: CMIArray;\n  public correct_responses: CMIArray;\n\n  /**\n   * Called when the API has been initialized after the CMI has been created\n   */\n  override initialize() {\n    super.initialize();\n    this.objectives?.initialize();\n    this.correct_responses?.initialize();\n  }\n\n  /**\n   * Called when the API has been reset\n   */\n  override reset() {\n    this._initialized = false;\n    this._id = \"\";\n    this._type = \"\";\n    this._timestamp = \"\";\n    this._weighting = \"\";\n    this._learner_response = \"\";\n    this._result = \"\";\n    this._latency = \"\";\n    this._description = \"\";\n    this.objectives = new CMIArray({\n      errorCode: scorm2004_errors.READ_ONLY_ELEMENT as number,\n      errorClass: Scorm2004ValidationError,\n      children: scorm2004_constants.objectives_children,\n    });\n    this.correct_responses = new CMIArray({\n      errorCode: scorm2004_errors.READ_ONLY_ELEMENT as number,\n      errorClass: Scorm2004ValidationError,\n      children: scorm2004_constants.correct_responses_children,\n    });\n  }\n\n  /**\n   * Getter for _id\n   * @return {string}\n   */\n  get id(): string {\n    return this._id;\n  }\n\n  /**\n   * Setter for _id\n   * @param {string} id\n   */\n  set id(id: string) {\n    if (check2004ValidFormat(id, scorm2004_regex.CMILongIdentifier)) {\n      this._id = id;\n    }\n  }\n\n  /**\n   * Getter for _type\n   * @return {string}\n   */\n  get type(): string {\n    return this._type;\n  }\n\n  /**\n   * Setter for _type\n   * @param {string} type\n   */\n  set type(type: string) {\n    if (this.initialized && this._id === \"\") {\n      throw new Scorm2004ValidationError(\n        scorm2004_errors.DEPENDENCY_NOT_ESTABLISHED as number,\n      );\n    } else {\n      if (check2004ValidFormat(type, scorm2004_regex.CMIType)) {\n        this._type = type;\n      }\n    }\n  }\n\n  /**\n   * Getter for _timestamp\n   * @return {string}\n   */\n  get timestamp(): string {\n    return this._timestamp;\n  }\n\n  /**\n   * Setter for _timestamp\n   * @param {string} timestamp\n   */\n  set timestamp(timestamp: string) {\n    if (this.initialized && this._id === \"\") {\n      throw new Scorm2004ValidationError(\n        scorm2004_errors.DEPENDENCY_NOT_ESTABLISHED as number,\n      );\n    } else {\n      if (check2004ValidFormat(timestamp, scorm2004_regex.CMITime)) {\n        this._timestamp = timestamp;\n      }\n    }\n  }\n\n  /**\n   * Getter for _weighting\n   * @return {string}\n   */\n  get weighting(): string {\n    return this._weighting;\n  }\n\n  /**\n   * Setter for _weighting\n   * @param {string} weighting\n   */\n  set weighting(weighting: string) {\n    if (this.initialized && this._id === \"\") {\n      throw new Scorm2004ValidationError(\n        scorm2004_errors.DEPENDENCY_NOT_ESTABLISHED as number,\n      );\n    } else {\n      if (check2004ValidFormat(weighting, scorm2004_regex.CMIDecimal)) {\n        this._weighting = weighting;\n      }\n    }\n  }\n\n  /**\n   * Getter for _learner_response\n   * @return {string}\n   */\n  get learner_response(): string {\n    return this._learner_response;\n  }\n\n  /**\n   * Setter for _learner_response. Does type validation to make sure response\n   * matches SCORM 2004's spec\n   * @param {string} learner_response\n   */\n  set learner_response(learner_response: string) {\n    if (this.initialized && (this._type === \"\" || this._id === \"\")) {\n      throw new Scorm2004ValidationError(\n        scorm2004_errors.DEPENDENCY_NOT_ESTABLISHED as number,\n      );\n    } else {\n      let nodes = [];\n      const response_type = LearnerResponses[this.type];\n\n      if (response_type) {\n        if (response_type?.delimiter) {\n          nodes = learner_response.split(response_type.delimiter);\n        } else {\n          nodes[0] = learner_response;\n        }\n\n        if (nodes.length > 0 && nodes.length <= response_type.max) {\n          const formatRegex = new RegExp(response_type.format);\n\n          for (let i = 0; i < nodes.length; i++) {\n            if (response_type?.delimiter2) {\n              const values = nodes[i]?.split(response_type.delimiter2);\n\n              if (values?.length === 2) {\n                if (!values[0]?.match(formatRegex)) {\n                  throw new Scorm2004ValidationError(\n                    scorm2004_errors.TYPE_MISMATCH as number,\n                  );\n                } else {\n                  if (\n                    !response_type.format2 ||\n                    !values[1]?.match(new RegExp(response_type.format2))\n                  ) {\n                    throw new Scorm2004ValidationError(\n                      scorm2004_errors.TYPE_MISMATCH as number,\n                    );\n                  }\n                }\n              } else {\n                throw new Scorm2004ValidationError(\n                  scorm2004_errors.TYPE_MISMATCH as number,\n                );\n              }\n            } else {\n              if (!nodes[i]?.match(formatRegex)) {\n                throw new Scorm2004ValidationError(\n                  scorm2004_errors.TYPE_MISMATCH as number,\n                );\n              } else {\n                if (nodes[i] !== \"\" && response_type.unique) {\n                  for (let j = 0; j < i; j++) {\n                    if (nodes[i] === nodes[j]) {\n                      throw new Scorm2004ValidationError(\n                        scorm2004_errors.TYPE_MISMATCH as number,\n                      );\n                    }\n                  }\n                }\n              }\n            }\n          }\n        } else {\n          throw new Scorm2004ValidationError(\n            scorm2004_errors.GENERAL_SET_FAILURE as number,\n          );\n        }\n\n        this._learner_response = learner_response;\n      } else {\n        throw new Scorm2004ValidationError(\n          scorm2004_errors.TYPE_MISMATCH as number,\n        );\n      }\n    }\n  }\n\n  /**\n   * Getter for _result\n   * @return {string}\n   */\n  get result(): string {\n    return this._result;\n  }\n\n  /**\n   * Setter for _result\n   * @param {string} result\n   */\n  set result(result: string) {\n    if (check2004ValidFormat(result, scorm2004_regex.CMIResult)) {\n      this._result = result;\n    }\n  }\n\n  /**\n   * Getter for _latency\n   * @return {string}\n   */\n  get latency(): string {\n    return this._latency;\n  }\n\n  /**\n   * Setter for _latency\n   * @param {string} latency\n   */\n  set latency(latency: string) {\n    if (this.initialized && this._id === \"\") {\n      throw new Scorm2004ValidationError(\n        scorm2004_errors.DEPENDENCY_NOT_ESTABLISHED as number,\n      );\n    } else {\n      if (check2004ValidFormat(latency, scorm2004_regex.CMITimespan)) {\n        this._latency = latency;\n      }\n    }\n  }\n\n  /**\n   * Getter for _description\n   * @return {string}\n   */\n  get description(): string {\n    return this._description;\n  }\n\n  /**\n   * Setter for _description\n   * @param {string} description\n   */\n  set description(description: string) {\n    if (this.initialized && this._id === \"\") {\n      throw new Scorm2004ValidationError(\n        scorm2004_errors.DEPENDENCY_NOT_ESTABLISHED as number,\n      );\n    } else {\n      if (\n        check2004ValidFormat(\n          description,\n          scorm2004_regex.CMILangString250,\n          true,\n        )\n      ) {\n        this._description = description;\n      }\n    }\n  }\n\n  /**\n   * toJSON for cmi.interactions.n\n   *\n   * @return {\n   *    {\n   *      id: string,\n   *      type: string,\n   *      objectives: CMIArray,\n   *      timestamp: string,\n   *      correct_responses: CMIArray,\n   *      weighting: string,\n   *      learner_response: string,\n   *      result: string,\n   *      latency: string,\n   *      description: string\n   *    }\n   *  }\n   */\n  toJSON(): {\n    id: string;\n    type: string;\n    objectives: CMIArray;\n    timestamp: string;\n    correct_responses: CMIArray;\n    weighting: string;\n    learner_response: string;\n    result: string;\n    latency: string;\n    description: string;\n  } {\n    this.jsonString = true;\n    const result = {\n      id: this.id,\n      type: this.type,\n      objectives: this.objectives,\n      timestamp: this.timestamp,\n      weighting: this.weighting,\n      learner_response: this.learner_response,\n      result: this.result,\n      latency: this.latency,\n      description: this.description,\n      correct_responses: this.correct_responses,\n    };\n    delete this.jsonString;\n    return result;\n  }\n}\n\n/**\n * Class representing SCORM 2004's cmi.interactions.n.objectives.n object\n */\nexport class CMIInteractionsObjectivesObject extends BaseCMI {\n  private _id = \"\";\n\n  /**\n   * Constructor for cmi.interactions.n.objectives.n\n   */\n  constructor() {\n    super();\n  }\n\n  /**\n   * Called when the API has been reset\n   */\n  override reset() {\n    this._initialized = false;\n    this._id = \"\";\n  }\n\n  /**\n   * Getter for _id\n   * @return {string}\n   */\n  get id(): string {\n    return this._id;\n  }\n\n  /**\n   * Setter for _id\n   * @param {string} id\n   */\n  set id(id: string) {\n    if (check2004ValidFormat(id, scorm2004_regex.CMILongIdentifier)) {\n      this._id = id;\n    }\n  }\n\n  /**\n   * toJSON for cmi.interactions.n.objectives.n\n   * @return {\n   *    {\n   *      id: string\n   *    }\n   *  }\n   */\n  toJSON(): {\n    id: string;\n  } {\n    this.jsonString = true;\n    const result = {\n      id: this.id,\n    };\n    delete this.jsonString;\n    return result;\n  }\n}\n\n/**\n * Class representing SCORM 2004's cmi.interactions.n.correct_responses.n object\n */\nexport class CMIInteractionsCorrectResponsesObject extends BaseCMI {\n  private _pattern = \"\";\n\n  /**\n   * Constructor for cmi.interactions.n.correct_responses.n\n   */\n  constructor() {\n    super();\n  }\n\n  /**\n   * Called when the API has been reset\n   */\n  override reset() {\n    this._initialized = false;\n    this._pattern = \"\";\n  }\n\n  /**\n   * Getter for _pattern\n   * @return {string}\n   */\n  get pattern(): string {\n    return this._pattern;\n  }\n\n  /**\n   * Setter for _pattern\n   * @param {string} pattern\n   */\n  set pattern(pattern: string) {\n    if (check2004ValidFormat(pattern, scorm2004_regex.CMIFeedback)) {\n      this._pattern = pattern;\n    }\n  }\n\n  /**\n   * toJSON cmi.interactions.n.correct_responses.n object\n   * @return {\n   *    {\n   *      pattern: string\n   *    }\n   *  }\n   */\n  toJSON(): {\n    pattern: string;\n  } {\n    this.jsonString = true;\n    const result = {\n      pattern: this.pattern,\n    };\n    delete this.jsonString;\n    return result;\n  }\n}\n","/**\n * Class for SCORM 2004's cmi *.score object\n */\nimport { CMIScore } from \"../common/score\";\nimport { scorm2004_constants } from \"../../constants/api_constants\";\nimport { scorm2004_errors } from \"../../constants/error_codes\";\nimport { scorm2004_regex } from \"../../constants/regex\";\nimport { Scorm2004ValidationError } from \"../../exceptions/scorm2004_exceptions\";\nimport { check2004ValidFormat, check2004ValidRange } from \"./validation\";\n\nexport class Scorm2004CMIScore extends CMIScore {\n  private _scaled = \"\";\n\n  /**\n   * Constructor for cmi *.score\n   */\n  constructor() {\n    super({\n      score_children: scorm2004_constants.score_children,\n      max: \"\",\n      invalidErrorCode: scorm2004_errors.READ_ONLY_ELEMENT as number,\n      invalidTypeCode: scorm2004_errors.TYPE_MISMATCH as number,\n      invalidRangeCode: scorm2004_errors.VALUE_OUT_OF_RANGE as number,\n      decimalRegex: scorm2004_regex.CMIDecimal,\n      errorClass: Scorm2004ValidationError,\n    });\n  }\n\n  /**\n   * Called when the API has been reset\n   */\n  override reset(): void {\n    this._initialized = false;\n    this._scaled = \"\";\n    this._raw = \"\";\n    this._min = \"\";\n    this._max = \"\";\n  }\n\n  /**\n   * Getter for _scaled\n   * @return {string}\n   */\n  get scaled(): string {\n    return this._scaled;\n  }\n\n  /**\n   * Setter for _scaled\n   * @param {string} scaled\n   */\n  set scaled(scaled: string) {\n    if (\n      check2004ValidFormat(scaled, scorm2004_regex.CMIDecimal) &&\n      check2004ValidRange(scaled, scorm2004_regex.scaled_range)\n    ) {\n      this._scaled = scaled;\n    }\n  }\n\n  /**\n   * toJSON for cmi *.score\n   *\n   * @return {\n   *    {\n   *      scaled: string,\n   *      raw: string,\n   *      min: string,\n   *      max: string\n   *    }\n   *  }\n   */\n  override toJSON(): {\n    scaled: string;\n    raw: string;\n    min: string;\n    max: string;\n  } {\n    this.jsonString = true;\n    const result = {\n      scaled: this.scaled,\n      raw: this.raw,\n      min: this.min,\n      max: this.max,\n    };\n    delete this.jsonString;\n    return result;\n  }\n}\n","import { CMIArray } from \"../common/array\";\nimport { scorm2004_constants } from \"../../constants/api_constants\";\nimport { scorm2004_errors } from \"../../constants/error_codes\";\nimport { Scorm2004ValidationError } from \"../../exceptions/scorm2004_exceptions\";\nimport { BaseCMI } from \"../common/base_cmi\";\nimport { check2004ValidFormat } from \"./validation\";\nimport { scorm2004_regex } from \"../../constants/regex\";\n\n/**\n * Class representing SCORM 2004's cmi.comments_from_lms object\n * @extends CMIArray\n */\nexport class CMICommentsFromLMS extends CMIArray {\n  /**\n   * Constructor for cmi.comments_from_lms Array\n   */\n  constructor() {\n    super({\n      children: scorm2004_constants.comments_children,\n      errorCode: scorm2004_errors.READ_ONLY_ELEMENT as number,\n      errorClass: Scorm2004ValidationError,\n    });\n  }\n}\n\n/**\n * Class representing SCORM 2004's cmi.comments_from_learner object\n */\n\nexport class CMICommentsFromLearner extends CMIArray {\n  /**\n   * Constructor for cmi.comments_from_learner Array\n   */\n  constructor() {\n    super({\n      children: scorm2004_constants.comments_children,\n      errorCode: scorm2004_errors.READ_ONLY_ELEMENT as number,\n      errorClass: Scorm2004ValidationError,\n    });\n  }\n}\n\n/**\n * Class representing SCORM 2004's cmi.comments_from_learner.n and cmi.comments_from_lms.n object\n */\n\nexport class CMICommentsObject extends BaseCMI {\n  private _comment = \"\";\n  private _location = \"\";\n  private _timestamp = \"\";\n  private readonly _readOnlyAfterInit: boolean;\n\n  /**\n   * Constructor for cmi.comments_from_learner.n and cmi.comments_from_lms.n\n   * @param {boolean} readOnlyAfterInit\n   */\n  constructor(readOnlyAfterInit: boolean = false) {\n    super();\n    this._comment = \"\";\n    this._location = \"\";\n    this._timestamp = \"\";\n    this._readOnlyAfterInit = readOnlyAfterInit;\n  }\n\n  /**\n   * Called when the API has been reset\n   */\n  reset(): void {\n    this._initialized = false;\n  }\n\n  /**\n   * Getter for _comment\n   * @return {string}\n   */\n  get comment(): string {\n    return this._comment;\n  }\n\n  /**\n   * Setter for _comment\n   * @param {string} comment\n   */\n  set comment(comment: string) {\n    if (this.initialized && this._readOnlyAfterInit) {\n      throw new Scorm2004ValidationError(\n        scorm2004_errors.READ_ONLY_ELEMENT as number,\n      );\n    } else {\n      if (\n        check2004ValidFormat(comment, scorm2004_regex.CMILangString4000, true)\n      ) {\n        this._comment = comment;\n      }\n    }\n  }\n\n  /**\n   * Getter for _location\n   * @return {string}\n   */\n  get location(): string {\n    return this._location;\n  }\n\n  /**\n   * Setter for _location\n   * @param {string} location\n   */\n  set location(location: string) {\n    if (this.initialized && this._readOnlyAfterInit) {\n      throw new Scorm2004ValidationError(\n        scorm2004_errors.READ_ONLY_ELEMENT as number,\n      );\n    } else {\n      if (check2004ValidFormat(location, scorm2004_regex.CMIString250)) {\n        this._location = location;\n      }\n    }\n  }\n\n  /**\n   * Getter for _timestamp\n   * @return {string}\n   */\n  get timestamp(): string {\n    return this._timestamp;\n  }\n\n  /**\n   * Setter for _timestamp\n   * @param {string} timestamp\n   */\n  set timestamp(timestamp: string) {\n    if (this.initialized && this._readOnlyAfterInit) {\n      throw new Scorm2004ValidationError(\n        scorm2004_errors.READ_ONLY_ELEMENT as number,\n      );\n    } else {\n      if (check2004ValidFormat(timestamp, scorm2004_regex.CMITime)) {\n        this._timestamp = timestamp;\n      }\n    }\n  }\n\n  /**\n   * toJSON for cmi.comments_from_learner.n object\n   * @return {\n   *    {\n   *      comment: string,\n   *      location: string,\n   *      timestamp: string\n   *    }\n   *  }\n   */\n  toJSON(): {\n    comment: string;\n    location: string;\n    timestamp: string;\n  } {\n    this.jsonString = true;\n    const result = {\n      comment: this.comment,\n      location: this.location,\n      timestamp: this.timestamp,\n    };\n    delete this.jsonString;\n    return result;\n  }\n}\n","import { CMIArray } from \"../common/array\";\nimport { scorm2004_errors } from \"../../constants/error_codes\";\nimport { Scorm2004ValidationError } from \"../../exceptions/scorm2004_exceptions\";\nimport { BaseCMI } from \"../common/base_cmi\";\nimport { Scorm2004CMIScore } from \"./score\";\nimport { check2004ValidFormat, check2004ValidRange } from \"./validation\";\nimport { scorm2004_regex } from \"../../constants/regex\";\nimport { scorm2004_constants } from \"../../constants/api_constants\";\n\n/**\n * Class representing SCORM 2004's `cmi.objectives` object\n * @extends CMIArray\n */\nexport class CMIObjectives extends CMIArray {\n  /**\n   * Constructor for `cmi.objectives` Array\n   */\n  constructor() {\n    super({\n      children: scorm2004_constants.objectives_children,\n      errorCode: scorm2004_errors.READ_ONLY_ELEMENT as number,\n      errorClass: Scorm2004ValidationError,\n    });\n  }\n\n  /**\n   * Find an objective by its ID\n   */\n  public findObjectiveById(id: string): CMIObjectivesObject | undefined {\n    return this.childArray.find((objective) => objective.id === id);\n  }\n\n  /**\n   * Find objective by its index\n   */\n  public findObjectiveByIndex(index: number): CMIObjectivesObject {\n    return this.childArray[index];\n  }\n\n  /**\n   * Set an objective at the given index\n   */\n  public setObjectiveByIndex(index: number, objective: CMIObjectivesObject) {\n    this.childArray[index] = objective;\n  }\n}\n\n/**\n * Class for SCORM 2004's cmi.objectives.n object\n */\nexport class CMIObjectivesObject extends BaseCMI {\n  private _id = \"\";\n  private _success_status = \"unknown\";\n  private _completion_status = \"unknown\";\n  private _progress_measure = \"\";\n  private _description = \"\";\n\n  /**\n   * Constructor for cmi.objectives.n\n   */\n  constructor() {\n    super();\n    this.score = new Scorm2004CMIScore();\n  }\n\n  override reset() {\n    this._initialized = false;\n  }\n\n  public score: Scorm2004CMIScore;\n\n  /**\n   * Called when the API has been initialized after the CMI has been created\n   */\n  override initialize() {\n    super.initialize();\n    this.score?.initialize();\n  }\n\n  /**\n   * Getter for _id\n   * @return {string}\n   */\n  get id(): string {\n    return this._id;\n  }\n\n  /**\n   * Setter for _id\n   * @param {string} id\n   */\n  set id(id: string) {\n    if (check2004ValidFormat(id, scorm2004_regex.CMILongIdentifier)) {\n      this._id = id;\n    }\n  }\n\n  /**\n   * Getter for _success_status\n   * @return {string}\n   */\n  get success_status(): string {\n    return this._success_status;\n  }\n\n  /**\n   * Setter for _success_status\n   * @param {string} success_status\n   */\n  set success_status(success_status: string) {\n    if (this.initialized && this._id === \"\") {\n      throw new Scorm2004ValidationError(\n        scorm2004_errors.DEPENDENCY_NOT_ESTABLISHED as number,\n      );\n    } else {\n      if (check2004ValidFormat(success_status, scorm2004_regex.CMISStatus)) {\n        this._success_status = success_status;\n      }\n    }\n  }\n\n  /**\n   * Getter for _completion_status\n   * @return {string}\n   */\n  get completion_status(): string {\n    return this._completion_status;\n  }\n\n  /**\n   * Setter for _completion_status\n   * @param {string} completion_status\n   */\n  set completion_status(completion_status: string) {\n    if (this.initialized && this._id === \"\") {\n      throw new Scorm2004ValidationError(\n        scorm2004_errors.DEPENDENCY_NOT_ESTABLISHED as number,\n      );\n    } else {\n      if (check2004ValidFormat(completion_status, scorm2004_regex.CMICStatus)) {\n        this._completion_status = completion_status;\n      }\n    }\n  }\n\n  /**\n   * Getter for _progress_measure\n   * @return {string}\n   */\n  get progress_measure(): string {\n    return this._progress_measure;\n  }\n\n  /**\n   * Setter for _progress_measure\n   * @param {string} progress_measure\n   */\n  set progress_measure(progress_measure: string) {\n    if (this.initialized && this._id === \"\") {\n      throw new Scorm2004ValidationError(\n        scorm2004_errors.DEPENDENCY_NOT_ESTABLISHED as number,\n      );\n    } else {\n      if (\n        check2004ValidFormat(progress_measure, scorm2004_regex.CMIDecimal) &&\n        check2004ValidRange(progress_measure, scorm2004_regex.progress_range)\n      ) {\n        this._progress_measure = progress_measure;\n      }\n    }\n  }\n\n  /**\n   * Getter for _description\n   * @return {string}\n   */\n  get description(): string {\n    return this._description;\n  }\n\n  /**\n   * Setter for _description\n   * @param {string} description\n   */\n  set description(description: string) {\n    if (this.initialized && this._id === \"\") {\n      throw new Scorm2004ValidationError(\n        scorm2004_errors.DEPENDENCY_NOT_ESTABLISHED as number,\n      );\n    } else {\n      if (\n        check2004ValidFormat(\n          description,\n          scorm2004_regex.CMILangString250,\n          true,\n        )\n      ) {\n        this._description = description;\n      }\n    }\n  }\n\n  /**\n   * toJSON for cmi.objectives.n\n   *\n   * @return {\n   *    {\n   *      id: string,\n   *      success_status: string,\n   *      completion_status: string,\n   *      progress_measure: string,\n   *      description: string,\n   *      score: Scorm2004CMIScore\n   *    }\n   *  }\n   */\n  toJSON(): {\n    id: string;\n    success_status: string;\n    completion_status: string;\n    progress_measure: string;\n    description: string;\n    score: Scorm2004CMIScore;\n  } {\n    this.jsonString = true;\n    const result = {\n      id: this.id,\n      success_status: this.success_status,\n      completion_status: this.completion_status,\n      progress_measure: this.progress_measure,\n      description: this.description,\n      score: this.score,\n    };\n    delete this.jsonString;\n    return result;\n  }\n}\n","import { scorm2004_constants } from \"../../constants/api_constants\";\nimport { scorm2004_regex } from \"../../constants/regex\";\nimport { scorm2004_errors } from \"../../constants/error_codes\";\nimport { Scorm2004ValidationError } from \"../../exceptions/scorm2004_exceptions\";\nimport * as Util from \"../../utilities\";\nimport { BaseRootCMI } from \"../common/base_cmi\";\nimport { check2004ValidFormat, check2004ValidRange } from \"./validation\";\nimport { CMILearnerPreference } from \"./learner_preference\";\nimport { CMIInteractions } from \"./interactions\";\nimport { Scorm2004CMIScore } from \"./score\";\nimport { CMICommentsFromLearner, CMICommentsFromLMS } from \"./comments\";\nimport { CMIObjectives } from \"./objectives\";\n\n/**\n * Class representing cmi object for SCORM 2004\n */\nexport class CMI extends BaseRootCMI {\n  /**\n   * Constructor for the SCORM 2004 cmi object\n   * @param {boolean} initialized\n   */\n  constructor(initialized: boolean = false) {\n    super();\n    this.learner_preference = new CMILearnerPreference();\n    this.score = new Scorm2004CMIScore();\n    this.comments_from_learner = new CMICommentsFromLearner();\n    this.comments_from_lms = new CMICommentsFromLMS();\n    this.interactions = new CMIInteractions();\n    this.objectives = new CMIObjectives();\n    if (initialized) this.initialize();\n  }\n\n  public learner_preference: CMILearnerPreference;\n  public score: Scorm2004CMIScore;\n  public comments_from_learner: CMICommentsFromLearner;\n  public comments_from_lms: CMICommentsFromLMS;\n  public interactions: CMIInteractions;\n  public objectives: CMIObjectives;\n\n  private __version = \"1.0\";\n  private __children = scorm2004_constants.cmi_children;\n  private _completion_status = \"unknown\";\n  private _completion_threshold = \"\";\n  private _credit = \"credit\";\n  private _entry = \"\";\n  private _exit = \"\";\n  private _launch_data = \"\";\n  private _learner_id = \"\";\n  private _learner_name = \"\";\n  private _location = \"\";\n  private _max_time_allowed = \"\";\n  private _mode = \"normal\";\n  private _progress_measure = \"\";\n  private _scaled_passing_score = \"\";\n  private _session_time = \"PT0H0M0S\";\n  private _success_status = \"unknown\";\n  private _suspend_data = \"\";\n  private _time_limit_action = \"continue,no message\";\n  private _total_time = \"\";\n\n  /**\n   * Called when the API has been initialized after the CMI has been created\n   */\n  override initialize() {\n    super.initialize();\n    this.learner_preference?.initialize();\n    this.score?.initialize();\n    this.comments_from_learner?.initialize();\n    this.comments_from_lms?.initialize();\n    this.interactions?.initialize();\n    this.objectives?.initialize();\n  }\n\n  /**\n   * Called when API is moving to another SCO\n   */\n  reset() {\n    this._initialized = false;\n\n    this._completion_status = \"incomplete\";\n    this._exit = \"\";\n    this._session_time = \"PT0H0M0S\";\n    this._progress_measure = \"\";\n    this._location = \"\";\n\n    this.objectives?.reset(false);\n    this.interactions?.reset(true);\n\n    this.score?.reset();\n    this.comments_from_learner?.reset();\n    this.comments_from_lms?.reset();\n    this.learner_preference?.reset();\n  }\n\n  /**\n   * Getter for __version\n   * @return {string}\n   * @private\n   */\n  get _version(): string {\n    return this.__version;\n  }\n\n  /**\n   * Setter for __version. Just throws an error.\n   * @param {string} _version\n   * @private\n   */\n  set _version(_version: string) {\n    throw new Scorm2004ValidationError(\n      scorm2004_errors.READ_ONLY_ELEMENT as number,\n    );\n  }\n\n  /**\n   * Getter for __children\n   * @return {string}\n   * @private\n   */\n  get _children(): string {\n    return this.__children;\n  }\n\n  /**\n   * Setter for __children. Just throws an error.\n   * @param {number} _children\n   * @private\n   */\n  set _children(_children: number) {\n    throw new Scorm2004ValidationError(\n      scorm2004_errors.READ_ONLY_ELEMENT as number,\n    );\n  }\n\n  /**\n   * Getter for _completion_status\n   * @return {string}\n   */\n  get completion_status(): string {\n    return this._completion_status;\n  }\n\n  /**\n   * Setter for _completion_status\n   * @param {string} completion_status\n   */\n  set completion_status(completion_status: string) {\n    if (check2004ValidFormat(completion_status, scorm2004_regex.CMICStatus)) {\n      this._completion_status = completion_status;\n    }\n  }\n\n  /**\n   * Getter for _completion_threshold\n   * @return {string}\n   */\n  get completion_threshold(): string {\n    return this._completion_threshold;\n  }\n\n  /**\n   * Setter for _completion_threshold. Can only be called before  initialization.\n   * @param {string} completion_threshold\n   */\n  set completion_threshold(completion_threshold: string) {\n    if (this.initialized) {\n      throw new Scorm2004ValidationError(\n        scorm2004_errors.READ_ONLY_ELEMENT as number,\n      );\n    } else {\n      this._completion_threshold = completion_threshold;\n    }\n  }\n\n  /**\n   * Setter for _credit\n   * @return {string}\n   */\n  get credit(): string {\n    return this._credit;\n  }\n\n  /**\n   * Setter for _credit. Can only be called before  initialization.\n   * @param {string} credit\n   */\n  set credit(credit: string) {\n    if (this.initialized) {\n      throw new Scorm2004ValidationError(\n        scorm2004_errors.READ_ONLY_ELEMENT as number,\n      );\n    } else {\n      this._credit = credit;\n    }\n  }\n\n  /**\n   * Getter for _entry\n   * @return {string}\n   */\n  get entry(): string {\n    return this._entry;\n  }\n\n  /**\n   * Setter for _entry. Can only be called before  initialization.\n   * @param {string} entry\n   */\n  set entry(entry: string) {\n    if (this.initialized) {\n      throw new Scorm2004ValidationError(\n        scorm2004_errors.READ_ONLY_ELEMENT as number,\n      );\n    } else {\n      this._entry = entry;\n    }\n  }\n\n  /**\n   * Getter for _exit. Should only be called during JSON export.\n   * @return {string}\n   */\n  get exit(): string {\n    if (!this.jsonString) {\n      throw new Scorm2004ValidationError(\n        scorm2004_errors.WRITE_ONLY_ELEMENT as number,\n      );\n    }\n    return this._exit;\n  }\n\n  /**\n   * Getter for _exit\n   * @param {string} exit\n   */\n  set exit(exit: string) {\n    if (check2004ValidFormat(exit, scorm2004_regex.CMIExit, true)) {\n      this._exit = exit;\n    }\n  }\n\n  /**\n   * Getter for _launch_data\n   * @return {string}\n   */\n  get launch_data(): string {\n    return this._launch_data;\n  }\n\n  /**\n   * Setter for _launch_data. Can only be called before  initialization.\n   * @param {string} launch_data\n   */\n  set launch_data(launch_data: string) {\n    if (this.initialized) {\n      throw new Scorm2004ValidationError(\n        scorm2004_errors.READ_ONLY_ELEMENT as number,\n      );\n    } else {\n      this._launch_data = launch_data;\n    }\n  }\n\n  /**\n   * Getter for _learner_id\n   * @return {string}\n   */\n  get learner_id(): string {\n    return this._learner_id;\n  }\n\n  /**\n   * Setter for _learner_id. Can only be called before  initialization.\n   * @param {string} learner_id\n   */\n  set learner_id(learner_id: string) {\n    if (this.initialized) {\n      throw new Scorm2004ValidationError(\n        scorm2004_errors.READ_ONLY_ELEMENT as number,\n      );\n    } else {\n      this._learner_id = learner_id;\n    }\n  }\n\n  /**\n   * Getter for _learner_name\n   * @return {string}\n   */\n  get learner_name(): string {\n    return this._learner_name;\n  }\n\n  /**\n   * Setter for _learner_name. Can only be called before  initialization.\n   * @param {string} learner_name\n   */\n  set learner_name(learner_name: string) {\n    if (this.initialized) {\n      throw new Scorm2004ValidationError(\n        scorm2004_errors.READ_ONLY_ELEMENT as number,\n      );\n    } else {\n      this._learner_name = learner_name;\n    }\n  }\n\n  /**\n   * Getter for _location\n   * @return {string}\n   */\n  get location(): string {\n    return this._location;\n  }\n\n  /**\n   * Setter for _location\n   * @param {string} location\n   */\n  set location(location: string) {\n    if (check2004ValidFormat(location, scorm2004_regex.CMIString1000)) {\n      this._location = location;\n    }\n  }\n\n  /**\n   * Getter for _max_time_allowed\n   * @return {string}\n   */\n  get max_time_allowed(): string {\n    return this._max_time_allowed;\n  }\n\n  /**\n   * Setter for _max_time_allowed. Can only be called before  initialization.\n   * @param {string} max_time_allowed\n   */\n  set max_time_allowed(max_time_allowed: string) {\n    if (this.initialized) {\n      throw new Scorm2004ValidationError(\n        scorm2004_errors.READ_ONLY_ELEMENT as number,\n      );\n    } else {\n      this._max_time_allowed = max_time_allowed;\n    }\n  }\n\n  /**\n   * Getter for _mode\n   * @return {string}\n   */\n  get mode(): string {\n    return this._mode;\n  }\n\n  /**\n   * Setter for _mode. Can only be called before  initialization.\n   * @param {string} mode\n   */\n  set mode(mode: string) {\n    if (this.initialized) {\n      throw new Scorm2004ValidationError(\n        scorm2004_errors.READ_ONLY_ELEMENT as number,\n      );\n    } else {\n      this._mode = mode;\n    }\n  }\n\n  /**\n   * Getter for _progress_measure\n   * @return {string}\n   */\n  get progress_measure(): string {\n    return this._progress_measure;\n  }\n\n  /**\n   * Setter for _progress_measure\n   * @param {string} progress_measure\n   */\n  set progress_measure(progress_measure: string) {\n    if (\n      check2004ValidFormat(progress_measure, scorm2004_regex.CMIDecimal) &&\n      check2004ValidRange(progress_measure, scorm2004_regex.progress_range)\n    ) {\n      this._progress_measure = progress_measure;\n    }\n  }\n\n  /**\n   * Getter for _scaled_passing_score\n   * @return {string}\n   */\n  get scaled_passing_score(): string {\n    return this._scaled_passing_score;\n  }\n\n  /**\n   * Setter for _scaled_passing_score. Can only be called before  initialization.\n   * @param {string} scaled_passing_score\n   */\n  set scaled_passing_score(scaled_passing_score: string) {\n    if (this.initialized) {\n      throw new Scorm2004ValidationError(\n        scorm2004_errors.READ_ONLY_ELEMENT as number,\n      );\n    } else {\n      this._scaled_passing_score = scaled_passing_score;\n    }\n  }\n\n  /**\n   * Getter for _session_time. Should only be called during JSON export.\n   * @return {string}\n   */\n  get session_time(): string {\n    if (!this.jsonString) {\n      throw new Scorm2004ValidationError(\n        scorm2004_errors.WRITE_ONLY_ELEMENT as number,\n      );\n    }\n    return this._session_time;\n  }\n\n  /**\n   * Setter for _session_time\n   * @param {string} session_time\n   */\n  set session_time(session_time: string) {\n    if (check2004ValidFormat(session_time, scorm2004_regex.CMITimespan)) {\n      this._session_time = session_time;\n    }\n  }\n\n  /**\n   * Getter for _success_status\n   * @return {string}\n   */\n  get success_status(): string {\n    return this._success_status;\n  }\n\n  /**\n   * Setter for _success_status\n   * @param {string} success_status\n   */\n  set success_status(success_status: string) {\n    if (check2004ValidFormat(success_status, scorm2004_regex.CMISStatus)) {\n      this._success_status = success_status;\n    }\n  }\n\n  /**\n   * Getter for _suspend_data\n   * @return {string}\n   */\n  get suspend_data(): string {\n    return this._suspend_data;\n  }\n\n  /**\n   * Setter for _suspend_data\n   * @param {string} suspend_data\n   */\n  set suspend_data(suspend_data: string) {\n    if (\n      check2004ValidFormat(suspend_data, scorm2004_regex.CMIString64000, true)\n    ) {\n      this._suspend_data = suspend_data;\n    }\n  }\n\n  /**\n   * Getter for _time_limit_action\n   * @return {string}\n   */\n  get time_limit_action(): string {\n    return this._time_limit_action;\n  }\n\n  /**\n   * Setter for _time_limit_action. Can only be called before  initialization.\n   * @param {string} time_limit_action\n   */\n  set time_limit_action(time_limit_action: string) {\n    if (this.initialized) {\n      throw new Scorm2004ValidationError(\n        scorm2004_errors.READ_ONLY_ELEMENT as number,\n      );\n    } else {\n      this._time_limit_action = time_limit_action;\n    }\n  }\n\n  /**\n   * Getter for _total_time\n   * @return {string}\n   */\n  get total_time(): string {\n    return this._total_time;\n  }\n\n  /**\n   * Setter for _total_time. Can only be called before  initialization.\n   * @param {string} total_time\n   */\n  set total_time(total_time: string) {\n    if (this.initialized) {\n      throw new Scorm2004ValidationError(\n        scorm2004_errors.READ_ONLY_ELEMENT as number,\n      );\n    } else {\n      this._total_time = total_time;\n    }\n  }\n\n  /**\n   * Adds the current session time to the existing total time.\n   *\n   * @return {string} ISO8601 Duration\n   */\n  getCurrentTotalTime(): string {\n    let sessionTime = this._session_time;\n    const startTime = this.start_time;\n\n    if (typeof startTime !== \"undefined\" && startTime !== null) {\n      const seconds = new Date().getTime() - startTime;\n      sessionTime = Util.getSecondsAsISODuration(seconds / 1000);\n    }\n\n    return Util.addTwoDurations(\n      this._total_time,\n      sessionTime,\n      scorm2004_regex.CMITimespan,\n    );\n  }\n\n  /**\n   * toJSON for cmi\n   *\n   * @return {\n   *    {\n   *      comments_from_learner: CMICommentsFromLearner,\n   *      comments_from_lms: CMICommentsFromLMS,\n   *      completion_status: string,\n   *      completion_threshold: string,\n   *      credit: string,\n   *      entry: string,\n   *      exit: string,\n   *      interactions: CMIInteractions,\n   *      launch_data: string,\n   *      learner_id: string,\n   *      learner_name: string,\n   *      learner_preference: CMILearnerPreference,\n   *      location: string,\n   *      max_time_allowed: string,\n   *      mode: string,\n   *      objectives: CMIObjectives,\n   *      progress_measure: string,\n   *      scaled_passing_score: string,\n   *      score: Scorm2004CMIScore,\n   *      session_time: string,\n   *      success_status: string,\n   *      suspend_data: string,\n   *      time_limit_action: string\n   *    }\n   *  }\n   */\n  toJSON(): {\n    comments_from_learner: CMICommentsFromLearner;\n    comments_from_lms: CMICommentsFromLMS;\n    completion_status: string;\n    completion_threshold: string;\n    credit: string;\n    entry: string;\n    exit: string;\n    interactions: CMIInteractions;\n    launch_data: string;\n    learner_id: string;\n    learner_name: string;\n    learner_preference: CMILearnerPreference;\n    location: string;\n    max_time_allowed: string;\n    mode: string;\n    objectives: CMIObjectives;\n    progress_measure: string;\n    scaled_passing_score: string;\n    score: Scorm2004CMIScore;\n    session_time: string;\n    success_status: string;\n    suspend_data: string;\n    time_limit_action: string;\n  } {\n    this.jsonString = true;\n    const result = {\n      comments_from_learner: this.comments_from_learner,\n      comments_from_lms: this.comments_from_lms,\n      completion_status: this.completion_status,\n      completion_threshold: this.completion_threshold,\n      credit: this.credit,\n      entry: this.entry,\n      exit: this.exit,\n      interactions: this.interactions,\n      launch_data: this.launch_data,\n      learner_id: this.learner_id,\n      learner_name: this.learner_name,\n      learner_preference: this.learner_preference,\n      location: this.location,\n      max_time_allowed: this.max_time_allowed,\n      mode: this.mode,\n      objectives: this.objectives,\n      progress_measure: this.progress_measure,\n      scaled_passing_score: this.scaled_passing_score,\n      score: this.score,\n      session_time: this.session_time,\n      success_status: this.success_status,\n      suspend_data: this.suspend_data,\n      time_limit_action: this.time_limit_action,\n    };\n    delete this.jsonString;\n    return result;\n  }\n}\n","const ValidLanguages: string[] = [\n  \"aa\",\n  \"ab\",\n  \"ae\",\n  \"af\",\n  \"ak\",\n  \"am\",\n  \"an\",\n  \"ar\",\n  \"as\",\n  \"av\",\n  \"ay\",\n  \"az\",\n  \"ba\",\n  \"be\",\n  \"bg\",\n  \"bh\",\n  \"bi\",\n  \"bm\",\n  \"bn\",\n  \"bo\",\n  \"br\",\n  \"bs\",\n  \"ca\",\n  \"ce\",\n  \"ch\",\n  \"co\",\n  \"cr\",\n  \"cs\",\n  \"cu\",\n  \"cv\",\n  \"cy\",\n  \"da\",\n  \"de\",\n  \"dv\",\n  \"dz\",\n  \"ee\",\n  \"el\",\n  \"en\",\n  \"eo\",\n  \"es\",\n  \"et\",\n  \"eu\",\n  \"fa\",\n  \"ff\",\n  \"fi\",\n  \"fj\",\n  \"fo\",\n  \"fr\",\n  \"fy\",\n  \"ga\",\n  \"gd\",\n  \"gl\",\n  \"gn\",\n  \"gu\",\n  \"gv\",\n  \"ha\",\n  \"he\",\n  \"hi\",\n  \"ho\",\n  \"hr\",\n  \"ht\",\n  \"hu\",\n  \"hy\",\n  \"hz\",\n  \"ia\",\n  \"id\",\n  \"ie\",\n  \"ig\",\n  \"ii\",\n  \"ik\",\n  \"io\",\n  \"is\",\n  \"it\",\n  \"iu\",\n  \"ja\",\n  \"jv\",\n  \"ka\",\n  \"kg\",\n  \"ki\",\n  \"kj\",\n  \"kk\",\n  \"kl\",\n  \"km\",\n  \"kn\",\n  \"ko\",\n  \"kr\",\n  \"ks\",\n  \"ku\",\n  \"kv\",\n  \"kw\",\n  \"ky\",\n  \"la\",\n  \"lb\",\n  \"lg\",\n  \"li\",\n  \"ln\",\n  \"lo\",\n  \"lt\",\n  \"lu\",\n  \"lv\",\n  \"mg\",\n  \"mh\",\n  \"mi\",\n  \"mk\",\n  \"ml\",\n  \"mn\",\n  \"mo\",\n  \"mr\",\n  \"ms\",\n  \"mt\",\n  \"my\",\n  \"na\",\n  \"nb\",\n  \"nd\",\n  \"ne\",\n  \"ng\",\n  \"nl\",\n  \"nn\",\n  \"no\",\n  \"nr\",\n  \"nv\",\n  \"ny\",\n  \"oc\",\n  \"oj\",\n  \"om\",\n  \"or\",\n  \"os\",\n  \"pa\",\n  \"pi\",\n  \"pl\",\n  \"ps\",\n  \"pt\",\n  \"qu\",\n  \"rm\",\n  \"rn\",\n  \"ro\",\n  \"ru\",\n  \"rw\",\n  \"sa\",\n  \"sc\",\n  \"sd\",\n  \"se\",\n  \"sg\",\n  \"sh\",\n  \"si\",\n  \"sk\",\n  \"sl\",\n  \"sm\",\n  \"sn\",\n  \"so\",\n  \"sq\",\n  \"sr\",\n  \"ss\",\n  \"st\",\n  \"su\",\n  \"sv\",\n  \"sw\",\n  \"ta\",\n  \"te\",\n  \"tg\",\n  \"th\",\n  \"ti\",\n  \"tk\",\n  \"tl\",\n  \"tn\",\n  \"to\",\n  \"tr\",\n  \"ts\",\n  \"tt\",\n  \"tw\",\n  \"ty\",\n  \"ug\",\n  \"uk\",\n  \"ur\",\n  \"uz\",\n  \"ve\",\n  \"vi\",\n  \"vo\",\n  \"wa\",\n  \"wo\",\n  \"xh\",\n  \"yi\",\n  \"yo\",\n  \"za\",\n  \"zh\",\n  \"zu\",\n  \"aar\",\n  \"abk\",\n  \"ave\",\n  \"afr\",\n  \"aka\",\n  \"amh\",\n  \"arg\",\n  \"ara\",\n  \"asm\",\n  \"ava\",\n  \"aym\",\n  \"aze\",\n  \"bak\",\n  \"bel\",\n  \"bul\",\n  \"bih\",\n  \"bis\",\n  \"bam\",\n  \"ben\",\n  \"tib\",\n  \"bod\",\n  \"bre\",\n  \"bos\",\n  \"cat\",\n  \"che\",\n  \"cha\",\n  \"cos\",\n  \"cre\",\n  \"cze\",\n  \"ces\",\n  \"chu\",\n  \"chv\",\n  \"wel\",\n  \"cym\",\n  \"dan\",\n  \"ger\",\n  \"deu\",\n  \"div\",\n  \"dzo\",\n  \"ewe\",\n  \"gre\",\n  \"ell\",\n  \"eng\",\n  \"epo\",\n  \"spa\",\n  \"est\",\n  \"baq\",\n  \"eus\",\n  \"per\",\n  \"fas\",\n  \"ful\",\n  \"fin\",\n  \"fij\",\n  \"fao\",\n  \"fre\",\n  \"fra\",\n  \"fry\",\n  \"gle\",\n  \"gla\",\n  \"glg\",\n  \"grn\",\n  \"guj\",\n  \"glv\",\n  \"hau\",\n  \"heb\",\n  \"hin\",\n  \"hmo\",\n  \"hrv\",\n  \"hat\",\n  \"hun\",\n  \"arm\",\n  \"hye\",\n  \"her\",\n  \"ina\",\n  \"ind\",\n  \"ile\",\n  \"ibo\",\n  \"iii\",\n  \"ipk\",\n  \"ido\",\n  \"ice\",\n  \"isl\",\n  \"ita\",\n  \"iku\",\n  \"jpn\",\n  \"jav\",\n  \"geo\",\n  \"kat\",\n  \"kon\",\n  \"kik\",\n  \"kua\",\n  \"kaz\",\n  \"kal\",\n  \"khm\",\n  \"kan\",\n  \"kor\",\n  \"kau\",\n  \"kas\",\n  \"kur\",\n  \"kom\",\n  \"cor\",\n  \"kir\",\n  \"lat\",\n  \"ltz\",\n  \"lug\",\n  \"lim\",\n  \"lin\",\n  \"lao\",\n  \"lit\",\n  \"lub\",\n  \"lav\",\n  \"mlg\",\n  \"mah\",\n  \"mao\",\n  \"mri\",\n  \"mac\",\n  \"mkd\",\n  \"mal\",\n  \"mon\",\n  \"mol\",\n  \"mar\",\n  \"may\",\n  \"msa\",\n  \"mlt\",\n  \"bur\",\n  \"mya\",\n  \"nau\",\n  \"nob\",\n  \"nde\",\n  \"nep\",\n  \"ndo\",\n  \"dut\",\n  \"nld\",\n  \"nno\",\n  \"nor\",\n  \"nbl\",\n  \"nav\",\n  \"nya\",\n  \"oci\",\n  \"oji\",\n  \"orm\",\n  \"ori\",\n  \"oss\",\n  \"pan\",\n  \"pli\",\n  \"pol\",\n  \"pus\",\n  \"por\",\n  \"que\",\n  \"roh\",\n  \"run\",\n  \"rum\",\n  \"ron\",\n  \"rus\",\n  \"kin\",\n  \"san\",\n  \"srd\",\n  \"snd\",\n  \"sme\",\n  \"sag\",\n  \"slo\",\n  \"sin\",\n  \"slk\",\n  \"slv\",\n  \"smo\",\n  \"sna\",\n  \"som\",\n  \"alb\",\n  \"sqi\",\n  \"srp\",\n  \"ssw\",\n  \"sot\",\n  \"sun\",\n  \"swe\",\n  \"swa\",\n  \"tam\",\n  \"tel\",\n  \"tgk\",\n  \"tha\",\n  \"tir\",\n  \"tuk\",\n  \"tgl\",\n  \"tsn\",\n  \"ton\",\n  \"tur\",\n  \"tso\",\n  \"tat\",\n  \"twi\",\n  \"tah\",\n  \"uig\",\n  \"ukr\",\n  \"urd\",\n  \"uzb\",\n  \"ven\",\n  \"vie\",\n  \"vol\",\n  \"wln\",\n  \"wol\",\n  \"xho\",\n  \"yid\",\n  \"yor\",\n  \"zha\",\n  \"chi\",\n  \"zho\",\n  \"zul\",\n];\nexport default ValidLanguages;\n","import { BaseCMI } from \"../common/base_cmi\";\nimport { Scorm2004ValidationError } from \"../../exceptions/scorm2004_exceptions\";\nimport { check2004ValidFormat } from \"./validation\";\nimport { scorm2004_regex } from \"../../constants/regex\";\nimport { NAVBoolean } from \"../../constants/enums\";\nimport { CMIArray } from \"../common/array\";\nimport { scorm2004_constants } from \"../../constants/api_constants\";\nimport { scorm2004_errors } from \"../../constants/error_codes\";\n\n/**\n * Class representing SCORM 2004's adl object\n */\nexport class ADL extends BaseCMI {\n  /**\n   * Constructor for adl\n   */\n  constructor() {\n    super();\n    this.nav = new ADLNav();\n    this.data = new ADLData();\n  }\n\n  public nav: ADLNav;\n  public data = new ADLData();\n\n  /**\n   * Called when the API has been initialized after the CMI has been created\n   */\n  override initialize() {\n    super.initialize();\n    this.nav?.initialize();\n  }\n\n  /**\n   * Called when the API needs to be reset\n   */\n  reset() {\n    this._initialized = false;\n    this.nav?.reset();\n  }\n\n  /**\n   * toJSON for adl\n   * @return {\n   *    {\n   *      nav: ADLNav,\n   *      data: ADLData\n   *    }\n   *  }\n   */\n  toJSON(): {\n    nav: ADLNav;\n    data: ADLData;\n  } {\n    this.jsonString = true;\n    const result = {\n      nav: this.nav,\n      data: this.data,\n    };\n    delete this.jsonString;\n    return result;\n  }\n}\n\n/**\n * Class representing SCORM 2004's `adl.nav` object\n */\n\nexport class ADLNav extends BaseCMI {\n  private _request = \"_none_\";\n\n  /**\n   * Constructor for `adl.nav`\n   */\n  constructor() {\n    super();\n    this.request_valid = new ADLNavRequestValid();\n  }\n\n  public request_valid: ADLNavRequestValid;\n\n  /**\n   * Called when the API has been initialized after the CMI has been created\n   */\n  override initialize() {\n    super.initialize();\n    this.request_valid?.initialize();\n  }\n\n  /**\n   * Called when the API needs to be reset\n   */\n  reset() {\n    this._initialized = false;\n    this._request = \"_none_\";\n    this.request_valid?.reset();\n  }\n\n  /**\n   * Getter for _request\n   * @return {string}\n   */\n  get request(): string {\n    return this._request;\n  }\n\n  /**\n   * Setter for _request\n   * @param {string} request\n   */\n  set request(request: string) {\n    if (check2004ValidFormat(request, scorm2004_regex.NAVEvent)) {\n      this._request = request;\n    }\n  }\n\n  /**\n   * toJSON for adl.nav\n   *\n   * @return {\n   *    {\n   *      request: string\n   *    }\n   *  }\n   */\n  toJSON(): {\n    request: string;\n  } {\n    this.jsonString = true;\n    const result = {\n      request: this.request,\n    };\n    delete this.jsonString;\n    return result;\n  }\n}\n\n/**\n * Class representing SCORM 2004's `adl.data` object\n */\nexport class ADLData extends CMIArray {\n  constructor() {\n    super({\n      children: scorm2004_constants.adl_data_children,\n      errorCode: scorm2004_errors.READ_ONLY_ELEMENT as number,\n      errorClass: Scorm2004ValidationError,\n    });\n  }\n}\n\n/**\n * Class for SCORM 2004's adl.data.n object\n */\nexport class ADLDataObject extends BaseCMI {\n  private _id = \"\";\n  private _store = \"\";\n\n  constructor() {\n    super();\n  }\n\n  /**\n   * Called when the API has been reset\n   */\n  reset() {\n    this._initialized = false;\n  }\n\n  /**\n   * Getter for _id\n   * @return {string}\n   */\n  get id(): string {\n    return this._id;\n  }\n\n  /**\n   * Setter for _id\n   * @param {string} id\n   */\n  set id(id: string) {\n    if (check2004ValidFormat(id, scorm2004_regex.CMILongIdentifier)) {\n      this._id = id;\n    }\n  }\n\n  /**\n   * Getter for _store\n   * @return {string}\n   */\n  get store(): string {\n    return this._store;\n  }\n\n  /**\n   * Setter for _store\n   * @param {string} store\n   */\n  set store(store: string) {\n    if (check2004ValidFormat(store, scorm2004_regex.CMILangString4000)) {\n      this._store = store;\n    }\n  }\n\n  /**\n   * toJSON for adl.data.n\n   *\n   * @return {\n   *    {\n   *      id: string,\n   *      store: string\n   *    }\n   *  }\n   */\n  toJSON(): {\n    id: string;\n    store: string;\n  } {\n    this.jsonString = true;\n    const result = {\n      id: this._id,\n      store: this._store,\n    };\n    delete this.jsonString;\n    return result;\n  }\n}\n\n/**\n * Class representing SCORM 2004's adl.nav.request_valid object\n */\n\nexport class ADLNavRequestValid extends BaseCMI {\n  private _continue = \"unknown\";\n  private _previous = \"unknown\";\n  private _choice: {\n    [key: string]: NAVBoolean;\n  } = {};\n  private _jump: {\n    [key: string]: NAVBoolean;\n  } = {};\n\n  /**\n   * Constructor for adl.nav.request_valid\n   */\n  constructor() {\n    super();\n  }\n\n  /**\n   * Called when the API has been reset\n   */\n  override reset() {\n    this._initialized = false;\n    this._continue = \"unknown\";\n    this._previous = \"unknown\";\n  }\n\n  /**\n   * Getter for _continue\n   * @return {string}\n   */\n  get continue(): string {\n    return this._continue;\n  }\n\n  /**\n   * Setter for _continue. Just throws an error.\n   * @param {string} _continue\n   */\n  set continue(_continue: string) {\n    if (this.initialized) {\n      throw new Scorm2004ValidationError(\n        scorm2004_errors.READ_ONLY_ELEMENT as number,\n      );\n    }\n    if (check2004ValidFormat(_continue, scorm2004_regex.NAVBoolean)) {\n      this._continue = _continue;\n    }\n  }\n\n  /**\n   * Getter for _previous\n   * @return {string}\n   */\n  get previous(): string {\n    return this._previous;\n  }\n\n  /**\n   * Setter for _previous. Just throws an error.\n   * @param {string} _previous\n   */\n  set previous(_previous: string) {\n    if (this.initialized) {\n      throw new Scorm2004ValidationError(\n        scorm2004_errors.READ_ONLY_ELEMENT as number,\n      );\n    }\n    if (check2004ValidFormat(_previous, scorm2004_regex.NAVBoolean)) {\n      this._previous = _previous;\n    }\n  }\n\n  /**\n   * Getter for _choice\n   * @return {{ [key: string]: NAVBoolean }}\n   */\n  get choice(): { [key: string]: NAVBoolean } {\n    return this._choice;\n  }\n\n  /**\n   * Setter for _choice\n   * @param {{ [key: string]: string }} choice\n   */\n  set choice(choice: { [key: string]: string }) {\n    if (this.initialized) {\n      throw new Scorm2004ValidationError(\n        scorm2004_errors.READ_ONLY_ELEMENT as number,\n      );\n    }\n    if (typeof choice !== \"object\") {\n      throw new Scorm2004ValidationError(\n        scorm2004_errors.TYPE_MISMATCH as number,\n      );\n    }\n    for (const key in choice) {\n      if ({}.hasOwnProperty.call(choice, key)) {\n        if (\n          choice[key] !== undefined &&\n          check2004ValidFormat(choice[key], scorm2004_regex.NAVBoolean) &&\n          check2004ValidFormat(key, scorm2004_regex.NAVTarget)\n        ) {\n          this._choice[key] =\n            NAVBoolean[choice[key] as keyof typeof NAVBoolean];\n        }\n      }\n    }\n  }\n\n  /**\n   * Getter for _jump\n   * @return {{ [key: string]: NAVBoolean }}\n   */\n  get jump(): { [key: string]: NAVBoolean } {\n    return this._jump;\n  }\n\n  /**\n   * Setter for _jump\n   * @param {{ [key: string]: string }} jump\n   */\n  set jump(jump: { [key: string]: string }) {\n    if (this.initialized) {\n      throw new Scorm2004ValidationError(\n        scorm2004_errors.READ_ONLY_ELEMENT as number,\n      );\n    }\n    if (typeof jump !== \"object\") {\n      throw new Scorm2004ValidationError(\n        scorm2004_errors.TYPE_MISMATCH as number,\n      );\n    }\n    for (const key in jump) {\n      if ({}.hasOwnProperty.call(jump, key)) {\n        if (\n          jump[key] !== undefined &&\n          check2004ValidFormat(jump[key], scorm2004_regex.NAVBoolean) &&\n          check2004ValidFormat(key, scorm2004_regex.NAVTarget)\n        ) {\n          this._jump[key] = NAVBoolean[jump[key] as keyof typeof NAVBoolean];\n        }\n      }\n    }\n  }\n\n  /**\n   * toJSON for adl.nav.request_valid\n   *\n   * @return {\n   *    {\n   *      previous: string,\n   *      continue: string\n   *    }\n   *  }\n   */\n  toJSON(): {\n    previous: string;\n    continue: string;\n  } {\n    this.jsonString = true;\n    const result = {\n      previous: this._previous,\n      continue: this._continue,\n      choice: this._choice,\n      jump: this._jump,\n    };\n    delete this.jsonString;\n    return result;\n  }\n}\n","import BaseAPI from \"./BaseAPI\";\nimport { CMI } from \"./cmi/scorm2004/cmi\";\nimport * as Utilities from \"./utilities\";\nimport { stringMatches } from \"./utilities\";\nimport { global_constants, scorm2004_constants } from \"./constants/api_constants\";\nimport { scorm2004_errors } from \"./constants/error_codes\";\nimport { CorrectResponses, ResponseType } from \"./constants/response_constants\";\nimport ValidLanguages from \"./constants/language_constants\";\nimport { CMIArray } from \"./cmi/common/array\";\nimport { BaseCMI } from \"./cmi/common/base_cmi\";\nimport {\n  CMIInteractionsCorrectResponsesObject,\n  CMIInteractionsObject,\n  CMIInteractionsObjectivesObject\n} from \"./cmi/scorm2004/interactions\";\nimport { CMICommentsObject } from \"./cmi/scorm2004/comments\";\nimport { CMIObjectivesObject } from \"./cmi/scorm2004/objectives\";\nimport { ADL, ADLDataObject } from \"./cmi/scorm2004/adl\";\nimport { CommitObject, RefObject, ResultObject, ScoreObject, Settings } from \"./types/api_types\";\nimport { CompletionStatus, SuccessStatus } from \"./constants/enums\";\nimport { scorm2004_regex } from \"./constants/regex\";\n\n/**\n * API class for SCORM 2004\n */\nclass Scorm2004Impl extends BaseAPI {\n  private _version: string = \"1.0\";\n  private _globalObjectives: CMIObjectivesObject[] = [];\n\n  /**\n   * Constructor for SCORM 2004 API\n   * @param {Settings} settings\n   */\n  constructor(settings?: Settings) {\n    if (settings) {\n      if (settings.mastery_override === undefined) {\n        settings.mastery_override = false;\n      }\n    }\n\n    super(scorm2004_errors, settings);\n\n    this.cmi = new CMI();\n    this.adl = new ADL();\n\n    // Rename functions to match 2004 Spec and expose to modules\n    this.Initialize = this.lmsInitialize;\n    this.Terminate = this.lmsFinish;\n    this.GetValue = this.lmsGetValue;\n    this.SetValue = this.lmsSetValue;\n    this.Commit = this.lmsCommit;\n    this.GetLastError = this.lmsGetLastError;\n    this.GetErrorString = this.lmsGetErrorString;\n    this.GetDiagnostic = this.lmsGetDiagnostic;\n  }\n\n  public cmi: CMI;\n  public adl: ADL;\n\n  public Initialize: () => string;\n  public Terminate: () => string;\n  public GetValue: (CMIElement: string) => string;\n  public SetValue: (CMIElement: string, value: any) => string;\n  public Commit: () => string;\n  public GetLastError: () => string;\n  public GetErrorString: (CMIErrorCode: string | number) => string;\n  public GetDiagnostic: (CMIErrorCode: string | number) => string;\n\n  /**\n   * Called when the API needs to be reset\n   */\n  reset(settings?: Settings) {\n    this.commonReset(settings);\n\n    this.cmi?.reset();\n    this.adl?.reset();\n  }\n\n  /**\n   * Getter for _version\n   * @return {string}\n   */\n  get version(): string {\n    return this._version;\n  }\n\n  /**\n   * Getter for _globalObjectives\n   */\n  get globalObjectives(): CMIObjectivesObject[] {\n    return this._globalObjectives;\n  }\n\n  /**\n   * @return {string} bool\n   */\n  lmsInitialize(): string {\n    this.cmi.initialize();\n    return this.initialize(\"Initialize\");\n  }\n\n  /**\n   * @return {string} bool\n   */\n  lmsFinish(): string {\n    (async () => {\n      await this.internalFinish();\n    })();\n    return global_constants.SCORM_TRUE;\n  }\n\n  async internalFinish(): Promise<string> {\n    const result = await this.terminate(\"Terminate\", true);\n\n    if (result === global_constants.SCORM_TRUE) {\n      if (this.adl.nav.request !== \"_none_\") {\n        const navActions: { [key: string]: string } = {\n          continue: \"SequenceNext\",\n          previous: \"SequencePrevious\",\n          choice: \"SequenceChoice\",\n          jump: \"SequenceJump\",\n          exit: \"SequenceExit\",\n          exitAll: \"SequenceExitAll\",\n          abandon: \"SequenceAbandon\",\n          abandonAll: \"SequenceAbandonAll\",\n        };\n\n        let request = this.adl.nav.request;\n        const choiceJumpRegex = new RegExp(scorm2004_regex.NAVEvent);\n        const matches = request.match(choiceJumpRegex);\n        let target = \"\";\n        if (matches) {\n          if (matches.groups?.choice_target) {\n            target = matches.groups?.choice_target;\n            request = \"choice\";\n          } else if (matches.groups?.jump_target) {\n            target = matches.groups?.jump_target;\n            request = \"jump\";\n          }\n        }\n        const action = navActions[request];\n        if (action) {\n          this.processListeners(action, \"adl.nav.request\", target);\n        }\n      } else if (this.settings.autoProgress) {\n        this.processListeners(\"SequenceNext\");\n      }\n    }\n\n    return result;\n  }\n\n  /**\n   * @param {string} CMIElement\n   * @return {string}\n   */\n  lmsGetValue(CMIElement: string): string {\n    const adlNavRequestRegex =\n      \"^adl\\\\.nav\\\\.request_valid\\\\.(choice|jump)\\\\.{target=\\\\S{0,}([a-zA-Z0-9-_]+)}$\";\n    if (stringMatches(CMIElement, adlNavRequestRegex)) {\n      const matches = CMIElement.match(adlNavRequestRegex);\n      if (matches) {\n        const request = matches[1];\n        const target = matches[2]?.replace(\"{target=\", \"\").replace(\"}\", \"\");\n        if (target && (request === \"choice\" || request === \"jump\")) {\n          if (this.settings.scoItemIdValidator) {\n            return String(this.settings.scoItemIdValidator(target));\n          }\n          if (this.settings.scoItemIds) {\n            return String(this.settings.scoItemIds?.includes(target));\n          }\n          return String(request);\n        }\n      }\n    }\n    return this.getValue(\"GetValue\", true, CMIElement);\n  }\n\n  /**\n   * @param {string} CMIElement\n   * @param {any} value\n   * @return {string}\n   */\n  lmsSetValue(CMIElement: string, value: any): string {\n    // Proceed with regular setting for non-objective elements or fallback behavior\n    return this.setValue(\"SetValue\", \"Commit\", true, CMIElement, value);\n  }\n\n  /**\n   * Orders LMS to store all content parameters\n   *\n   * @return {string} bool\n   */\n  lmsCommit(): string {\n    if (this.settings.asyncCommit) {\n      this.scheduleCommit(500, \"LMSCommit\");\n    } else {\n      (async () => {\n        await this.commit(\"LMSCommit\", false);\n      })();\n    }\n    return global_constants.SCORM_TRUE;\n  }\n\n  /**\n   * Returns last error code\n   *\n   * @return {string}\n   */\n  lmsGetLastError(): string {\n    return this.getLastError(\"GetLastError\");\n  }\n\n  /**\n   * Returns the errorNumber error description\n   *\n   * @param {(string|number)} CMIErrorCode\n   * @return {string}\n   */\n  lmsGetErrorString(CMIErrorCode: string | number): string {\n    return this.getErrorString(\"GetErrorString\", CMIErrorCode);\n  }\n\n  /**\n   * Returns a comprehensive description of the errorNumber error.\n   *\n   * @param {(string|number)} CMIErrorCode\n   * @return {string}\n   */\n  lmsGetDiagnostic(CMIErrorCode: string | number): string {\n    return this.getDiagnostic(\"GetDiagnostic\", CMIErrorCode);\n  }\n\n  /**\n   * Sets a value on the CMI Object\n   *\n   * @param {string} CMIElement\n   * @param {any} value\n   * @return {string}\n   */\n  override setCMIValue(CMIElement: string, value: any): string {\n    // Check if we're updating a global or local objective\n    if (stringMatches(CMIElement, \"cmi\\\\.objectives\\\\.\\\\d+\")) {\n      const parts = CMIElement.split(\".\");\n      const index = Number(parts[2]);\n      const element_base = `cmi.objectives.${index}`;\n\n      let objective_id;\n      const setting_id = stringMatches(\n        CMIElement,\n        \"cmi\\\\.objectives\\\\.\\\\d+\\\\.id\",\n      );\n\n      if (setting_id) {\n        // If we're setting the objective ID, capture it directly\n        objective_id = value;\n      } else {\n        // Find existing objective ID if available\n        const objective = this.cmi.objectives.findObjectiveByIndex(index);\n        objective_id = objective ? objective.id : undefined;\n      }\n\n      // Check if the objective ID matches a global objective\n      const is_global =\n        objective_id &&\n        this.settings.globalObjectiveIds?.includes(objective_id);\n\n      if (is_global) {\n        // Locate or create an entry in _globalObjectives for the global objective\n        let global_index = this._globalObjectives.findIndex(\n          (obj) => obj.id === objective_id,\n        );\n\n        if (global_index === -1) {\n          global_index = this._globalObjectives.length;\n          const newGlobalObjective = new CMIObjectivesObject();\n          newGlobalObjective.id = objective_id;\n          this._globalObjectives.push(newGlobalObjective);\n        }\n\n        // Update the global objective\n        const global_element = CMIElement.replace(\n          element_base,\n          `_globalObjectives.${global_index}`,\n        );\n        this._commonSetCMIValue(\n          \"SetGlobalObjectiveValue\",\n          true,\n          global_element,\n          value,\n        );\n      }\n    }\n    return this._commonSetCMIValue(\"SetValue\", true, CMIElement, value);\n  }\n\n  /**\n   * Gets or builds a new child element to add to the array.\n   *\n   * @param {string} CMIElement\n   * @param {any} value\n   * @param {boolean} foundFirstIndex\n   * @return {BaseCMI|null}\n   */\n  getChildElement(\n    CMIElement: string,\n    value: any,\n    foundFirstIndex: boolean,\n  ): BaseCMI | null {\n    if (stringMatches(CMIElement, \"cmi\\\\.objectives\\\\.\\\\d+\")) {\n      return new CMIObjectivesObject();\n    }\n\n    if (foundFirstIndex) {\n      if (\n        stringMatches(\n          CMIElement,\n          \"cmi\\\\.interactions\\\\.\\\\d+\\\\.correct_responses\\\\.\\\\d+\",\n        )\n      ) {\n        return this.createCorrectResponsesObject(CMIElement, value);\n      } else if (\n        stringMatches(\n          CMIElement,\n          \"cmi\\\\.interactions\\\\.\\\\d+\\\\.objectives\\\\.\\\\d+\",\n        )\n      ) {\n        return new CMIInteractionsObjectivesObject();\n      }\n    } else if (stringMatches(CMIElement, \"cmi\\\\.interactions\\\\.\\\\d+\")) {\n      return new CMIInteractionsObject();\n    }\n\n    if (stringMatches(CMIElement, \"cmi\\\\.comments_from_learner\\\\.\\\\d+\")) {\n      return new CMICommentsObject();\n    } else if (stringMatches(CMIElement, \"cmi\\\\.comments_from_lms\\\\.\\\\d+\")) {\n      return new CMICommentsObject(true);\n    }\n\n    if (stringMatches(CMIElement, \"adl\\\\.data\\\\.\\\\d+\")) {\n      return new ADLDataObject();\n    }\n\n    return null;\n  }\n\n  private createCorrectResponsesObject(\n    CMIElement: string,\n    value: any,\n  ): BaseCMI | null {\n    const parts = CMIElement.split(\".\");\n    const index = Number(parts[2]);\n    const interaction = this.cmi.interactions.childArray[index];\n\n    if (this.isInitialized()) {\n      if (!interaction.type) {\n        this.throwSCORMError(\n          scorm2004_errors.DEPENDENCY_NOT_ESTABLISHED as number,\n        );\n      } else {\n        this.checkDuplicateChoiceResponse(interaction, value);\n        const response_type = CorrectResponses[interaction.type];\n        if (response_type) {\n          this.checkValidResponseType(response_type, value, interaction.type);\n        } else {\n          this.throwSCORMError(\n            scorm2004_errors.GENERAL_SET_FAILURE as number,\n            \"Incorrect Response Type: \" + interaction.type,\n          );\n        }\n      }\n    }\n\n    if (this.lastErrorCode === \"0\") {\n      return new CMIInteractionsCorrectResponsesObject();\n    }\n\n    return null;\n  }\n\n  /**\n   * Checks for valid response types\n   * @param {object} response_type\n   * @param {any} value\n   * @param {string} interaction_type\n   */\n  checkValidResponseType(\n    response_type: ResponseType,\n    value: any,\n    interaction_type: string,\n  ) {\n    let nodes = [];\n    if (response_type?.delimiter) {\n      nodes = String(value).split(response_type.delimiter);\n    } else {\n      nodes[0] = value;\n    }\n\n    if (nodes.length > 0 && nodes.length <= response_type.max) {\n      this.checkCorrectResponseValue(interaction_type, nodes, value);\n    } else if (nodes.length > response_type.max) {\n      this.throwSCORMError(\n        scorm2004_errors.GENERAL_SET_FAILURE as number,\n        \"Data Model Element Pattern Too Long\",\n      );\n    }\n  }\n\n  /**\n   * Checks for duplicate 'choice' responses.\n   * @param {CMIInteractionsObject} interaction\n   * @param {any} value\n   */\n  checkDuplicateChoiceResponse(interaction: CMIInteractionsObject, value: any) {\n    const interaction_count = interaction.correct_responses._count;\n    if (interaction.type === \"choice\") {\n      for (\n        let i = 0;\n        i < interaction_count && this.lastErrorCode === \"0\";\n        i++\n      ) {\n        const response = interaction.correct_responses.childArray[i];\n        if (response.pattern === value) {\n          this.throwSCORMError(scorm2004_errors.GENERAL_SET_FAILURE as number);\n        }\n      }\n    }\n  }\n\n  /**\n   * Validate correct response.\n   * @param {string} CMIElement\n   * @param {*} value\n   */\n  validateCorrectResponse(CMIElement: string, value: any) {\n    const parts = CMIElement.split(\".\");\n    const index = Number(parts[2]);\n    const pattern_index = Number(parts[4]);\n    const interaction = this.cmi.interactions.childArray[index];\n\n    const interaction_count = interaction.correct_responses._count;\n    this.checkDuplicateChoiceResponse(interaction, value);\n\n    const response_type = CorrectResponses[interaction.type];\n    if (\n      typeof response_type !== \"undefined\" &&\n      (typeof response_type.limit === \"undefined\" ||\n        interaction_count <= response_type.limit)\n    ) {\n      this.checkValidResponseType(response_type, value, interaction.type);\n\n      if (\n        (this.lastErrorCode === \"0\" &&\n          (!response_type.duplicate ||\n            !this.checkDuplicatedPattern(\n              interaction.correct_responses,\n              pattern_index,\n              value,\n            ))) ||\n        (this.lastErrorCode === \"0\" && value === \"\")\n      ) {\n        // do nothing, we want the inverse\n      } else {\n        if (this.lastErrorCode === \"0\") {\n          this.throwSCORMError(\n            scorm2004_errors.GENERAL_SET_FAILURE as number,\n            \"Data Model Element Pattern Already Exists\",\n          );\n        }\n      }\n    } else {\n      this.throwSCORMError(\n        scorm2004_errors.GENERAL_SET_FAILURE as number,\n        \"Data Model Element Collection Limit Reached\",\n      );\n    }\n  }\n\n  /**\n   * Gets a value from the CMI Object\n   *\n   * @param {string} CMIElement\n   * @return {*}\n   */\n  override getCMIValue(CMIElement: string): any {\n    return this._commonGetCMIValue(\"GetValue\", true, CMIElement);\n  }\n\n  /**\n   * Returns the message that corresponds to errorNumber.\n   *\n   * @param {(string|number)} errorNumber\n   * @param {boolean} detail\n   * @return {string}\n   */\n  override getLmsErrorMessageDetails(\n    errorNumber: string | number,\n    detail: boolean,\n  ): string {\n    let basicMessage = \"\";\n    let detailMessage = \"\";\n\n    // Set error number to string since inconsistent from modules if string or number\n    errorNumber = String(errorNumber);\n    if (scorm2004_constants.error_descriptions[errorNumber]) {\n      basicMessage =\n        scorm2004_constants.error_descriptions[errorNumber]?.basicMessage ||\n        \"Unknown Error\";\n      detailMessage =\n        scorm2004_constants.error_descriptions[errorNumber]?.detailMessage ||\n        \"\";\n    }\n\n    return detail ? detailMessage : basicMessage;\n  }\n\n  /**\n   * Check to see if a correct_response value has been duplicated\n   * @param {CMIArray} correct_response\n   * @param {number} current_index\n   * @param {*} value\n   * @return {boolean}\n   */\n  checkDuplicatedPattern(\n    correct_response: CMIArray,\n    current_index: number,\n    value: any,\n  ): boolean {\n    let found = false;\n    const count = correct_response._count;\n    for (let i = 0; i < count && !found; i++) {\n      if (i !== current_index && correct_response.childArray[i] === value) {\n        found = true;\n      }\n    }\n    return found;\n  }\n\n  /**\n   * Checks for a valid correct_response value\n   * @param {string} interaction_type\n   * @param {Array} nodes\n   * @param {*} value\n   */\n  checkCorrectResponseValue(\n    interaction_type: string,\n    nodes: Array<any>,\n    value: any,\n  ) {\n    const response = CorrectResponses[interaction_type];\n    const formatRegex = new RegExp(response?.format || \".*\");\n    for (let i = 0; i < nodes.length && this.lastErrorCode === \"0\"; i++) {\n      if (\n        interaction_type.match(\n          \"^(fill-in|long-fill-in|matching|performance|sequencing)$\",\n        )\n      ) {\n        nodes[i] = this.removeCorrectResponsePrefixes(nodes[i]);\n      }\n\n      if (response?.delimiter2) {\n        const values = nodes[i].split(response.delimiter2);\n        if (values.length === 2) {\n          const matches = values[0].match(formatRegex);\n          if (!matches) {\n            this.throwSCORMError(scorm2004_errors.TYPE_MISMATCH as number);\n          } else {\n            if (\n              !response.format2 ||\n              !values[1].match(new RegExp(response.format2))\n            ) {\n              this.throwSCORMError(scorm2004_errors.TYPE_MISMATCH as number);\n            }\n          }\n        } else {\n          this.throwSCORMError(scorm2004_errors.TYPE_MISMATCH as number);\n        }\n      } else {\n        const matches = nodes[i].match(formatRegex);\n        if (\n          (!matches && value !== \"\") ||\n          (!matches && interaction_type === \"true-false\")\n        ) {\n          this.throwSCORMError(scorm2004_errors.TYPE_MISMATCH as number);\n        } else {\n          if (interaction_type === \"numeric\" && nodes.length > 1) {\n            if (Number(nodes[0]) > Number(nodes[1])) {\n              this.throwSCORMError(scorm2004_errors.TYPE_MISMATCH as number);\n            }\n          } else {\n            if (nodes[i] !== \"\" && response?.unique) {\n              for (let j = 0; j < i && this.lastErrorCode === \"0\"; j++) {\n                if (nodes[i] === nodes[j]) {\n                  this.throwSCORMError(\n                    scorm2004_errors.TYPE_MISMATCH as number,\n                  );\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Remove prefixes from correct_response\n   * @param {string} node\n   * @return {*}\n   */\n  removeCorrectResponsePrefixes(node: string): any {\n    let seenOrder = false;\n    let seenCase = false;\n    let seenLang = false;\n\n    const prefixRegex = new RegExp(\n      \"^({(lang|case_matters|order_matters)=([^}]+)})\",\n    );\n    let matches = node.match(prefixRegex);\n    let langMatches = null;\n    while (matches) {\n      switch (matches[2]) {\n        case \"lang\":\n          langMatches = node.match(scorm2004_regex.CMILangcr);\n          if (langMatches) {\n            const lang = langMatches[3];\n            if (lang !== undefined && lang.length > 0) {\n              if (!ValidLanguages.includes(lang.toLowerCase())) {\n                this.throwSCORMError(scorm2004_errors.TYPE_MISMATCH as number);\n              }\n            }\n          }\n          seenLang = true;\n          break;\n        case \"case_matters\":\n          if (!seenLang && !seenOrder && !seenCase) {\n            if (matches[3] !== \"true\" && matches[3] !== \"false\") {\n              this.throwSCORMError(scorm2004_errors.TYPE_MISMATCH as number);\n            }\n          }\n\n          seenCase = true;\n          break;\n        case \"order_matters\":\n          if (!seenCase && !seenLang && !seenOrder) {\n            if (matches[3] !== \"true\" && matches[3] !== \"false\") {\n              this.throwSCORMError(scorm2004_errors.TYPE_MISMATCH as number);\n            }\n          }\n\n          seenOrder = true;\n          break;\n      }\n      node = node.substring(matches[1]?.length || 0);\n      matches = node.match(prefixRegex);\n    }\n\n    return node;\n  }\n\n  /**\n   * Replace the whole API with another\n   * @param {Scorm2004Impl} newAPI\n   */\n  replaceWithAnotherScormAPI(newAPI: Scorm2004Impl) {\n    // Data Model\n    this.cmi = newAPI.cmi;\n    this.adl = newAPI.adl;\n  }\n\n  /**\n   * Render the cmi object to the proper format for LMS commit\n   *\n   * @param {boolean} terminateCommit\n   * @return {object|Array}\n   */\n  renderCommitCMI(terminateCommit: boolean): object | Array<any> {\n    const cmiExport: RefObject = this.renderCMIToJSONObject();\n\n    if (terminateCommit) {\n      cmiExport.cmi.total_time = this.cmi.getCurrentTotalTime();\n    }\n\n    const result = [];\n    const flattened: RefObject = Utilities.flatten(cmiExport);\n    switch (this.settings.dataCommitFormat) {\n      case \"flattened\":\n        return Utilities.flatten(cmiExport);\n      case \"params\":\n        for (const item in flattened) {\n          if ({}.hasOwnProperty.call(flattened, item)) {\n            result.push(`${item}=${flattened[item]}`);\n          }\n        }\n        return result;\n      case \"json\":\n      default:\n        return cmiExport;\n    }\n  }\n\n  /**\n   * Render the cmi object to the proper format for LMS commit\n   * @param {boolean} terminateCommit\n   * @return {CommitObject}\n   */\n  renderCommitObject(terminateCommit: boolean): CommitObject {\n    const cmiExport = this.renderCommitCMI(terminateCommit);\n    const totalTimeDuration = this.cmi.getCurrentTotalTime();\n    const totalTimeSeconds = Utilities.getDurationAsSeconds(\n      totalTimeDuration,\n      scorm2004_regex.CMITimespan,\n    );\n\n    let completionStatus = CompletionStatus.unknown;\n    let successStatus = SuccessStatus.unknown;\n    if (this.cmi.completion_status) {\n      if (this.cmi.completion_status === \"completed\") {\n        completionStatus = CompletionStatus.completed;\n      } else if (this.cmi.completion_status === \"incomplete\") {\n        completionStatus = CompletionStatus.incomplete;\n      }\n    }\n    if (this.cmi.success_status) {\n      if (this.cmi.success_status === \"passed\") {\n        successStatus = SuccessStatus.passed;\n      } else if (this.cmi.success_status === \"failed\") {\n        successStatus = SuccessStatus.failed;\n      }\n    }\n\n    const score = this.cmi.score;\n    const scoreObject: ScoreObject = {};\n    if (score) {\n      if (!Number.isNaN(Number.parseFloat(score.raw))) {\n        scoreObject.raw = Number.parseFloat(score.raw);\n      }\n      if (!Number.isNaN(Number.parseFloat(score.min))) {\n        scoreObject.min = Number.parseFloat(score.min);\n      }\n      if (!Number.isNaN(Number.parseFloat(score.max))) {\n        scoreObject.max = Number.parseFloat(score.max);\n      }\n      if (!Number.isNaN(Number.parseFloat(score.scaled))) {\n        scoreObject.scaled = Number.parseFloat(score.scaled);\n      }\n    }\n\n    const commitObject: CommitObject = {\n      completionStatus: completionStatus,\n      successStatus: successStatus,\n      totalTimeSeconds: totalTimeSeconds,\n      runtimeData: cmiExport,\n    };\n    if (scoreObject) {\n      commitObject.score = scoreObject;\n    }\n    return commitObject;\n  }\n\n  /**\n   * Attempts to store the data to the LMS\n   *\n   * @param {boolean} terminateCommit\n   * @return {ResultObject}\n   */\n  async storeData(terminateCommit: boolean): Promise<ResultObject> {\n    if (terminateCommit) {\n      if (this.cmi.mode === \"normal\") {\n        if (this.cmi.credit === \"credit\") {\n          if (this.cmi.completion_threshold && this.cmi.progress_measure) {\n            if (this.cmi.progress_measure >= this.cmi.completion_threshold) {\n              this.cmi.completion_status = \"completed\";\n            } else {\n              this.cmi.completion_status = \"incomplete\";\n            }\n          }\n          if (this.cmi.scaled_passing_score && this.cmi.score.scaled) {\n            if (this.cmi.score.scaled >= this.cmi.scaled_passing_score) {\n              this.cmi.success_status = \"passed\";\n            } else {\n              this.cmi.success_status = \"failed\";\n            }\n          }\n        }\n      }\n    }\n\n    let navRequest = false;\n    if (\n      this.adl.nav.request !== this.startingData?.adl?.nav?.request &&\n      this.adl.nav.request !== \"_none_\"\n    ) {\n      navRequest = true;\n    }\n\n    const commitObject = this.getCommitObject(terminateCommit);\n    if (typeof this.settings.lmsCommitUrl === \"string\") {\n      const result = await this.processHttpRequest(\n        this.settings.lmsCommitUrl,\n        commitObject,\n        terminateCommit,\n      );\n\n      // check if this is a sequencing call, and then call the necessary JS\n      {\n        if (\n          navRequest &&\n          result.navRequest !== undefined &&\n          result.navRequest !== \"\"\n        ) {\n          Function(`\"use strict\";(() => { ${result.navRequest} })()`)();\n        }\n      }\n      return result;\n    } else {\n      return {\n        result: global_constants.SCORM_TRUE,\n        errorCode: 0,\n      };\n    }\n  }\n}\n\nexport { Scorm2004Impl as Scorm2004API };\n","import { BaseCMI } from \"./base_cmi\";\nimport { BaseScormValidationError } from \"../../exceptions\";\nimport { scorm12_errors } from \"../../constants/error_codes\";\n\n/**\n * Base class for cmi *.n objects\n */\nexport class CMIArray extends BaseCMI {\n  private readonly _errorCode: number;\n  private readonly _errorClass: typeof BaseScormValidationError;\n  private readonly __children: string;\n  public childArray: any[];\n\n  /**\n   * Constructor cmi *.n arrays\n   * @param {object} params\n   */\n  constructor(params: {\n    children: string;\n    errorCode?: number;\n    errorClass?: typeof BaseScormValidationError;\n  }) {\n    super();\n    this.__children = params.children;\n    this._errorCode = params.errorCode || (scorm12_errors.GENERAL as number);\n    this._errorClass = params.errorClass || BaseScormValidationError;\n    this.childArray = [];\n  }\n\n  /**\n   * Called when the API has been reset\n   */\n  reset(wipe: boolean = false): void {\n    this._initialized = false;\n    if (wipe) {\n      this.childArray = [];\n    } else {\n      // Reset all children\n      for (let i = 0; i < this.childArray.length; i++) {\n        this.childArray[i].reset();\n      }\n    }\n  }\n  /**\n   * Getter for _children\n   * @return {string}\n   */\n  get _children(): string {\n    return this.__children;\n  }\n\n  /**\n   * Setter for _children. Just throws an error.\n   * @param {string} _children\n   */\n  set _children(_children: string) {\n    throw new this._errorClass(this._errorCode);\n  }\n\n  /**\n   * Getter for _count\n   * @return {number}\n   */\n  get _count(): number {\n    return this.childArray.length;\n  }\n\n  /**\n   * Setter for _count. Just throws an error.\n   * @param {number} _count\n   */\n  set _count(_count: number) {\n    throw new this._errorClass(this._errorCode);\n  }\n\n  /**\n   * toJSON for *.n arrays\n   * @return {object}\n   */\n  toJSON(): object {\n    this.jsonString = true;\n    const result: { [key: string]: any } = {};\n    for (let i = 0; i < this.childArray.length; i++) {\n      result[i + \"\"] = this.childArray[i];\n    }\n    delete this.jsonString;\n    return result;\n  }\n}\n","/**\n * Base class for API cmi objects\n */\nexport abstract class BaseCMI {\n  jsonString? = false;\n  protected _initialized = false;\n  private _start_time: number | undefined;\n\n  /**\n   * Getter for _initialized\n   * @return {boolean}\n   */\n  get initialized(): boolean {\n    return this._initialized;\n  }\n\n  /**\n   * Getter for _start_time\n   * @return {number | undefined}\n   */\n  get start_time(): number | undefined {\n    return this._start_time;\n  }\n\n  /**\n   * Called when the API has been initialized after the CMI has been created\n   */\n  initialize(): void {\n    this._initialized = true;\n  }\n\n  /**\n   * Called when the player should override the 'session_time' provided by\n   * the module\n   */\n  setStartTime(): void {\n    this._start_time = new Date().getTime();\n  }\n\n  abstract reset(): void;\n}\n\n/**\n * Base class for cmi root objects\n */\nexport abstract class BaseRootCMI extends BaseCMI {\n  abstract getCurrentTotalTime(): string;\n}\n","import { scorm12_constants } from \"../../constants/api_constants\";\nimport { scorm12_regex } from \"../../constants/regex\";\nimport { BaseCMI } from \"./base_cmi\";\nimport { checkValidFormat, checkValidRange } from \"./validation\";\nimport { scorm12_errors } from \"../../constants/error_codes\";\nimport { BaseScormValidationError } from \"../../exceptions\";\n\n/**\n * Base class for cmi *.score objects\n */\nexport class CMIScore extends BaseCMI {\n  private readonly __children: string;\n  private readonly __score_range: string | false;\n  private readonly __invalid_error_code: number;\n  private readonly __invalid_type_code: number;\n  private readonly __invalid_range_code: number;\n  private readonly __decimal_regex: string;\n  private readonly __error_class: typeof BaseScormValidationError;\n  protected _raw = \"\";\n  protected _min = \"\";\n  protected _max: string;\n\n  /**\n   * Constructor for *.score\n   * @param {\n   *     score_children: string,\n   *     score_range: string,\n   *     max: string,\n   *     invalidErrorCode: number,\n   *     invalidTypeCode: number,\n   *     invalidRangeCode: number,\n   *     decimalRegex: string,\n   *     errorClass: typeof BaseScormValidationError\n   * } params\n   */\n  constructor(params: {\n    score_children?: string;\n    score_range?: string;\n    max?: string;\n    invalidErrorCode?: number;\n    invalidTypeCode?: number;\n    invalidRangeCode?: number;\n    decimalRegex?: string;\n    errorClass: typeof BaseScormValidationError;\n  }) {\n    super();\n\n    this.__children = params.score_children || scorm12_constants.score_children;\n    this.__score_range = !params.score_range\n      ? false\n      : scorm12_regex.score_range;\n    this._max = params.max || params.max === \"\" ? params.max : \"100\";\n    this.__invalid_error_code =\n      params.invalidErrorCode || (scorm12_errors.INVALID_SET_VALUE as number);\n    this.__invalid_type_code =\n      params.invalidTypeCode || (scorm12_errors.TYPE_MISMATCH as number);\n    this.__invalid_range_code =\n      params.invalidRangeCode || (scorm12_errors.VALUE_OUT_OF_RANGE as number);\n    this.__decimal_regex = params.decimalRegex || scorm12_regex.CMIDecimal;\n    this.__error_class = params.errorClass;\n  }\n\n  /**\n   * Called when the API has been reset\n   */\n  reset(): void {\n    this._initialized = false;\n  }\n\n  /**\n   * Getter for _children\n   * @return {string}\n   */\n  get _children(): string {\n    return this.__children;\n  }\n\n  /**\n   * Setter for _children. Just throws an error.\n   * @param {string} _children\n   */\n  set _children(_children: string) {\n    throw new this.__error_class(this.__invalid_error_code);\n  }\n\n  /**\n   * Getter for _raw\n   * @return {string}\n   */\n  get raw(): string {\n    return this._raw;\n  }\n\n  /**\n   * Setter for _raw\n   * @param {string} raw\n   */\n  set raw(raw: string) {\n    if (\n      checkValidFormat(\n        raw,\n        this.__decimal_regex,\n        this.__invalid_type_code,\n        this.__error_class,\n      ) &&\n      (!this.__score_range ||\n        checkValidRange(\n          raw,\n          this.__score_range,\n          this.__invalid_range_code,\n          this.__error_class,\n        ))\n    ) {\n      this._raw = raw;\n    }\n  }\n\n  /**\n   * Getter for _min\n   * @return {string}\n   */\n  get min(): string {\n    return this._min;\n  }\n\n  /**\n   * Setter for _min\n   * @param {string} min\n   */\n  set min(min: string) {\n    if (\n      checkValidFormat(\n        min,\n        this.__decimal_regex,\n        this.__invalid_type_code,\n        this.__error_class,\n      ) &&\n      (!this.__score_range ||\n        checkValidRange(\n          min,\n          this.__score_range,\n          this.__invalid_range_code,\n          this.__error_class,\n        ))\n    ) {\n      this._min = min;\n    }\n  }\n\n  /**\n   * Getter for _max\n   * @return {string}\n   */\n  get max(): string {\n    return this._max;\n  }\n\n  /**\n   * Setter for _max\n   * @param {string} max\n   */\n  set max(max: string) {\n    if (\n      checkValidFormat(\n        max,\n        this.__decimal_regex,\n        this.__invalid_type_code,\n        this.__error_class,\n      ) &&\n      (!this.__score_range ||\n        checkValidRange(\n          max,\n          this.__score_range,\n          this.__invalid_range_code,\n          this.__error_class,\n        ))\n    ) {\n      this._max = max;\n    }\n  }\n\n  /**\n   * toJSON for *.score\n   * @return {\n   *    {\n   *      min: string,\n   *      max: string,\n   *      raw: string\n   *    }\n   *    }\n   */\n  toJSON(): {\n    min: string;\n    max: string;\n    raw: string;\n  } {\n    this.jsonString = true;\n    const result = {\n      raw: this.raw,\n      min: this.min,\n      max: this.max,\n    };\n    delete this.jsonString;\n    return result;\n  }\n}\n","import { BaseScormValidationError } from \"../../exceptions\";\n\n/**\n * Check if the value matches the proper format. If not, throw proper error code.\n *\n * @param {string} value\n * @param {string} regexPattern\n * @param {number} errorCode\n * @param {typeof BaseScormValidationError} errorClass\n * @param {boolean} [allowEmptyString]\n * @return {boolean}\n */\nexport function checkValidFormat(\n  value: string,\n  regexPattern: string,\n  errorCode: number,\n  errorClass: typeof BaseScormValidationError,\n  allowEmptyString?: boolean,\n): boolean {\n  if (typeof value !== \"string\") {\n    return false;\n  }\n  const formatRegex = new RegExp(regexPattern);\n  const matches = value.match(formatRegex);\n  if (allowEmptyString && value === \"\") {\n    return true;\n  }\n  if (value === undefined || !matches || matches[0] === \"\") {\n    throw new errorClass(errorCode);\n  }\n  return true;\n}\n\n/**\n * Check if the value matches the proper range. If not, throw proper error code.\n *\n * @param {any} value\n * @param {string} rangePattern\n * @param {number} errorCode\n * @param {typeof BaseScormValidationError} errorClass\n * @return {boolean}\n */\nexport function checkValidRange(\n  value: any,\n  rangePattern: string,\n  errorCode: number,\n  errorClass: typeof BaseScormValidationError,\n): boolean {\n  const ranges = rangePattern.split(\"#\");\n  value = value * 1.0;\n  if (ranges[0] && value >= ranges[0]) {\n    if (ranges[1] && (ranges[1] === \"*\" || value <= ranges[1])) {\n      return true;\n    } else {\n      throw new errorClass(errorCode);\n    }\n  } else {\n    throw new errorClass(errorCode);\n  }\n}\n","import { BaseCMI } from \"../common/base_cmi\";\nimport { CMIScore } from \"../common/score\";\nimport { scorm12_constants } from \"../../constants/api_constants\";\nimport { scorm12_regex } from \"../../constants/regex\";\nimport { scorm12_errors } from \"../../constants/error_codes\";\nimport { Scorm12ValidationError } from \"../../exceptions/scorm12_exceptions\";\nimport { check12ValidFormat } from \"../scorm12/validation\";\nimport * as Util from \"../../utilities\";\n\n/**\n * Class representing the `cmi.core` object\n * @extends BaseCMI\n */\nexport class CMICore extends BaseCMI {\n  /**\n   * Constructor for `cmi.core`\n   */\n  constructor() {\n    super();\n    this.score = new CMIScore({\n      score_children: scorm12_constants.score_children,\n      score_range: scorm12_regex.score_range,\n      invalidErrorCode: scorm12_errors.INVALID_SET_VALUE as number,\n      invalidTypeCode: scorm12_errors.TYPE_MISMATCH as number,\n      invalidRangeCode: scorm12_errors.VALUE_OUT_OF_RANGE as number,\n      errorClass: Scorm12ValidationError,\n    });\n  }\n\n  public readonly score: CMIScore;\n\n  /**\n   * Called when the API has been initialized after the CMI has been created\n   */\n  override initialize() {\n    super.initialize();\n    this.score?.initialize();\n  }\n\n  private __children = scorm12_constants.core_children;\n  private _student_id = \"\";\n  private _student_name = \"\";\n  private _lesson_location = \"\";\n  private _credit = \"\";\n  private _lesson_status = \"not attempted\";\n  private _entry = \"\";\n  private _total_time = \"\";\n  private _lesson_mode = \"normal\";\n  private _exit = \"\";\n  private _session_time = \"00:00:00\";\n  private _suspend_data = \"\";\n\n  /**\n   * Called when the API has been reset\n   */\n  reset(): void {\n    this._initialized = false;\n\n    this._exit = \"\";\n    this._entry = \"\";\n\n    /**\n     * Resetting ensures we accurately track the time spent on each individual SCO session independently. Each new\n     * session should start from zero, so we can reset cmi.core.session_time at the beginning of each session.\n     */\n    this._session_time = \"00:00:00\";\n\n    this.score?.reset();\n  }\n\n  /**\n   * Getter for __children\n   * @return {string}\n   * @private\n   */\n  get _children(): string {\n    return this.__children;\n  }\n\n  /**\n   * Setter for __children. Just throws an error.\n   * @param {string} _children\n   * @private\n   */\n  set _children(_children: string) {\n    throw new Scorm12ValidationError(\n      scorm12_errors.INVALID_SET_VALUE as number,\n    );\n  }\n\n  /**\n   * Getter for _student_id\n   * @return {string}\n   */\n  get student_id(): string {\n    return this._student_id;\n  }\n\n  /**\n   * Setter for _student_id. Can only be called before  initialization.\n   * @param {string} student_id\n   */\n  set student_id(student_id: string) {\n    if (this.initialized) {\n      throw new Scorm12ValidationError(\n        scorm12_errors.READ_ONLY_ELEMENT as number,\n      );\n    } else {\n      this._student_id = student_id;\n    }\n  }\n\n  /**\n   * Getter for _student_name\n   * @return {string}\n   */\n  get student_name(): string {\n    return this._student_name;\n  }\n\n  /**\n   * Setter for _student_name. Can only be called before  initialization.\n   * @param {string} student_name\n   */\n  set student_name(student_name: string) {\n    if (this.initialized) {\n      throw new Scorm12ValidationError(\n        scorm12_errors.READ_ONLY_ELEMENT as number,\n      );\n    } else {\n      this._student_name = student_name;\n    }\n  }\n\n  /**\n   * Getter for _lesson_location\n   * @return {string}\n   */\n  get lesson_location(): string {\n    return this._lesson_location;\n  }\n\n  /**\n   * Setter for _lesson_location\n   * @param {string} lesson_location\n   */\n  set lesson_location(lesson_location: string) {\n    if (check12ValidFormat(lesson_location, scorm12_regex.CMIString256, true)) {\n      this._lesson_location = lesson_location;\n    }\n  }\n\n  /**\n   * Getter for _credit\n   * @return {string}\n   */\n  get credit(): string {\n    return this._credit;\n  }\n\n  /**\n   * Setter for _credit. Can only be called before  initialization.\n   * @param {string} credit\n   */\n  set credit(credit: string) {\n    if (this.initialized) {\n      throw new Scorm12ValidationError(\n        scorm12_errors.READ_ONLY_ELEMENT as number,\n      );\n    } else {\n      this._credit = credit;\n    }\n  }\n\n  /**\n   * Getter for _lesson_status\n   * @return {string}\n   */\n  get lesson_status(): string {\n    return this._lesson_status;\n  }\n\n  /**\n   * Setter for _lesson_status\n   * @param {string} lesson_status\n   */\n  set lesson_status(lesson_status: string) {\n    if (this.initialized) {\n      if (check12ValidFormat(lesson_status, scorm12_regex.CMIStatus)) {\n        this._lesson_status = lesson_status;\n      }\n    } else {\n      if (check12ValidFormat(lesson_status, scorm12_regex.CMIStatus2)) {\n        this._lesson_status = lesson_status;\n      }\n    }\n  }\n\n  /**\n   * Getter for _entry\n   * @return {string}\n   */\n  get entry(): string {\n    return this._entry;\n  }\n\n  /**\n   * Setter for _entry. Can only be called before  initialization.\n   * @param {string} entry\n   */\n  set entry(entry: string) {\n    if (this.initialized) {\n      throw new Scorm12ValidationError(\n        scorm12_errors.READ_ONLY_ELEMENT as number,\n      );\n    } else {\n      this._entry = entry;\n    }\n  }\n\n  /**\n   * Getter for _total_time\n   * @return {string}\n   */\n  get total_time(): string {\n    return this._total_time;\n  }\n\n  /**\n   * Setter for _total_time. Can only be called before  initialization.\n   * @param {string} total_time\n   */\n  set total_time(total_time: string) {\n    if (this.initialized) {\n      throw new Scorm12ValidationError(\n        scorm12_errors.READ_ONLY_ELEMENT as number,\n      );\n    } else {\n      this._total_time = total_time;\n    }\n  }\n\n  /**\n   * Getter for _lesson_mode\n   * @return {string}\n   */\n  get lesson_mode(): string {\n    return this._lesson_mode;\n  }\n\n  /**\n   * Setter for _lesson_mode. Can only be called before  initialization.\n   * @param {string} lesson_mode\n   */\n  set lesson_mode(lesson_mode: string) {\n    if (this.initialized) {\n      throw new Scorm12ValidationError(\n        scorm12_errors.READ_ONLY_ELEMENT as number,\n      );\n    } else {\n      this._lesson_mode = lesson_mode;\n    }\n  }\n\n  /**\n   * Getter for _exit. Should only be called during JSON export.\n   * @return {string}\n   */\n  get exit(): string {\n    if (!this.jsonString) {\n      throw new Scorm12ValidationError(\n        scorm12_errors.WRITE_ONLY_ELEMENT as number,\n      );\n    }\n    return this._exit;\n  }\n\n  /**\n   * Setter for _exit\n   * @param {string} exit\n   */\n  set exit(exit: string) {\n    if (check12ValidFormat(exit, scorm12_regex.CMIExit, true)) {\n      this._exit = exit;\n    }\n  }\n\n  /**\n   * Getter for _session_time. Should only be called during JSON export.\n   * @return {string}\n   */\n  get session_time(): string {\n    if (!this.jsonString) {\n      throw new Scorm12ValidationError(\n        scorm12_errors.WRITE_ONLY_ELEMENT as number,\n      );\n    }\n    return this._session_time;\n  }\n\n  /**\n   * Setter for _session_time\n   * @param {string} session_time\n   */\n  set session_time(session_time: string) {\n    if (check12ValidFormat(session_time, scorm12_regex.CMITimespan)) {\n      this._session_time = session_time;\n    }\n  }\n\n  /**\n   * Getter for _suspend_data\n   * @return {string}\n   */\n  get suspend_data(): string {\n    return this._suspend_data;\n  }\n\n  /**\n   * Setter for _suspend_data\n   * @param {string} suspend_data\n   */\n  set suspend_data(suspend_data: string) {\n    if (check12ValidFormat(suspend_data, scorm12_regex.CMIString4096, true)) {\n      this._suspend_data = suspend_data;\n    }\n  }\n\n  /**\n   * Adds the current session time to the existing total time.\n   * @param {number} start_time\n   * @return {string}\n   */\n  getCurrentTotalTime(start_time: number | undefined): string {\n    let sessionTime = this._session_time;\n    const startTime = start_time;\n\n    if (typeof startTime !== \"undefined\" && startTime !== null) {\n      const seconds = new Date().getTime() - startTime;\n      sessionTime = Util.getSecondsAsHHMMSS(seconds / 1000);\n    }\n\n    return Util.addHHMMSSTimeStrings(\n      this._total_time,\n      sessionTime,\n      new RegExp(scorm12_regex.CMITimespan),\n    );\n  }\n\n  /**\n   * toJSON for cmi.core\n   *\n   * @return {\n   *    {\n   *      student_name: string,\n   *      entry: string,\n   *      exit: string,\n   *      score: CMIScore,\n   *      student_id: string,\n   *      lesson_mode: string,\n   *      lesson_location: string,\n   *      lesson_status: string,\n   *      credit: string,\n   *      session_time: string\n   *    }\n   *  }\n   */\n  toJSON(): {\n    student_name: string;\n    entry: string;\n    exit: string;\n    score: CMIScore;\n    student_id: string;\n    lesson_mode: string;\n    lesson_location: string;\n    lesson_status: string;\n    credit: string;\n    session_time: string;\n  } {\n    this.jsonString = true;\n    const result = {\n      student_id: this.student_id,\n      student_name: this.student_name,\n      lesson_location: this.lesson_location,\n      credit: this.credit,\n      lesson_status: this.lesson_status,\n      entry: this.entry,\n      lesson_mode: this.lesson_mode,\n      exit: this.exit,\n      session_time: this.session_time,\n      score: this.score,\n    };\n    delete this.jsonString;\n    return result;\n  }\n}\n","import { scorm12_constants } from \"../../constants/api_constants\";\nimport { scorm12_errors } from \"../../constants/error_codes\";\nimport { scorm12_regex } from \"../../constants/regex\";\nimport { Scorm12ValidationError } from \"../../exceptions/scorm12_exceptions\";\nimport { BaseRootCMI } from \"../common/base_cmi\";\nimport { check12ValidFormat } from \"./validation\";\nimport { CMICore } from \"../aicc/core\";\nimport { CMIObjectives } from \"./objectives\";\nimport { CMIStudentData } from \"./student_data\";\nimport { CMIStudentPreference } from \"./student_preference\";\nimport { CMIInteractions } from \"./interactions\";\n\n/**\n * Class representing the cmi object for SCORM 1.2\n */\nexport class CMI extends BaseRootCMI {\n  private readonly __children: string = \"\";\n  private __version: string = \"3.4\";\n  private _launch_data: string = \"\";\n  private _comments: string = \"\";\n  private _comments_from_lms: string = \"\";\n\n  /**\n   * Constructor for the SCORM 1.2 cmi object\n   * @param {string} cmi_children\n   * @param {(CMIStudentData|AICCCMIStudentData)} student_data\n   * @param {boolean} initialized\n   */\n  constructor(\n    cmi_children?: string,\n    student_data?: CMIStudentData,\n    initialized?: boolean,\n  ) {\n    super();\n    if (initialized) this.initialize();\n    this.__children = cmi_children\n      ? cmi_children\n      : scorm12_constants.cmi_children;\n    this.core = new CMICore();\n    this.objectives = new CMIObjectives();\n    this.student_data = student_data ? student_data : new CMIStudentData();\n    this.student_preference = new CMIStudentPreference();\n    this.interactions = new CMIInteractions();\n  }\n\n  public core: CMICore;\n  public objectives: CMIObjectives;\n  public student_data: CMIStudentData;\n  public student_preference: CMIStudentPreference;\n  public interactions: CMIInteractions;\n\n  /**\n   * Called when the API has been reset\n   */\n  reset(): void {\n    this._initialized = false;\n\n    this._launch_data = \"\";\n    this._comments = \"\";\n    this.core?.reset();\n    this.objectives = new CMIObjectives();\n    this.interactions = new CMIInteractions();\n    this.student_data?.reset();\n    this.student_preference?.reset();\n  }\n\n  /**\n   * Called when the API has been initialized after the CMI has been created\n   */\n  override initialize() {\n    super.initialize();\n    this.core?.initialize();\n    this.objectives?.initialize();\n    this.student_data?.initialize();\n    this.student_preference?.initialize();\n    this.interactions?.initialize();\n  }\n\n  /**\n   * toJSON for cmi\n   *\n   * @return {\n   *    {\n   *      suspend_data: string,\n   *      launch_data: string,\n   *      comments: string,\n   *      comments_from_lms: string,\n   *      core: CMICore,\n   *      objectives: CMIObjectives,\n   *      student_data: CMIStudentData,\n   *      student_preference: CMIStudentPreference,\n   *      interactions: CMIInteractions\n   *    }\n   *  }\n   */\n  toJSON(): {\n    suspend_data: string;\n    launch_data: string;\n    comments: string;\n    comments_from_lms: string;\n    core: CMICore;\n    objectives: CMIObjectives;\n    student_data: CMIStudentData;\n    student_preference: CMIStudentPreference;\n    interactions: CMIInteractions;\n  } {\n    this.jsonString = true;\n    const result = {\n      suspend_data: this.suspend_data,\n      launch_data: this.launch_data,\n      comments: this.comments,\n      comments_from_lms: this.comments_from_lms,\n      core: this.core,\n      objectives: this.objectives,\n      student_data: this.student_data,\n      student_preference: this.student_preference,\n      interactions: this.interactions,\n    };\n    delete this.jsonString;\n    return result;\n  }\n\n  /**\n   * Getter for __version\n   * @return {string}\n   */\n  get _version(): string {\n    return this.__version;\n  }\n\n  /**\n   * Setter for __version. Just throws an error.\n   * @param {string} _version\n   */\n  set _version(_version: string) {\n    throw new Scorm12ValidationError(\n      scorm12_errors.INVALID_SET_VALUE as number,\n    );\n  }\n\n  /**\n   * Getter for __children\n   * @return {string}\n   */\n  get _children(): string {\n    return this.__children;\n  }\n\n  /**\n   * Setter for __version. Just throws an error.\n   * @param {string} _children\n   */\n  set _children(_children: string) {\n    throw new Scorm12ValidationError(\n      scorm12_errors.INVALID_SET_VALUE as number,\n    );\n  }\n\n  /**\n   * Getter for _suspend_data\n   * @return {string}\n   */\n  get suspend_data(): string {\n    return this.core?.suspend_data;\n  }\n\n  /**\n   * Setter for _suspend_data\n   * @param {string} suspend_data\n   */\n  set suspend_data(suspend_data: string) {\n    if (this.core) {\n      this.core.suspend_data = suspend_data;\n    }\n  }\n\n  /**\n   * Getter for _launch_data\n   * @return {string}\n   */\n  get launch_data(): string {\n    return this._launch_data;\n  }\n\n  /**\n   * Setter for _launch_data. Can only be called before  initialization.\n   * @param {string} launch_data\n   */\n  set launch_data(launch_data: string) {\n    if (this.initialized) {\n      throw new Scorm12ValidationError(\n        scorm12_errors.READ_ONLY_ELEMENT as number,\n      );\n    } else {\n      this._launch_data = launch_data;\n    }\n  }\n\n  /**\n   * Getter for _comments\n   * @return {string}\n   */\n  get comments(): string {\n    return this._comments;\n  }\n\n  /**\n   * Setter for _comments\n   * @param {string} comments\n   */\n  set comments(comments: string) {\n    if (check12ValidFormat(comments, scorm12_regex.CMIString4096, true)) {\n      this._comments = comments;\n    }\n  }\n\n  /**\n   * Getter for _comments_from_lms\n   * @return {string}\n   */\n  get comments_from_lms(): string {\n    return this._comments_from_lms;\n  }\n\n  /**\n   * Setter for _comments_from_lms. Can only be called before  initialization.\n   * @param {string} comments_from_lms\n   */\n  set comments_from_lms(comments_from_lms: string) {\n    if (this.initialized) {\n      throw new Scorm12ValidationError(\n        scorm12_errors.READ_ONLY_ELEMENT as number,\n      );\n    } else {\n      this._comments_from_lms = comments_from_lms;\n    }\n  }\n\n  /**\n   * Adds the current session time to the existing total time.\n   *\n   * @return {string}\n   */\n  getCurrentTotalTime(): string {\n    return this.core.getCurrentTotalTime(this.start_time);\n  }\n}\n","import { CMIArray } from \"../common/array\";\nimport { scorm12_constants } from \"../../constants/api_constants\";\nimport { scorm12_errors } from \"../../constants/error_codes\";\nimport { Scorm12ValidationError } from \"../../exceptions/scorm12_exceptions\";\nimport { BaseCMI } from \"../common/base_cmi\";\nimport { check12ValidFormat, check12ValidRange } from \"./validation\";\nimport { scorm12_regex } from \"../../constants/regex\";\n\n/**\n * Class representing the SCORM 1.2 `cmi.interactions`\n * @extends CMIArray\n */\nexport class CMIInteractions extends CMIArray {\n  /**\n   * Constructor for `cmi.interactions`\n   */\n  constructor() {\n    super({\n      children: scorm12_constants.interactions_children,\n      errorCode: scorm12_errors.INVALID_SET_VALUE as number,\n      errorClass: Scorm12ValidationError,\n    });\n  }\n}\n\n/**\n * Class representing SCORM 1.2's cmi.interactions.n object\n * @extends BaseCMI\n */\nexport class CMIInteractionsObject extends BaseCMI {\n  /**\n   * Constructor for cmi.interactions.n object\n   */\n  constructor() {\n    super();\n    this.objectives = new CMIArray({\n      errorCode: scorm12_errors.INVALID_SET_VALUE as number,\n      errorClass: Scorm12ValidationError,\n      children: scorm12_constants.objectives_children,\n    });\n    this.correct_responses = new CMIArray({\n      errorCode: scorm12_errors.INVALID_SET_VALUE as number,\n      errorClass: Scorm12ValidationError,\n      children: scorm12_constants.correct_responses_children,\n    });\n  }\n\n  public readonly objectives: CMIArray;\n  public readonly correct_responses: CMIArray;\n\n  /**\n   * Called when the API has been initialized after the CMI has been created\n   */\n  override initialize() {\n    super.initialize();\n    this.objectives?.initialize();\n    this.correct_responses?.initialize();\n  }\n\n  private _id = \"\";\n  private _time = \"\";\n  private _type = \"\";\n  private _weighting = \"\";\n  private _student_response = \"\";\n  private _result = \"\";\n  private _latency = \"\";\n\n  /**\n   * Called when the API has been reset\n   */\n  override reset(): void {\n    this._initialized = false;\n\n    this._id = \"\";\n    this._time = \"\";\n    this._type = \"\";\n    this._weighting = \"\";\n    this._student_response = \"\";\n    this._result = \"\";\n    this._latency = \"\";\n\n    this.objectives?.reset();\n    this.correct_responses?.reset();\n  }\n\n  /**\n   * Getter for _id. Should only be called during JSON export.\n   * @return {string}\n   */\n  get id(): string {\n    if (!this.jsonString) {\n      throw new Scorm12ValidationError(\n        scorm12_errors.WRITE_ONLY_ELEMENT as number,\n      );\n    }\n    return this._id;\n  }\n\n  /**\n   * Setter for _id\n   * @param {string} id\n   */\n  set id(id: string) {\n    if (check12ValidFormat(id, scorm12_regex.CMIIdentifier)) {\n      this._id = id;\n    }\n  }\n\n  /**\n   * Getter for _time. Should only be called during JSON export.\n   * @return {string}\n   */\n  get time(): string {\n    if (!this.jsonString) {\n      throw new Scorm12ValidationError(\n        scorm12_errors.WRITE_ONLY_ELEMENT as number,\n      );\n    }\n    return this._time;\n  }\n\n  /**\n   * Setter for _time\n   * @param {string} time\n   */\n  set time(time: string) {\n    if (check12ValidFormat(time, scorm12_regex.CMITime)) {\n      this._time = time;\n    }\n  }\n\n  /**\n   * Getter for _type. Should only be called during JSON export.\n   * @return {string}\n   */\n  get type(): string {\n    if (!this.jsonString) {\n      throw new Scorm12ValidationError(\n        scorm12_errors.WRITE_ONLY_ELEMENT as number,\n      );\n    }\n    return this._type;\n  }\n\n  /**\n   * Setter for _type\n   * @param {string} type\n   */\n  set type(type: string) {\n    if (check12ValidFormat(type, scorm12_regex.CMIType)) {\n      this._type = type;\n    }\n  }\n\n  /**\n   * Getter for _weighting. Should only be called during JSON export.\n   * @return {string}\n   */\n  get weighting(): string {\n    if (!this.jsonString) {\n      throw new Scorm12ValidationError(\n        scorm12_errors.WRITE_ONLY_ELEMENT as number,\n      );\n    }\n    return this._weighting;\n  }\n\n  /**\n   * Setter for _weighting\n   * @param {string} weighting\n   */\n  set weighting(weighting: string) {\n    if (\n      check12ValidFormat(weighting, scorm12_regex.CMIDecimal) &&\n      check12ValidRange(weighting, scorm12_regex.weighting_range)\n    ) {\n      this._weighting = weighting;\n    }\n  }\n\n  /**\n   * Getter for _student_response. Should only be called during JSON export.\n   * @return {string}\n   */\n  get student_response(): string {\n    if (!this.jsonString) {\n      throw new Scorm12ValidationError(\n        scorm12_errors.WRITE_ONLY_ELEMENT as number,\n      );\n    }\n    return this._student_response;\n  }\n\n  /**\n   * Setter for _student_response\n   * @param {string} student_response\n   */\n  set student_response(student_response: string) {\n    if (check12ValidFormat(student_response, scorm12_regex.CMIFeedback, true)) {\n      this._student_response = student_response;\n    }\n  }\n\n  /**\n   * Getter for _result. Should only be called during JSON export.\n   * @return {string}\n   */\n  get result(): string {\n    if (!this.jsonString) {\n      throw new Scorm12ValidationError(\n        scorm12_errors.WRITE_ONLY_ELEMENT as number,\n      );\n    }\n    return this._result;\n  }\n\n  /**\n   * Setter for _result\n   * @param {string} result\n   */\n  set result(result: string) {\n    if (check12ValidFormat(result, scorm12_regex.CMIResult)) {\n      this._result = result;\n    }\n  }\n\n  /**\n   * Getter for _latency. Should only be called during JSON export.\n   * @return {string}\n   */\n  get latency(): string {\n    if (!this.jsonString) {\n      throw new Scorm12ValidationError(\n        scorm12_errors.WRITE_ONLY_ELEMENT as number,\n      );\n    }\n    return this._latency;\n  }\n\n  /**\n   * Setter for _latency\n   * @param {string} latency\n   */\n  set latency(latency: string) {\n    if (check12ValidFormat(latency, scorm12_regex.CMITimespan)) {\n      this._latency = latency;\n    }\n  }\n\n  /**\n   * toJSON for cmi.interactions.n\n   *\n   * @return {\n   *    {\n   *      id: string,\n   *      time: string,\n   *      type: string,\n   *      weighting: string,\n   *      student_response: string,\n   *      result: string,\n   *      latency: string,\n   *      objectives: CMIArray,\n   *      correct_responses: CMIArray\n   *    }\n   *  }\n   */\n  toJSON(): {\n    id: string;\n    time: string;\n    type: string;\n    weighting: string;\n    student_response: string;\n    result: string;\n    latency: string;\n    objectives: CMIArray;\n    correct_responses: CMIArray;\n  } {\n    this.jsonString = true;\n    const result = {\n      id: this.id,\n      time: this.time,\n      type: this.type,\n      weighting: this.weighting,\n      student_response: this.student_response,\n      result: this.result,\n      latency: this.latency,\n      objectives: this.objectives,\n      correct_responses: this.correct_responses,\n    };\n    delete this.jsonString;\n    return result;\n  }\n}\n\n/**\n * Class representing SCORM 1.2's cmi.interactions.n.objectives.n object\n * @extends BaseCMI\n */\nexport class CMIInteractionsObjectivesObject extends BaseCMI {\n  /**\n   * Constructor for cmi.interactions.n.objectives.n\n   */\n  constructor() {\n    super();\n  }\n\n  private _id = \"\";\n\n  /**\n   * Called when the API has been reset\n   */\n  reset(): void {\n    this._initialized = false;\n    this._id = \"\";\n  }\n\n  /**\n   * Getter for _id\n   * @return {string}\n   */\n  get id(): string {\n    return this._id;\n  }\n\n  /**\n   * Setter for _id\n   * @param {string} id\n   */\n  set id(id: string) {\n    if (check12ValidFormat(id, scorm12_regex.CMIIdentifier)) {\n      this._id = id;\n    }\n  }\n\n  /**\n   * toJSON for cmi.interactions.n.objectives.n\n   * @return {\n   *    {\n   *      id: string\n   *    }\n   *  }\n   */\n  toJSON(): {\n    id: string;\n  } {\n    this.jsonString = true;\n    const result = {\n      id: this.id,\n    };\n    delete this.jsonString;\n    return result;\n  }\n}\n\n/**\n * Class representing SCORM 1.2's cmi.interactions.correct_responses.n object\n * @extends BaseCMI\n */\nexport class CMIInteractionsCorrectResponsesObject extends BaseCMI {\n  /**\n   * Constructor for cmi.interactions.correct_responses.n\n   */\n  constructor() {\n    super();\n  }\n\n  private _pattern = \"\";\n\n  /**\n   * Called when the API has been reset\n   */\n  reset(): void {\n    this._initialized = false;\n    this._pattern = \"\";\n  }\n\n  /**\n   * Getter for _pattern\n   * @return {string}\n   */\n  get pattern(): string {\n    if (!this.jsonString) {\n      throw new Scorm12ValidationError(\n        scorm12_errors.WRITE_ONLY_ELEMENT as number,\n      );\n    }\n    return this._pattern;\n  }\n\n  /**\n   * Setter for _pattern\n   * @param {string} pattern\n   */\n  set pattern(pattern: string) {\n    if (check12ValidFormat(pattern, scorm12_regex.CMIFeedback, true)) {\n      this._pattern = pattern;\n    }\n  }\n\n  /**\n   * toJSON for cmi.interactions.correct_responses.n\n   * @return {\n   *    {\n   *      pattern: string\n   *    }\n   *  }\n   */\n  toJSON(): {\n    pattern: string;\n  } {\n    this.jsonString = true;\n    const result = {\n      pattern: this._pattern,\n    };\n    delete this.jsonString;\n    return result;\n  }\n}\n","import { BaseCMI } from \"../common/base_cmi\";\nimport { check12ValidFormat } from \"./validation\";\nimport { scorm12_regex } from \"../../constants/regex\";\n\n/**\n * Class for AICC Navigation object\n */\nexport class NAV extends BaseCMI {\n  /**\n   * Constructor for NAV object\n   */\n  constructor() {\n    super();\n  }\n\n  /**\n   * Called when the API has been reset\n   */\n  reset(): void {\n    this._event = \"\";\n    this._initialized = false;\n  }\n\n  private _event = \"\";\n\n  /**\n   * Getter for _event\n   * @return {string}\n   */\n  get event(): string {\n    return this._event;\n  }\n\n  /**\n   * Setter for _event\n   * @param {string} event\n   */\n  set event(event: string) {\n    if (check12ValidFormat(event, scorm12_regex.NAVEvent)) {\n      this._event = event;\n    }\n  }\n\n  /**\n   * toJSON for nav object\n   * @return {\n   *    {\n   *      event: string\n   *    }\n   *  }\n   */\n  toJSON(): {\n    event: string;\n  } {\n    this.jsonString = true;\n    const result = {\n      event: this.event,\n    };\n    delete this.jsonString;\n    return result;\n  }\n}\n","import { BaseCMI } from \"../common/base_cmi\";\nimport { CMIScore } from \"../common/score\";\nimport { scorm12_constants } from \"../../constants/api_constants\";\nimport { scorm12_regex } from \"../../constants/regex\";\nimport { scorm12_errors } from \"../../constants/error_codes\";\nimport { Scorm12ValidationError } from \"../../exceptions/scorm12_exceptions\";\nimport { check12ValidFormat } from \"./validation\";\nimport { CMIArray } from \"../common/array\";\n\n/**\n * Class representing SCORM 1.2's `cmi.objectives` object\n * @extends CMIArray\n */\nexport class CMIObjectives extends CMIArray {\n  /**\n   * Constructor for `cmi.objectives`\n   */\n  constructor() {\n    super({\n      children: scorm12_constants.objectives_children,\n      errorCode: scorm12_errors.INVALID_SET_VALUE as number,\n      errorClass: Scorm12ValidationError,\n    });\n  }\n}\n\n/**\n * Class representing SCORM 1.2's cmi.objectives.n object\n * @extends BaseCMI\n */\nexport class CMIObjectivesObject extends BaseCMI {\n  /**\n   * Constructor for cmi.objectives.n\n   */\n  constructor() {\n    super();\n    this.score = new CMIScore({\n      score_children: scorm12_constants.score_children,\n      score_range: scorm12_regex.score_range,\n      invalidErrorCode: scorm12_errors.INVALID_SET_VALUE as number,\n      invalidTypeCode: scorm12_errors.TYPE_MISMATCH as number,\n      invalidRangeCode: scorm12_errors.VALUE_OUT_OF_RANGE as number,\n      errorClass: Scorm12ValidationError,\n    });\n  }\n\n  public readonly score: CMIScore;\n\n  private _id = \"\";\n  private _status = \"\";\n\n  /**\n   * Called when the API has been reset\n   */\n  reset(): void {\n    this._initialized = false;\n    this._id = \"\";\n    this._status = \"\";\n    this.score?.reset();\n  }\n\n  /**\n   * Getter for _id\n   * @return {string}\n   */\n  get id(): string {\n    return this._id;\n  }\n\n  /**\n   * Setter for _id\n   * @param {string} id\n   */\n  set id(id: string) {\n    if (check12ValidFormat(id, scorm12_regex.CMIIdentifier)) {\n      this._id = id;\n    }\n  }\n\n  /**\n   * Getter for _status\n   * @return {string}\n   */\n  get status(): string {\n    return this._status;\n  }\n\n  /**\n   * Setter for _status\n   * @param {string} status\n   */\n  set status(status: string) {\n    if (check12ValidFormat(status, scorm12_regex.CMIStatus2)) {\n      this._status = status;\n    }\n  }\n\n  /**\n   * toJSON for cmi.objectives.n\n   * @return {\n   *    {\n   *      id: string,\n   *      status: string,\n   *      score: CMIScore\n   *    }\n   *  }\n   */\n  toJSON(): {\n    id: string;\n    status: string;\n    score: CMIScore;\n  } {\n    this.jsonString = true;\n    const result = {\n      id: this.id,\n      status: this.status,\n      score: this.score,\n    };\n    delete this.jsonString;\n    return result;\n  }\n}\n","import { BaseCMI } from \"../common/base_cmi\";\nimport { scorm12_constants } from \"../../constants/api_constants\";\nimport { Scorm12ValidationError } from \"../../exceptions/scorm12_exceptions\";\nimport { scorm12_errors } from \"../../constants/error_codes\";\n\n/**\n * Class representing the SCORM 1.2 cmi.student_data object\n * @extends BaseCMI\n */\nexport class CMIStudentData extends BaseCMI {\n  private readonly __children;\n  private _mastery_score = \"\";\n  private _max_time_allowed = \"\";\n  private _time_limit_action = \"\";\n\n  /**\n   * Constructor for cmi.student_data\n   * @param {string} student_data_children\n   */\n  constructor(student_data_children?: string) {\n    super();\n    this.__children = student_data_children\n      ? student_data_children\n      : scorm12_constants.student_data_children;\n  }\n\n  /**\n   * Called when the API has been reset\n   */\n  reset(): void {\n    this._initialized = false;\n  }\n\n  /**\n   * Getter for __children\n   * @return {string}\n   * @private\n   */\n  get _children(): string {\n    return this.__children;\n  }\n\n  /**\n   * Setter for __children. Just throws an error.\n   * @param {string} _children\n   * @private\n   */\n  set _children(_children: string) {\n    throw new Scorm12ValidationError(\n      scorm12_errors.INVALID_SET_VALUE as number,\n    );\n  }\n\n  /**\n   * Getter for _master_score\n   * @return {string}\n   */\n  get mastery_score(): string {\n    return this._mastery_score;\n  }\n\n  /**\n   * Setter for _master_score. Can only be called before  initialization.\n   * @param {string} mastery_score\n   */\n  set mastery_score(mastery_score: string) {\n    if (this.initialized) {\n      throw new Scorm12ValidationError(\n        scorm12_errors.READ_ONLY_ELEMENT as number,\n      );\n    } else {\n      this._mastery_score = mastery_score;\n    }\n  }\n\n  /**\n   * Getter for _max_time_allowed\n   * @return {string}\n   */\n  get max_time_allowed(): string {\n    return this._max_time_allowed;\n  }\n\n  /**\n   * Setter for _max_time_allowed. Can only be called before  initialization.\n   * @param {string} max_time_allowed\n   */\n  set max_time_allowed(max_time_allowed: string) {\n    if (this.initialized) {\n      throw new Scorm12ValidationError(\n        scorm12_errors.READ_ONLY_ELEMENT as number,\n      );\n    } else {\n      this._max_time_allowed = max_time_allowed;\n    }\n  }\n\n  /**\n   * Getter for _time_limit_action\n   * @return {string}\n   */\n  get time_limit_action(): string {\n    return this._time_limit_action;\n  }\n\n  /**\n   * Setter for _time_limit_action. Can only be called before  initialization.\n   * @param {string} time_limit_action\n   */\n  set time_limit_action(time_limit_action: string) {\n    if (this.initialized) {\n      throw new Scorm12ValidationError(\n        scorm12_errors.READ_ONLY_ELEMENT as number,\n      );\n    } else {\n      this._time_limit_action = time_limit_action;\n    }\n  }\n\n  /**\n   * toJSON for cmi.student_data\n   *\n   * @return {\n   *    {\n   *      max_time_allowed: string,\n   *      time_limit_action: string,\n   *      mastery_score: string\n   *    }\n   *  }\n   */\n  toJSON(): {\n    mastery_score: string;\n    max_time_allowed: string;\n    time_limit_action: string;\n  } {\n    this.jsonString = true;\n    const result = {\n      mastery_score: this.mastery_score,\n      max_time_allowed: this.max_time_allowed,\n      time_limit_action: this.time_limit_action,\n    };\n    delete this.jsonString;\n    return result;\n  }\n}\n","import { BaseCMI } from \"../common/base_cmi\";\nimport { scorm12_constants } from \"../../constants/api_constants\";\nimport { Scorm12ValidationError } from \"../../exceptions/scorm12_exceptions\";\nimport { check12ValidFormat, check12ValidRange } from \"./validation\";\nimport { scorm12_regex } from \"../../constants/regex\";\nimport { scorm12_errors } from \"../../constants/error_codes\";\n\n/**\n * Class representing the SCORM 1.2 cmi.student_preference object\n * @extends BaseCMI\n */\nexport class CMIStudentPreference extends BaseCMI {\n  private readonly __children;\n\n  /**\n   * Constructor for cmi.student_preference\n   * @param {string} student_preference_children\n   */\n  constructor(student_preference_children?: string) {\n    super();\n    this.__children = student_preference_children\n      ? student_preference_children\n      : scorm12_constants.student_preference_children;\n  }\n\n  private _audio = \"\";\n  private _language = \"\";\n  private _speed = \"\";\n  private _text = \"\";\n\n  /**\n   * Called when the API has been reset\n   */\n  reset(): void {\n    this._initialized = false;\n  }\n\n  /**\n   * Getter for __children\n   * @return {string}\n   * @private\n   */\n  get _children(): string {\n    return this.__children;\n  }\n\n  /**\n   * Setter for __children. Just throws an error.\n   * @param {string} _children\n   * @private\n   */\n  set _children(_children: string) {\n    throw new Scorm12ValidationError(\n      scorm12_errors.INVALID_SET_VALUE as number,\n    );\n  }\n\n  /**\n   * Getter for _audio\n   * @return {string}\n   */\n  get audio(): string {\n    return this._audio;\n  }\n\n  /**\n   * Setter for _audio\n   * @param {string} audio\n   */\n  set audio(audio: string) {\n    if (\n      check12ValidFormat(audio, scorm12_regex.CMISInteger) &&\n      check12ValidRange(audio, scorm12_regex.audio_range)\n    ) {\n      this._audio = audio;\n    }\n  }\n\n  /**\n   * Getter for _language\n   * @return {string}\n   */\n  get language(): string {\n    return this._language;\n  }\n\n  /**\n   * Setter for _language\n   * @param {string} language\n   */\n  set language(language: string) {\n    if (check12ValidFormat(language, scorm12_regex.CMIString256)) {\n      this._language = language;\n    }\n  }\n\n  /**\n   * Getter for _speed\n   * @return {string}\n   */\n  get speed(): string {\n    return this._speed;\n  }\n\n  /**\n   * Setter for _speed\n   * @param {string} speed\n   */\n  set speed(speed: string) {\n    if (\n      check12ValidFormat(speed, scorm12_regex.CMISInteger) &&\n      check12ValidRange(speed, scorm12_regex.speed_range)\n    ) {\n      this._speed = speed;\n    }\n  }\n\n  /**\n   * Getter for _text\n   * @return {string}\n   */\n  get text(): string {\n    return this._text;\n  }\n\n  /**\n   * Setter for _text\n   * @param {string} text\n   */\n  set text(text: string) {\n    if (\n      check12ValidFormat(text, scorm12_regex.CMISInteger) &&\n      check12ValidRange(text, scorm12_regex.text_range)\n    ) {\n      this._text = text;\n    }\n  }\n\n  /**\n   * toJSON for cmi.student_preference\n   *\n   * @return {\n   *    {\n   *      audio: string,\n   *      language: string,\n   *      speed: string,\n   *      text: string\n   *    }\n   *  }\n   */\n  toJSON(): {\n    audio: string;\n    language: string;\n    speed: string;\n    text: string;\n  } {\n    this.jsonString = true;\n    const result = {\n      audio: this.audio,\n      language: this.language,\n      speed: this.speed,\n      text: this.text,\n    };\n    delete this.jsonString;\n    return result;\n  }\n}\n","import { checkValidFormat, checkValidRange } from \"../common/validation\";\nimport { scorm12_errors } from \"../../constants/error_codes\";\nimport { Scorm12ValidationError } from \"../../exceptions/scorm12_exceptions\";\n\n/**\n * Helper method, no reason to have to pass the same error codes every time\n * @param {string} value\n * @param {string} regexPattern\n * @param {boolean} allowEmptyString\n * @return {boolean}\n */\nexport function check12ValidFormat(\n  value: string,\n  regexPattern: string,\n  allowEmptyString?: boolean,\n): boolean {\n  return checkValidFormat(\n    value,\n    regexPattern,\n    scorm12_errors.TYPE_MISMATCH as number,\n    Scorm12ValidationError,\n    allowEmptyString,\n  );\n}\n\n/**\n * Helper method, no reason to have to pass the same error codes every time\n * @param {string} value\n * @param {string} rangePattern\n * @param {boolean} allowEmptyString\n * @return {boolean}\n */\nexport function check12ValidRange(\n  value: any,\n  rangePattern: string,\n  allowEmptyString?: boolean,\n): boolean {\n  if (!allowEmptyString && value === \"\") {\n    throw new Scorm12ValidationError(\n      scorm12_errors.VALUE_OUT_OF_RANGE as number,\n    );\n  }\n\n  return checkValidRange(\n    value,\n    rangePattern,\n    scorm12_errors.VALUE_OUT_OF_RANGE as number,\n    Scorm12ValidationError,\n  );\n}\n","interface ErrorDescription {\n  basicMessage: string;\n  detailMessage: string;\n}\n\ninterface ErrorDescriptions {\n  [key: string]: ErrorDescription;\n}\n\ninterface ScormConstants {\n  cmi_children: string;\n  core_children: string;\n  score_children: string;\n  comments_children: string;\n  objectives_children: string;\n  correct_responses_children: string;\n  student_data_children: string;\n  student_preference_children: string;\n  interactions_children: string;\n  error_descriptions: ErrorDescriptions;\n}\n\ninterface AiccConstants extends ScormConstants {\n  student_demographics_children: string;\n  tries_children: string;\n  attempt_records_children: string;\n  paths_children: string;\n}\n\ninterface Scorm2004Constants {\n  cmi_children: string;\n  comments_children: string;\n  score_children: string;\n  objectives_children: string;\n  correct_responses_children: string;\n  student_data_children: string;\n  student_preference_children: string;\n  interactions_children: string;\n  adl_data_children: string;\n  error_descriptions: ErrorDescriptions;\n}\n\ninterface GlobalConstants {\n  SCORM_TRUE: string;\n  SCORM_FALSE: string;\n  STATE_NOT_INITIALIZED: number;\n  STATE_INITIALIZED: number;\n  STATE_TERMINATED: number;\n}\n\nexport const global_constants: GlobalConstants = {\n  SCORM_TRUE: \"true\",\n  SCORM_FALSE: \"false\",\n  STATE_NOT_INITIALIZED: 0,\n  STATE_INITIALIZED: 1,\n  STATE_TERMINATED: 2,\n};\n\nexport const scorm12_constants: ScormConstants = {\n  // Children lists\n  cmi_children:\n    \"core,suspend_data,launch_data,comments,objectives,student_data,student_preference,interactions\",\n  core_children:\n    \"student_id,student_name,lesson_location,credit,lesson_status,entry,score,total_time,lesson_mode,exit,session_time\",\n  score_children: \"raw,min,max\",\n  comments_children: \"content,location,time\",\n  objectives_children: \"id,score,status\",\n  correct_responses_children: \"pattern\",\n  student_data_children: \"mastery_score,max_time_allowed,time_limit_action\",\n  student_preference_children: \"audio,language,speed,text\",\n  interactions_children:\n    \"id,objectives,time,type,correct_responses,weighting,student_response,result,latency\",\n  error_descriptions: {\n    \"101\": {\n      basicMessage: \"General Exception\",\n      detailMessage:\n        \"No specific error code exists to describe the error. Use LMSGetDiagnostic for more information\",\n    },\n    \"201\": {\n      basicMessage: \"Invalid argument error\",\n      detailMessage:\n        \"Indicates that an argument represents an invalid data model element or is otherwise incorrect.\",\n    },\n    \"202\": {\n      basicMessage: \"Element cannot have children\",\n      detailMessage:\n        'Indicates that LMSGetValue was called with a data model element name that ends in \"_children\" for a data model element that does not support the \"_children\" suffix.',\n    },\n    \"203\": {\n      basicMessage: \"Element not an array - cannot have count\",\n      detailMessage:\n        'Indicates that LMSGetValue was called with a data model element name that ends in \"_count\" for a data model element that does not support the \"_count\" suffix.',\n    },\n    \"301\": {\n      basicMessage: \"Not initialized\",\n      detailMessage:\n        \"Indicates that an API call was made before the call to lmsInitialize.\",\n    },\n    \"401\": {\n      basicMessage: \"Not implemented error\",\n      detailMessage:\n        \"The data model element indicated in a call to LMSGetValue or LMSSetValue is valid, but was not implemented by this LMS. SCORM 1.2 defines a set of data model elements as being optional for an LMS to implement.\",\n    },\n    \"402\": {\n      basicMessage: \"Invalid set value, element is a keyword\",\n      detailMessage:\n        'Indicates that LMSSetValue was called on a data model element that represents a keyword (elements that end in \"_children\" and \"_count\").',\n    },\n    \"403\": {\n      basicMessage: \"Element is read only\",\n      detailMessage:\n        \"LMSSetValue was called with a data model element that can only be read.\",\n    },\n    \"404\": {\n      basicMessage: \"Element is write only\",\n      detailMessage:\n        \"LMSGetValue was called on a data model element that can only be written to.\",\n    },\n    \"405\": {\n      basicMessage: \"Incorrect Data Type\",\n      detailMessage:\n        \"LMSSetValue was called with a value that is not consistent with the data format of the supplied data model element.\",\n    },\n    \"407\": {\n      basicMessage: \"Element Value Out Of Range\",\n      detailMessage:\n        \"The numeric value supplied to a LMSSetValue call is outside of the numeric range allowed for the supplied data model element.\",\n    },\n    \"408\": {\n      basicMessage: \"Data Model Dependency Not Established\",\n      detailMessage:\n        \"Some data model elements cannot be set until another data model element was set. This error condition indicates that the prerequisite element was not set before the dependent element.\",\n    },\n  },\n};\nexport const aicc_constants: AiccConstants = {\n  ...scorm12_constants,\n  ...{\n    cmi_children:\n      \"core,suspend_data,launch_data,comments,objectives,student_data,student_preference,interactions,evaluation\",\n    student_preference_children:\n      \"audio,language,lesson_type,speed,text,text_color,text_location,text_size,video,windows\",\n    student_data_children:\n      \"attempt_number,tries,mastery_score,max_time_allowed,time_limit_action\",\n    student_demographics_children:\n      \"city,class,company,country,experience,familiar_name,instructor_name,title,native_language,state,street_address,telephone,years_experience\",\n    tries_children: \"time,status,score\",\n    attempt_records_children: \"score,lesson_status\",\n    paths_children: \"location_id,date,time,status,why_left,time_in_element\",\n  },\n};\n\nexport const scorm2004_constants: Scorm2004Constants = {\n  // Children lists\n  cmi_children:\n    \"_version,comments_from_learner,comments_from_lms,completion_status,credit,entry,exit,interactions,launch_data,learner_id,learner_name,learner_preference,location,max_time_allowed,mode,objectives,progress_measure,scaled_passing_score,score,session_time,success_status,suspend_data,time_limit_action,total_time\",\n  comments_children: \"comment,timestamp,location\",\n  score_children: \"max,raw,scaled,min\",\n  objectives_children:\n    \"progress_measure,completion_status,success_status,description,score,id\",\n  correct_responses_children: \"pattern\",\n  student_data_children: \"mastery_score,max_time_allowed,time_limit_action\",\n  student_preference_children:\n    \"audio_level,audio_captioning,delivery_speed,language\",\n  interactions_children:\n    \"id,type,objectives,timestamp,correct_responses,weighting,learner_response,result,latency,description\",\n  adl_data_children: \"id,store\",\n  error_descriptions: {\n    \"0\": {\n      basicMessage: \"No Error\",\n      detailMessage: \"No error occurred, the previous API call was successful.\",\n    },\n    \"101\": {\n      basicMessage: \"General Exception\",\n      detailMessage:\n        \"No specific error code exists to describe the error. Use GetDiagnostic for more information.\",\n    },\n    \"102\": {\n      basicMessage: \"General Initialization Failure\",\n      detailMessage: \"Call to Initialize failed for an unknown reason.\",\n    },\n    \"103\": {\n      basicMessage: \"Already Initialized\",\n      detailMessage:\n        \"Call to Initialize failed because Initialize was already called.\",\n    },\n    \"104\": {\n      basicMessage: \"Content Instance Terminated\",\n      detailMessage:\n        \"Call to Initialize failed because Terminate was already called.\",\n    },\n    \"111\": {\n      basicMessage: \"General Termination Failure\",\n      detailMessage: \"Call to Terminate failed for an unknown reason.\",\n    },\n    \"112\": {\n      basicMessage: \"Termination Before Initialization\",\n      detailMessage:\n        \"Call to Terminate failed because it was made before the call to Initialize.\",\n    },\n    \"113\": {\n      basicMessage: \"Termination After Termination\",\n      detailMessage:\n        \"Call to Terminate failed because Terminate was already called.\",\n    },\n    \"122\": {\n      basicMessage: \"Retrieve Data Before Initialization\",\n      detailMessage:\n        \"Call to GetValue failed because it was made before the call to Initialize.\",\n    },\n    \"123\": {\n      basicMessage: \"Retrieve Data After Termination\",\n      detailMessage:\n        \"Call to GetValue failed because it was made after the call to Terminate.\",\n    },\n    \"132\": {\n      basicMessage: \"Store Data Before Initialization\",\n      detailMessage:\n        \"Call to SetValue failed because it was made before the call to Initialize.\",\n    },\n    \"133\": {\n      basicMessage: \"Store Data After Termination\",\n      detailMessage:\n        \"Call to SetValue failed because it was made after the call to Terminate.\",\n    },\n    \"142\": {\n      basicMessage: \"Commit Before Initialization\",\n      detailMessage:\n        \"Call to Commit failed because it was made before the call to Initialize.\",\n    },\n    \"143\": {\n      basicMessage: \"Commit After Termination\",\n      detailMessage:\n        \"Call to Commit failed because it was made after the call to Terminate.\",\n    },\n    \"201\": {\n      basicMessage: \"General Argument Error\",\n      detailMessage:\n        \"An invalid argument was passed to an API method (usually indicates that Initialize, Commit or Terminate did not receive the expected empty string argument.\",\n    },\n    \"301\": {\n      basicMessage: \"General Get Failure\",\n      detailMessage:\n        \"Indicates a failed GetValue call where no other specific error code is applicable. Use GetDiagnostic for more information.\",\n    },\n    \"351\": {\n      basicMessage: \"General Set Failure\",\n      detailMessage:\n        \"Indicates a failed SetValue call where no other specific error code is applicable. Use GetDiagnostic for more information.\",\n    },\n    \"391\": {\n      basicMessage: \"General Commit Failure\",\n      detailMessage:\n        \"Indicates a failed Commit call where no other specific error code is applicable. Use GetDiagnostic for more information.\",\n    },\n    \"401\": {\n      basicMessage: \"Undefined Data Model Element\",\n      detailMessage:\n        \"The data model element name passed to GetValue or SetValue is not a valid SCORM data model element.\",\n    },\n    \"402\": {\n      basicMessage: \"Unimplemented Data Model Element\",\n      detailMessage:\n        \"The data model element indicated in a call to GetValue or SetValue is valid, but was not implemented by this LMS. In SCORM 2004, this error would indicate an LMS that is not fully SCORM conformant.\",\n    },\n    \"403\": {\n      basicMessage: \"Data Model Element Value Not Initialized\",\n      detailMessage:\n        \"Attempt to read a data model element that has not been initialized by the LMS or through a SetValue call. This error condition is often reached during normal execution of a SCO.\",\n    },\n    \"404\": {\n      basicMessage: \"Data Model Element Is Read Only\",\n      detailMessage:\n        \"SetValue was called with a data model element that can only be read.\",\n    },\n    \"405\": {\n      basicMessage: \"Data Model Element Is Write Only\",\n      detailMessage:\n        \"GetValue was called on a data model element that can only be written to.\",\n    },\n    \"406\": {\n      basicMessage: \"Data Model Element Type Mismatch\",\n      detailMessage:\n        \"SetValue was called with a value that is not consistent with the data format of the supplied data model element.\",\n    },\n    \"407\": {\n      basicMessage: \"Data Model Element Value Out Of Range\",\n      detailMessage:\n        \"The numeric value supplied to a SetValue call is outside of the numeric range allowed for the supplied data model element.\",\n    },\n    \"408\": {\n      basicMessage: \"Data Model Dependency Not Established\",\n      detailMessage:\n        \"Some data model elements cannot be set until another data model element was set. This error condition indicates that the prerequisite element was not set before the dependent element.\",\n    },\n  },\n};\n","export enum NAVBoolean {\n  unknown = \"unknown\",\n  true = \"true\",\n  false = \"false\",\n}\n\nexport enum SuccessStatus {\n  passed = \"passed\",\n  failed = \"failed\",\n  unknown = \"unknown\",\n}\n\nexport enum CompletionStatus {\n  completed = \"completed\",\n  incomplete = \"incomplete\",\n  unknown = \"unknown\",\n}\n\nexport enum LogLevelEnum {\n  _,\n  DEBUG,\n  INFO,\n  WARN,\n  ERROR,\n  NONE,\n}\n","export type ErrorCode = {\n  [key: string]: number;\n};\n\nexport const global_errors: ErrorCode = {\n  GENERAL: 101,\n  INITIALIZATION_FAILED: 101,\n  INITIALIZED: 101,\n  TERMINATED: 101,\n  TERMINATION_FAILURE: 101,\n  TERMINATION_BEFORE_INIT: 101,\n  MULTIPLE_TERMINATION: 101,\n  RETRIEVE_BEFORE_INIT: 101,\n  RETRIEVE_AFTER_TERM: 101,\n  STORE_BEFORE_INIT: 101,\n  STORE_AFTER_TERM: 101,\n  COMMIT_BEFORE_INIT: 101,\n  COMMIT_AFTER_TERM: 101,\n  ARGUMENT_ERROR: 101,\n  CHILDREN_ERROR: 101,\n  COUNT_ERROR: 101,\n  GENERAL_GET_FAILURE: 101,\n  GENERAL_SET_FAILURE: 101,\n  GENERAL_COMMIT_FAILURE: 101,\n  UNDEFINED_DATA_MODEL: 101,\n  UNIMPLEMENTED_ELEMENT: 101,\n  VALUE_NOT_INITIALIZED: 101,\n  INVALID_SET_VALUE: 101,\n  READ_ONLY_ELEMENT: 101,\n  WRITE_ONLY_ELEMENT: 101,\n  TYPE_MISMATCH: 101,\n  VALUE_OUT_OF_RANGE: 101,\n  DEPENDENCY_NOT_ESTABLISHED: 101,\n};\n\nexport const scorm12_errors: ErrorCode = {\n  ...global_errors,\n  RETRIEVE_BEFORE_INIT: 301,\n  STORE_BEFORE_INIT: 301,\n  COMMIT_BEFORE_INIT: 301,\n  ARGUMENT_ERROR: 201,\n  CHILDREN_ERROR: 202,\n  COUNT_ERROR: 203,\n  UNDEFINED_DATA_MODEL: 401,\n  UNIMPLEMENTED_ELEMENT: 401,\n  VALUE_NOT_INITIALIZED: 301,\n  INVALID_SET_VALUE: 402,\n  READ_ONLY_ELEMENT: 403,\n  WRITE_ONLY_ELEMENT: 404,\n  TYPE_MISMATCH: 405,\n  VALUE_OUT_OF_RANGE: 407,\n  DEPENDENCY_NOT_ESTABLISHED: 408,\n};\n\nexport const scorm2004_errors: ErrorCode = {\n  ...global_errors,\n  INITIALIZATION_FAILED: 102,\n  INITIALIZED: 103,\n  TERMINATED: 104,\n  TERMINATION_FAILURE: 111,\n  TERMINATION_BEFORE_INIT: 112,\n  MULTIPLE_TERMINATIONS: 113,\n  RETRIEVE_BEFORE_INIT: 122,\n  RETRIEVE_AFTER_TERM: 123,\n  STORE_BEFORE_INIT: 132,\n  STORE_AFTER_TERM: 133,\n  COMMIT_BEFORE_INIT: 142,\n  COMMIT_AFTER_TERM: 143,\n  ARGUMENT_ERROR: 201,\n  GENERAL_GET_FAILURE: 301,\n  GENERAL_SET_FAILURE: 351,\n  GENERAL_COMMIT_FAILURE: 391,\n  UNDEFINED_DATA_MODEL: 401,\n  UNIMPLEMENTED_ELEMENT: 402,\n  VALUE_NOT_INITIALIZED: 403,\n  READ_ONLY_ELEMENT: 404,\n  WRITE_ONLY_ELEMENT: 405,\n  TYPE_MISMATCH: 406,\n  VALUE_OUT_OF_RANGE: 407,\n  DEPENDENCY_NOT_ESTABLISHED: 408,\n};\n","export const scorm12_regex = {\n  CMIString256: \"^.{0,255}$\",\n  CMIString4096: \"^.{0,4096}$\",\n  CMITime: \"^(?:[01]\\\\d|2[0123]):(?:[012345]\\\\d):(?:[012345]\\\\d)$\",\n  CMITimespan: \"^([0-9]{2,}):([0-9]{2}):([0-9]{2})(.[0-9]{1,2})?$\",\n\n  CMIInteger: \"^\\\\d+$\",\n  CMISInteger: \"^-?([0-9]+)$\",\n  CMIDecimal: \"^-?([0-9]{0,3})(.[0-9]*)?$\",\n\n  CMIIdentifier: \"^[\\\\u0021-\\\\u007E\\\\s]{0,255}$\",\n  // Allow storing larger responses for interactions\n  // Some content packages may exceed the 255 character limit\n  // defined in the SCORM 1.2 specification.  The previous\n  // expression truncated these values which resulted in\n  // a \"101: General Exception\" being thrown when long\n  // answers were supplied.  To support these packages we\n  // relax the limitation and accept any length string.\n  CMIFeedback: \"^.*$\",\n  // This must be redefined\n  CMIIndex: \"[._](\\\\d+).\",\n  // Vocabulary Data Type Definition\n  CMIStatus: \"^(passed|completed|failed|incomplete|browsed)$\",\n  CMIStatus2: \"^(passed|completed|failed|incomplete|browsed|not attempted)$\",\n  CMIExit: \"^(time-out|suspend|logout|)$\",\n  CMIType:\n    \"^(true-false|choice|fill-in|matching|performance|sequencing|likert|numeric)$\",\n  CMIResult:\n    \"^(correct|wrong|unanticipated|neutral|([0-9]{0,3})?(\\\\.[0-9]*)?)$\",\n  NAVEvent: \"^(previous|continue)$\",\n  // Data ranges\n  score_range: \"0#100\",\n  audio_range: \"-1#100\",\n  speed_range: \"-100#100\",\n  weighting_range: \"-100#100\",\n  text_range: \"-1#1\",\n};\nexport const aicc_regex = {\n  ...scorm12_regex,\n  ...{\n    CMIIdentifier: \"^\\\\w{1,255}$\",\n  },\n};\nexport const scorm2004_regex = {\n  CMIString200: \"^[\\\\u0000-\\\\uFFFF]{0,200}$\",\n  CMIString250: \"^[\\\\u0000-\\\\uFFFF]{0,250}$\",\n  CMIString1000: \"^[\\\\u0000-\\\\uFFFF]{0,1000}$\",\n  CMIString4000: \"^[\\\\u0000-\\\\uFFFF]{0,4000}$\",\n  CMIString64000: \"^[\\\\u0000-\\\\uFFFF]{0,64000}$\",\n  CMILang: \"^([a-zA-Z]{2,3}|i|x)(-[a-zA-Z0-9-]{2,8})?$|^$\",\n\n  CMILangString250:\n    \"^({lang=([a-zA-Z]{2,3}|i|x)(-[a-zA-Z0-9-]{2,8})?})?((?!{.*$).{0,250}$)?$\",\n\n  CMILangcr: \"^(({lang=([a-zA-Z]{2,3}|i|x)?(-[a-zA-Z0-9-]{2,8})?}))(.*?)$\",\n\n  CMILangString250cr:\n    \"^(({lang=([a-zA-Z]{2,3}|i|x)?(-[a-zA-Z0-9-]{2,8})?})?(.{0,250})?)?$\",\n\n  CMILangString4000:\n    \"^({lang=([a-zA-Z]{2,3}|i|x)(-[a-zA-Z0-9-]{2,8})?})?((?!{.*$).{0,4000}$)?$\",\n\n  CMITime:\n    \"^(19[7-9]{1}[0-9]{1}|20[0-2]{1}[0-9]{1}|203[0-8]{1})((-(0[1-9]{1}|1[0-2]{1}))((-(0[1-9]{1}|[1-2]{1}[0-9]{1}|3[0-1]{1}))(T([0-1]{1}[0-9]{1}|2[0-3]{1})((:[0-5]{1}[0-9]{1})((:[0-5]{1}[0-9]{1})((\\\\.[0-9]{1,2})((Z|([+|-]([0-1]{1}[0-9]{1}|2[0-3]{1})))(:[0-5]{1}[0-9]{1})?)?)?)?)?)?)?)?$\",\n  CMITimespan:\n    \"^P(?:([.,\\\\d]+)Y)?(?:([.,\\\\d]+)M)?(?:([.,\\\\d]+)W)?(?:([.,\\\\d]+)D)?(?:T?(?:([.,\\\\d]+)H)?(?:([.,\\\\d]+)M)?(?:([.,\\\\d]+)S)?)?$\",\n  CMIInteger: \"^\\\\d+$\",\n  CMISInteger: \"^-?([0-9]+)$\",\n  CMIDecimal: \"^-?([0-9]{1,5})(\\\\.[0-9]{1,18})?$\",\n  CMIIdentifier: \"^\\\\S{1,250}[a-zA-Z0-9]$\",\n  CMIShortIdentifier: \"^[\\\\w\\\\.\\\\-\\\\_]{1,250}$\",\n  CMILongIdentifier:\n    \"^(?:(?!urn:)\\\\S{1,4000}|urn:[A-Za-z0-9-]{1,31}:\\\\S{1,4000}|.{1,4000})$\",\n  // need to re-examine this\n  CMIFeedback: \"^.*$\",\n  // This must be redefined\n  CMIIndex: \"[._](\\\\d+).\",\n  CMIIndexStore: \".N(\\\\d+).\",\n  // Vocabulary Data Type Definition\n  CMICStatus: \"^(completed|incomplete|not attempted|unknown)$\",\n  CMISStatus: \"^(passed|failed|unknown)$\",\n  CMIExit: \"^(time-out|suspend|logout|normal)$\",\n  CMIType:\n    \"^(true-false|choice|fill-in|long-fill-in|matching|performance|sequencing|likert|numeric|other)$\",\n  CMIResult:\n    \"^(correct|incorrect|unanticipated|neutral|-?([0-9]{1,4})(\\\\.[0-9]{1,18})?)$\",\n  NAVEvent:\n    \"^(previous|continue|exit|exitAll|abandon|abandonAll|suspendAll|_none_|(\\\\{target=(?<choice_target>\\\\S{0,}[a-zA-Z0-9-_]+)})?choice|(\\\\{target=(?<jump_target>\\\\S{0,}[a-zA-Z0-9-_]+)})?jump)$\",\n\n  NAVBoolean: \"^(unknown|true|false$)\",\n  NAVTarget: \"^{target=\\\\S{0,}[a-zA-Z0-9-_]+}$\",\n  // Data ranges\n  scaled_range: \"-1#1\",\n  audio_range: \"0#*\",\n  speed_range: \"0#*\",\n  text_range: \"-1#1\",\n  progress_range: \"0#1\",\n};\n","type APIError = {\n  errorCode: number;\n  errorMessage: string;\n  detailedMessage: string;\n};\n\nexport class BaseScormValidationError extends Error {\n  constructor(errorCode: number) {\n    super(errorCode.toString());\n    this._errorCode = errorCode;\n    this.name = \"ScormValidationError\";\n  }\n\n  private readonly _errorCode: number;\n\n  /**\n   * Getter for _errorCode\n   * @return {number}\n   */\n  get errorCode(): number {\n    return this._errorCode;\n  }\n}\n\n/**\n * Base Validation Exception\n */\nexport class ValidationError\n  extends BaseScormValidationError\n  implements APIError\n{\n  /**\n   * Constructor to take in an error message and code\n   * @param {number} errorCode\n   * @param {string} errorMessage\n   * @param {string} detailedMessage\n   */\n  constructor(\n    errorCode: number,\n    errorMessage: string,\n    detailedMessage?: string,\n  ) {\n    super(errorCode);\n    this.message = errorMessage;\n    this._errorMessage = errorMessage;\n    if (detailedMessage) {\n      this._detailedMessage = detailedMessage;\n    }\n  }\n\n  private readonly _errorMessage: string;\n  private readonly _detailedMessage: string = \"\";\n\n  /**\n   * Getter for _errorMessage\n   * @return {string}\n   */\n  get errorMessage(): string {\n    return this._errorMessage;\n  }\n\n  /**\n   * Getter for _detailedMessage\n   * @return {string}\n   */\n  get detailedMessage(): string {\n    return this._detailedMessage;\n  }\n}\n","import { ValidationError } from \"../exceptions\";\nimport { scorm12_constants } from \"../constants/api_constants\";\n\nconst scorm12_errors = scorm12_constants.error_descriptions;\n\n/**\n * SCORM 1.2 Validation Error\n */\nexport class Scorm12ValidationError extends ValidationError {\n  /**\n   * Constructor to take in an error code\n   * @param {number} errorCode\n   */\n  constructor(errorCode: number) {\n    if ({}.hasOwnProperty.call(scorm12_errors, String(errorCode))) {\n      super(\n        errorCode,\n        scorm12_errors[String(errorCode)]?.basicMessage || \"Unknown error\",\n        scorm12_errors[String(errorCode)]?.detailMessage,\n      );\n    } else {\n      super(\n        101,\n        scorm12_errors[\"101\"]?.basicMessage ?? \"General error\",\n        scorm12_errors[\"101\"]?.detailMessage,\n      );\n    }\n  }\n}\n","export const SECONDS_PER_SECOND = 1.0;\nexport const SECONDS_PER_MINUTE = 60;\nexport const SECONDS_PER_HOUR = 60 * SECONDS_PER_MINUTE;\nexport const SECONDS_PER_DAY = 24 * SECONDS_PER_HOUR;\n\ntype Designation = {\n  [key: string]: number;\n};\n\ntype StringKeyMap = {\n  [key: string]: any;\n};\n\nconst designations: Designation = {\n  D: SECONDS_PER_DAY,\n  H: SECONDS_PER_HOUR,\n  M: SECONDS_PER_MINUTE,\n  S: SECONDS_PER_SECOND,\n};\n\n/**\n * Converts a Number to a String of HH:MM:SS\n *\n * @param {number} totalSeconds\n * @return {string}\n */\nexport function getSecondsAsHHMMSS(totalSeconds: number | null): string {\n  // SCORM spec does not deal with negative durations, give zero back\n  if (!totalSeconds || totalSeconds <= 0) {\n    return \"00:00:00\";\n  }\n\n  const hours = Math.floor(totalSeconds / SECONDS_PER_HOUR);\n  const dateObj = new Date(totalSeconds * 1000);\n  const minutes = dateObj.getUTCMinutes();\n  // make sure we add any possible decimal value\n  const seconds = dateObj.getSeconds();\n  const ms = totalSeconds % 1.0;\n  let msStr = \"\";\n\n  if (countDecimals(ms) > 0) {\n    if (countDecimals(ms) > 2) {\n      msStr = ms.toFixed(2);\n    } else {\n      msStr = String(ms);\n    }\n\n    msStr = \".\" + msStr.split(\".\")[1];\n  }\n\n  return (\n    (hours + \":\" + minutes + \":\" + seconds).replace(/\\b\\d\\b/g, \"0$&\") + msStr\n  );\n}\n\n/**\n * Calculate the number of seconds from ISO 8601 Duration\n *\n * @param {number} seconds\n * @return {string}\n */\nexport function getSecondsAsISODuration(seconds: number | null): string {\n  // SCORM spec does not deal with negative durations, give zero back\n  if (!seconds || seconds <= 0) {\n    return \"PT0S\";\n  }\n\n  let duration = \"P\";\n  let remainder = seconds;\n  for (const designationsKey in designations) {\n    const current_seconds = designations[designationsKey] || 1;\n    let value = Math.floor(remainder / current_seconds);\n    remainder = remainder % current_seconds;\n\n    if (countDecimals(remainder) > 2) {\n      remainder = Number(Number(remainder).toFixed(2));\n    }\n\n    // If we have anything left in the remainder, and we're currently adding\n    // seconds to the duration, go ahead and add the decimal to the seconds\n    if (designationsKey === \"S\" && remainder > 0) {\n      value += remainder;\n    }\n\n    if (value) {\n      if (\n        (duration.indexOf(\"D\") > 0 ||\n          designationsKey === \"H\" ||\n          designationsKey === \"M\" ||\n          designationsKey === \"S\") &&\n        duration.indexOf(\"T\") === -1\n      ) {\n        duration += \"T\";\n      }\n\n      duration += `${value}${designationsKey}`;\n    }\n  }\n  return duration;\n}\n\n/**\n * Calculate the number of seconds from HH:MM:SS.DDDDDD\n *\n * @param {string} timeString\n * @param {RegExp} timeRegex\n * @return {number}\n */\nexport function getTimeAsSeconds(\n  timeString: string | number | boolean | null,\n  timeRegex: RegExp | string,\n): number {\n  if (typeof timeString === \"number\" || typeof timeString === \"boolean\") {\n    timeString = String(timeString);\n  }\n  if (typeof timeRegex === \"string\") {\n    timeRegex = new RegExp(timeRegex);\n  }\n  if (!timeString || !timeString.match(timeRegex)) {\n    return 0;\n  }\n\n  const parts = timeString.split(\":\");\n  const hours = Number(parts[0]);\n  const minutes = Number(parts[1]);\n  const seconds = Number(parts[2]);\n  return hours * 3600 + minutes * 60 + seconds;\n}\n\n/**\n * Calculate the number of seconds from ISO 8601 Duration\n *\n * @param {string} duration\n * @param {RegExp} durationRegex\n * @return {number}\n */\nexport function getDurationAsSeconds(\n  duration: string | null,\n  durationRegex: RegExp | string,\n): number {\n  if (typeof durationRegex === \"string\") {\n    durationRegex = new RegExp(durationRegex);\n  }\n\n  if (!duration || !duration.match(durationRegex)) {\n    return 0;\n  }\n\n  const [, years, _, , days, hours, minutes, seconds] =\n    new RegExp(durationRegex).exec(duration) || [];\n  let result = 0.0;\n  result += Number(seconds) || 0.0;\n  result += Number(minutes) * 60.0 || 0.0;\n  result += Number(hours) * 3600.0 || 0.0;\n  result += Number(days) * (60 * 60 * 24.0) || 0.0;\n  result += Number(years) * (60 * 60 * 24 * 365.0) || 0.0;\n  return result;\n}\n\n/**\n * Adds together two ISO8601 Duration strings\n *\n * @param {string} first\n * @param {string} second\n * @param {RegExp|string} durationRegex\n * @return {string}\n */\nexport function addTwoDurations(\n  first: string,\n  second: string,\n  durationRegex: RegExp | string,\n): string {\n  const regex: RegExp =\n    typeof durationRegex === \"string\"\n      ? new RegExp(durationRegex)\n      : durationRegex;\n  return getSecondsAsISODuration(\n    getDurationAsSeconds(first, regex) + getDurationAsSeconds(second, regex),\n  );\n}\n\n/**\n * Add together two HH:MM:SS.DD strings\n *\n * @param {string} first\n * @param {string} second\n * @param {RegExp} timeRegex\n * @return {string}\n */\nexport function addHHMMSSTimeStrings(\n  first: string,\n  second: string,\n  timeRegex: RegExp | string,\n): string {\n  if (typeof timeRegex === \"string\") {\n    timeRegex = new RegExp(timeRegex);\n  }\n  return getSecondsAsHHMMSS(\n    getTimeAsSeconds(first, timeRegex) + getTimeAsSeconds(second, timeRegex),\n  );\n}\n\n/**\n * Flatten a JSON object down to string paths for each values\n * @param {object} data\n * @return {object}\n */\nexport function flatten(data: StringKeyMap): object {\n  const result: StringKeyMap = {};\n\n  /**\n   * Recurse through the object\n   * @param {*} cur\n   * @param {*} prop\n   */\n  function recurse(cur: any, prop: any) {\n    if (Object(cur) !== cur) {\n      result[prop] = cur;\n    } else if (Array.isArray(cur)) {\n      for (let i = 0, l = cur.length; i < l; i++) {\n        recurse(cur[i], prop + \"[\" + i + \"]\");\n        if (l === 0) result[prop] = [];\n      }\n    } else {\n      let isEmpty = true;\n\n      for (const p in cur) {\n        if ({}.hasOwnProperty.call(cur, p)) {\n          isEmpty = false;\n          recurse(cur[p], prop ? prop + \".\" + p : p);\n        }\n      }\n\n      if (isEmpty && prop) result[prop] = {};\n    }\n  }\n\n  recurse(data, \"\");\n  return result;\n}\n\n/**\n * Un-flatten a flat JSON object\n * @param {object} data\n * @return {object}\n */\nexport function unflatten(data: StringKeyMap): object {\n  \"use strict\";\n\n  if (Object(data) !== data || Array.isArray(data)) return data;\n  const regex = /\\.?([^.[\\]]+)|\\[(\\d+)]/g;\n  const result: StringKeyMap = {};\n\n  for (const p in data) {\n    if ({}.hasOwnProperty.call(data, p)) {\n      let cur = result;\n      let prop = \"\";\n      let m = regex.exec(p);\n\n      while (m) {\n        cur = cur[prop] || (cur[prop] = m[2] ? [] : {});\n        prop = m[2] || m[1] || \"\";\n        m = regex.exec(p);\n      }\n\n      cur[prop] = data[p];\n    }\n  }\n\n  return result[\"\"] || result;\n}\n\n/**\n * Counts the number of decimal places\n * @param {number} num\n * @return {number}\n */\nexport function countDecimals(num: number): number {\n  if (Math.floor(num) === num || String(num).indexOf(\".\") < 0) return 0;\n  const parts = num.toString().split(\".\")[1];\n  return parts?.length || 0;\n}\n\n/**\n * Formats the SCORM messages for easy reading\n *\n * @param {string} functionName\n * @param {string} message\n * @param {string} CMIElement\n * @return {string}\n */\nexport function formatMessage(\n  functionName: string,\n  message: string,\n  CMIElement?: string,\n): string {\n  const baseLength = 20;\n  let messageString = \"\";\n\n  messageString += functionName;\n\n  let fillChars = baseLength - messageString.length;\n\n  for (let i = 0; i < fillChars; i++) {\n    messageString += \" \";\n  }\n\n  messageString += \": \";\n\n  if (CMIElement) {\n    const CMIElementBaseLength = 70;\n\n    messageString += CMIElement;\n\n    fillChars = CMIElementBaseLength - messageString.length;\n\n    for (let j = 0; j < fillChars; j++) {\n      messageString += \" \";\n    }\n  }\n\n  if (message) {\n    messageString += message;\n  }\n\n  return messageString;\n}\n\n/**\n * Checks to see if {str} contains {tester}\n *\n * @param {string} str String to check against\n * @param {string} tester String to check for\n * @return {boolean}\n */\nexport function stringMatches(str: string, tester: string): boolean {\n  return str?.match(tester) !== null;\n}\n","/******************************************************************************\nCopyright (c) Microsoft Corporation.\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\nPERFORMANCE OF THIS SOFTWARE.\n***************************************************************************** */\n/* global Reflect, Promise, SuppressedError, Symbol, Iterator */\n\nvar extendStatics = function(d, b) {\n  extendStatics = Object.setPrototypeOf ||\n      ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n      function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n  return extendStatics(d, b);\n};\n\nexport function __extends(d, b) {\n  if (typeof b !== \"function\" && b !== null)\n      throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n  extendStatics(d, b);\n  function __() { this.constructor = d; }\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\n\nexport var __assign = function() {\n  __assign = Object.assign || function __assign(t) {\n      for (var s, i = 1, n = arguments.length; i < n; i++) {\n          s = arguments[i];\n          for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n      return t;\n  }\n  return __assign.apply(this, arguments);\n}\n\nexport function __rest(s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n      t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n      for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n          if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n              t[p[i]] = s[p[i]];\n      }\n  return t;\n}\n\nexport function __decorate(decorators, target, key, desc) {\n  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n}\n\nexport function __param(paramIndex, decorator) {\n  return function (target, key) { decorator(target, key, paramIndex); }\n}\n\nexport function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\n  function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\n  var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\n  var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\n  var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\n  var _, done = false;\n  for (var i = decorators.length - 1; i >= 0; i--) {\n      var context = {};\n      for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\n      for (var p in contextIn.access) context.access[p] = contextIn.access[p];\n      context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\n      var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\n      if (kind === \"accessor\") {\n          if (result === void 0) continue;\n          if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\n          if (_ = accept(result.get)) descriptor.get = _;\n          if (_ = accept(result.set)) descriptor.set = _;\n          if (_ = accept(result.init)) initializers.unshift(_);\n      }\n      else if (_ = accept(result)) {\n          if (kind === \"field\") initializers.unshift(_);\n          else descriptor[key] = _;\n      }\n  }\n  if (target) Object.defineProperty(target, contextIn.name, descriptor);\n  done = true;\n};\n\nexport function __runInitializers(thisArg, initializers, value) {\n  var useValue = arguments.length > 2;\n  for (var i = 0; i < initializers.length; i++) {\n      value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\n  }\n  return useValue ? value : void 0;\n};\n\nexport function __propKey(x) {\n  return typeof x === \"symbol\" ? x : \"\".concat(x);\n};\n\nexport function __setFunctionName(f, name, prefix) {\n  if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\n  return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\n};\n\nexport function __metadata(metadataKey, metadataValue) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\n}\n\nexport function __awaiter(thisArg, _arguments, P, generator) {\n  function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n  return new (P || (P = Promise))(function (resolve, reject) {\n      function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n      function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n      function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n      step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n}\n\nexport function __generator(thisArg, body) {\n  var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === \"function\" ? Iterator : Object).prototype);\n  return g.next = verb(0), g[\"throw\"] = verb(1), g[\"return\"] = verb(2), typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n  function verb(n) { return function (v) { return step([n, v]); }; }\n  function step(op) {\n      if (f) throw new TypeError(\"Generator is already executing.\");\n      while (g && (g = 0, op[0] && (_ = 0)), _) try {\n          if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n          if (y = 0, t) op = [op[0] & 2, t.value];\n          switch (op[0]) {\n              case 0: case 1: t = op; break;\n              case 4: _.label++; return { value: op[1], done: false };\n              case 5: _.label++; y = op[1]; op = [0]; continue;\n              case 7: op = _.ops.pop(); _.trys.pop(); continue;\n              default:\n                  if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                  if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                  if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                  if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                  if (t[2]) _.ops.pop();\n                  _.trys.pop(); continue;\n          }\n          op = body.call(thisArg, _);\n      } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n      if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n  }\n}\n\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n  }\n  Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nexport function __exportStar(m, o) {\n  for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\n}\n\nexport function __values(o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n      next: function () {\n          if (o && i >= o.length) o = void 0;\n          return { value: o && o[i++], done: !o };\n      }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n}\n\nexport function __read(o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o), r, ar = [], e;\n  try {\n      while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  }\n  catch (error) { e = { error: error }; }\n  finally {\n      try {\n          if (r && !r.done && (m = i[\"return\"])) m.call(i);\n      }\n      finally { if (e) throw e.error; }\n  }\n  return ar;\n}\n\n/** @deprecated */\nexport function __spread() {\n  for (var ar = [], i = 0; i < arguments.length; i++)\n      ar = ar.concat(__read(arguments[i]));\n  return ar;\n}\n\n/** @deprecated */\nexport function __spreadArrays() {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n  for (var r = Array(s), k = 0, i = 0; i < il; i++)\n      for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n          r[k] = a[j];\n  return r;\n}\n\nexport function __spreadArray(to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n      if (ar || !(i in from)) {\n          if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n          ar[i] = from[i];\n      }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n}\n\nexport function __await(v) {\n  return this instanceof __await ? (this.v = v, this) : new __await(v);\n}\n\nexport function __asyncGenerator(thisArg, _arguments, generator) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var g = generator.apply(thisArg, _arguments || []), i, q = [];\n  return i = Object.create((typeof AsyncIterator === \"function\" ? AsyncIterator : Object).prototype), verb(\"next\"), verb(\"throw\"), verb(\"return\", awaitReturn), i[Symbol.asyncIterator] = function () { return this; }, i;\n  function awaitReturn(f) { return function (v) { return Promise.resolve(v).then(f, reject); }; }\n  function verb(n, f) { if (g[n]) { i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; if (f) i[n] = f(i[n]); } }\n  function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\n  function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\n  function fulfill(value) { resume(\"next\", value); }\n  function reject(value) { resume(\"throw\", value); }\n  function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\n}\n\nexport function __asyncDelegator(o) {\n  var i, p;\n  return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\n  function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\n}\n\nexport function __asyncValues(o) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var m = o[Symbol.asyncIterator], i;\n  return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n  function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n  function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n}\n\nexport function __makeTemplateObject(cooked, raw) {\n  if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\n  return cooked;\n};\n\nvar __setModuleDefault = Object.create ? (function(o, v) {\n  Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n  o[\"default\"] = v;\n};\n\nexport function __importStar(mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n}\n\nexport function __importDefault(mod) {\n  return (mod && mod.__esModule) ? mod : { default: mod };\n}\n\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n}\n\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n}\n\nexport function __classPrivateFieldIn(state, receiver) {\n  if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\n  return typeof state === \"function\" ? receiver === state : state.has(receiver);\n}\n\nexport function __addDisposableResource(env, value, async) {\n  if (value !== null && value !== void 0) {\n    if (typeof value !== \"object\" && typeof value !== \"function\") throw new TypeError(\"Object expected.\");\n    var dispose, inner;\n    if (async) {\n      if (!Symbol.asyncDispose) throw new TypeError(\"Symbol.asyncDispose is not defined.\");\n      dispose = value[Symbol.asyncDispose];\n    }\n    if (dispose === void 0) {\n      if (!Symbol.dispose) throw new TypeError(\"Symbol.dispose is not defined.\");\n      dispose = value[Symbol.dispose];\n      if (async) inner = dispose;\n    }\n    if (typeof dispose !== \"function\") throw new TypeError(\"Object not disposable.\");\n    if (inner) dispose = function() { try { inner.call(this); } catch (e) { return Promise.reject(e); } };\n    env.stack.push({ value: value, dispose: dispose, async: async });\n  }\n  else if (async) {\n    env.stack.push({ async: true });\n  }\n  return value;\n}\n\nvar _SuppressedError = typeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\n  var e = new Error(message);\n  return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\n};\n\nexport function __disposeResources(env) {\n  function fail(e) {\n    env.error = env.hasError ? new _SuppressedError(e, env.error, \"An error was suppressed during disposal.\") : e;\n    env.hasError = true;\n  }\n  var r, s = 0;\n  function next() {\n    while (r = env.stack.pop()) {\n      try {\n        if (!r.async && s === 1) return s = 0, env.stack.push(r), Promise.resolve().then(next);\n        if (r.dispose) {\n          var result = r.dispose.call(r.value);\n          if (r.async) return s |= 2, Promise.resolve(result).then(next, function(e) { fail(e); return next(); });\n        }\n        else s |= 1;\n      }\n      catch (e) {\n        fail(e);\n      }\n    }\n    if (s === 1) return env.hasError ? Promise.reject(env.error) : Promise.resolve();\n    if (env.hasError) throw env.error;\n  }\n  return next();\n}\n\nexport default {\n  __extends,\n  __assign,\n  __rest,\n  __decorate,\n  __param,\n  __metadata,\n  __awaiter,\n  __generator,\n  __createBinding,\n  __exportStar,\n  __values,\n  __read,\n  __spread,\n  __spreadArrays,\n  __spreadArray,\n  __await,\n  __asyncGenerator,\n  __asyncDelegator,\n  __asyncValues,\n  __makeTemplateObject,\n  __importStar,\n  __importDefault,\n  __classPrivateFieldGet,\n  __classPrivateFieldSet,\n  __classPrivateFieldIn,\n  __addDisposableResource,\n  __disposeResources,\n};\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};"],"names":["aicc_errors","aicc_constants","error_descriptions","errorCode","hasOwnProperty","call","String","basicMessage","detailMessage","ValidationError","checkAICCValidFormat","value","regexPattern","allowEmptyString","checkValidFormat","scorm12_errors","TYPE_MISMATCH","AICCValidationError","comments","CMIEvaluationComments","initialize","this","reset","_initialized","toJSON","jsonString","result","BaseCMI","children","comments_children","INVALID_SET_VALUE","errorClass","CMIArray","_content","_location","_time","content","aicc_regex","CMIString256","location","time","CMITime","student_preference_children","_lesson_type","_text_color","_text_location","_text_size","_video","windows","lesson_type","text_color","text_location","text_size","video","audio","language","speed","text","CMIStudentPreference","__children","student_demographics_children","_city","_class","_company","_country","_experience","_familiar_name","_instructor_name","_title","_native_language","_state","_street_address","_telephone","_years_experience","city","initialized","READ_ONLY_ELEMENT","clazz","company","country","experience","familiar_name","instructor_name","title","native_language","state","street_address","telephone","years_experience","class","tries_children","_status","score","CMIScore","score_children","score_range","invalidErrorCode","invalidTypeCode","invalidRangeCode","VALUE_OUT_OF_RANGE","status","CMIStatus2","attempt_records_children","_lesson_status","lesson_status","student_data_children","_tries_during_lesson","tries","CMITries","attempt_records","CMIAttemptRecords","tries_during_lesson","mastery_score","max_time_allowed","time_limit_action","CMIStudentData","paths_children","_location_id","_date","_why_left","_time_in_element","location_id","date","why_left","time_in_element","cmi_children","student_preference","AICCStudentPreferences","student_data","AICCCMIStudentData","student_demographics","CMIStudentDemographics","evaluation","CMIEvaluation","paths","CMIPaths","suspend_data","launch_data","comments_from_lms","core","objectives","interactions","settings","cmi","CMI","nav","NAV","getChildElement","CMIElement","foundFirstIndex","newChild","stringMatches","CMIEvaluationCommentsObject","CMITriesObject","CMIAttemptRecordsObject","CMIPathsObject","replaceWithAnotherScormAPI","newAPI","Scorm12API","DefaultSettings","autocommit","autocommitSeconds","asyncCommit","sendFullCommit","lmsCommitUrl","dataCommitFormat","commitRequestDataType","autoProgress","logLevel","LogLevelEnum","ERROR","selfReportSessionTime","alwaysSendTotalTime","renderCommonCommitFields","strict_errors","xhrHeaders","xhrWithCredentials","fetchMode","responseHandler","response","responseText","httpResult","JSON","parse","global_constants","SCORM_TRUE","SCORM_FALSE","requestHandler","commitObject","onLogMessage","messageLevel","logMessage","console","error","WARN","warn","INFO","info","DEBUG","debug","log","scoItemIds","scoItemIdValidator","globalObjectiveIds","API","when","callback","_cancelled","_API","_timeout","setTimeout","wrapper","bind","_callback","cancel","clearTimeout","commit","error_codes","_settings","BaseAPI","TypeError","currentState","STATE_NOT_INITIALIZED","lastErrorCode","listenerArray","_error_codes","apiLogLevel","commonReset","apiLog","clearScheduledCommit","startingData","callbackName","initializeMessage","terminationMessage","returnValue","isInitialized","throwSCORMError","INITIALIZED","isTerminated","TERMINATED","setStartTime","STATE_INITIALIZED","processListeners","clearSCORMError","functionName","formatMessage","terminate","checkTerminated","checkState","TERMINATION_BEFORE_INIT","MULTIPLE_TERMINATION","STATE_TERMINATED","storeData","getValue","RETRIEVE_BEFORE_INIT","RETRIEVE_AFTER_TERM","getCMIValue","e","handleValueAccessException","undefined","setValue","commitCallback","STORE_BEFORE_INIT","STORE_AFTER_TERM","setCMIValue","scheduleCommit","COMMIT_BEFORE_INIT","COMMIT_AFTER_TERM","getLastError","getErrorString","CMIErrorCode","getLmsErrorMessageDetails","getDiagnostic","beforeInitError","afterTermError","isNotInitialized","_errorNumber","_detail","Error","_CMIElement","_value","_commonSetCMIValue","methodName","scorm2004","structure","split","refObject","invalidErrorMessage","UNDEFINED_DATA_MODEL","GENERAL","idx","length","attribute","substring","_checkObjectHasProperty","validateCorrectResponse","index","parseInt","isNaN","item","childArray","push","_commonGetCMIValue","uninitializedErrorMessage","_isTargetValid","target","VALUE_NOT_INITIALIZED","CHILDREN_ERROR","COUNT_ERROR","on","listenerName","listenerFunctions","i","listenerSplit","replace","off","removeIndex","findIndex","obj","splice","clear","filter","CMIElementsMatch","listener","functionsMatch","listenerHasCMIElement","indexOf","errorNumber","message","success","loadFromFlattenedJSON","json","int_pattern","obj_pattern","Object","keys","map","key","sort","test","a","c","testPattern","forEach","element","loadFromJSON","unflatten","a_pattern","c_match","a_match","match","a_num","Number","c_num","currentCMIElement","constructor","renderCMIToJSONString","stringify","k","v","renderCMIToJSONObject","processHttpRequest","url","params","immediate","api","genericError","performFetch","then","transformResponse","process","ScheduledCommit","getOwnPropertyDescriptor","getPrototypeOf","getCommitObject","terminateCommit","shouldTerminateCommit","renderCommitObject","renderCommitCMI","includes","init","method","mode","body","Array","join","headers","keepalive","credentials","fetch","mastery_override","statusSetByModule","LMSInitialize","lmsInitialize","LMSFinish","lmsFinish","LMSGetValue","lmsGetValue","LMSSetValue","lmsSetValue","LMSCommit","lmsCommit","LMSGetLastError","lmsGetLastError","LMSGetErrorString","lmsGetErrorString","LMSGetDiagnostic","lmsGetDiagnostic","internalFinish","event","CMIObjectivesObject","CMIInteractionsCorrectResponsesObject","CMIInteractionsObjectivesObject","CMIInteractionsObject","detail","scorm12_constants","cmiExport","total_time","getCurrentTotalTime","flattened","totalTimeHHMMSS","totalTimeSeconds","scorm12_regex","CMITimespan","lessonStatus","completionStatus","CompletionStatus","unknown","successStatus","SuccessStatus","completed","incomplete","passed","failed","scoreObject","parseFloat","raw","min","max","runtimeData","originalStatus","lesson_mode","credit","scorm2004_errors","scorm2004_constants","check2004ValidFormat","Scorm2004ValidationError","check2004ValidRange","rangePattern","checkValidRange","_audio_level","_language","_delivery_speed","_audio_captioning","_children","audio_level","scorm2004_regex","CMIDecimal","audio_range","CMILang","delivery_speed","speed_range","audio_captioning","CMISInteger","text_range","LearnerResponses","format","delimiter","unique","choice","CMILongIdentifier","CMILangString250","CMILangString4000","matching","CMIShortIdentifier","format2","delimiter2","performance","sequencing","likert","numeric","other","CMIString4000","CorrectResponses","duplicate","limit","CMILangString250cr","delimiter3","interactions_children","_id","_type","_timestamp","_weighting","_learner_response","_result","_latency","_description","objectives_children","correct_responses","correct_responses_children","id","type","DEPENDENCY_NOT_ESTABLISHED","CMIType","timestamp","weighting","learner_response","nodes","response_type","GENERAL_SET_FAILURE","formatRegex","RegExp","values","j","CMIResult","latency","description","_pattern","pattern","CMIFeedback","decimalRegex","_scaled","_raw","_min","_max","scaled","scaled_range","readOnlyAfterInit","_comment","_readOnlyAfterInit","comment","CMIString250","findObjectiveById","find","objective","findObjectiveByIndex","setObjectiveByIndex","_success_status","_completion_status","_progress_measure","Scorm2004CMIScore","success_status","CMISStatus","completion_status","CMICStatus","progress_measure","progress_range","__version","_completion_threshold","_credit","_entry","_exit","_launch_data","_learner_id","_learner_name","_max_time_allowed","_mode","_scaled_passing_score","_session_time","_suspend_data","_time_limit_action","_total_time","learner_preference","CMILearnerPreference","comments_from_learner","CMICommentsFromLearner","CMICommentsFromLMS","CMIInteractions","CMIObjectives","_version","completion_threshold","entry","WRITE_ONLY_ELEMENT","exit","CMIExit","learner_id","learner_name","CMIString1000","scaled_passing_score","session_time","CMIString64000","sessionTime","startTime","start_time","seconds","Date","getTime","BaseRootCMI","data","ADLData","ADLNav","_request","request_valid","ADLNavRequestValid","request","NAVEvent","adl_data_children","_store","store","_continue","_previous","_choice","_jump","NAVBoolean","NAVTarget","jump","previous","continue","_globalObjectives","adl","ADL","Initialize","Terminate","GetValue","SetValue","Commit","GetLastError","GetErrorString","GetDiagnostic","navActions","exitAll","abandon","abandonAll","choiceJumpRegex","matches","groups","choice_target","jump_target","action","adlNavRequestRegex","parts","element_base","global_index","newGlobalObjective","global_element","createCorrectResponsesObject","CMICommentsObject","ADLDataObject","interaction","checkDuplicateChoiceResponse","checkValidResponseType","interaction_type","checkCorrectResponseValue","interaction_count","_count","pattern_index","checkDuplicatedPattern","correct_response","current_index","found","count","removeCorrectResponsePrefixes","node","seenOrder","seenCase","seenLang","prefixRegex","langMatches","CMILangcr","lang","toLowerCase","totalTimeDuration","navRequest","Function","_errorCode","_errorClass","BaseScormValidationError","wipe","_start_time","__score_range","__invalid_error_code","__invalid_type_code","__invalid_range_code","__decimal_regex","__error_class","ranges","core_children","_student_id","_student_name","_lesson_location","_lesson_mode","Scorm12ValidationError","student_id","student_name","lesson_location","check12ValidFormat","CMIStatus","CMIString4096","_comments","_comments_from_lms","CMICore","_student_response","CMIIdentifier","check12ValidRange","weighting_range","student_response","_event","_mastery_score","_audio","_speed","_text","global_errors","INITIALIZATION_FAILED","TERMINATION_FAILURE","ARGUMENT_ERROR","GENERAL_GET_FAILURE","GENERAL_COMMIT_FAILURE","UNIMPLEMENTED_ELEMENT","MULTIPLE_TERMINATIONS","CMIInteger","CMIIndex","CMIString200","CMIIndexStore","toString","name","errorMessage","detailedMessage","_detailedMessage","_errorMessage","SECONDS_PER_SECOND","SECONDS_PER_MINUTE","SECONDS_PER_HOUR","SECONDS_PER_DAY","designations","D","H","M","S","getSecondsAsHHMMSS","totalSeconds","hours","Math","floor","dateObj","minutes","getUTCMinutes","getSeconds","ms","msStr","countDecimals","toFixed","getSecondsAsISODuration","duration","remainder","designationsKey","current_seconds","getTimeAsSeconds","timeString","timeRegex","getDurationAsSeconds","durationRegex","exec","years","days","addTwoDurations","first","second","regex","addHHMMSSTimeStrings","flatten","recurse","cur","prop","isArray","l","isEmpty","p","m","num","messageString","fillChars","str","tester","extendStatics","d","b","setPrototypeOf","__proto__","prototype","__extends","__","create","__assign","assign","t","s","n","arguments","apply","__rest","getOwnPropertySymbols","propertyIsEnumerable","__decorate","decorators","desc","r","Reflect","decorate","defineProperty","__param","paramIndex","decorator","__esDecorate","ctor","descriptorIn","contextIn","initializers","extraInitializers","accept","f","_","kind","descriptor","done","context","access","addInitializer","get","set","unshift","__runInitializers","thisArg","useValue","__propKey","x","concat","__setFunctionName","prefix","configurable","__metadata","metadataKey","metadataValue","metadata","__awaiter","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","next","rejected","__generator","y","label","sent","trys","ops","g","Iterator","verb","Symbol","iterator","op","pop","__createBinding","o","k2","__esModule","writable","enumerable","__exportStar","__values","__read","ar","__spread","__spreadArrays","il","jl","__spreadArray","to","from","pack","slice","__await","__asyncGenerator","asyncIterator","q","AsyncIterator","resume","fulfill","settle","shift","__asyncDelegator","__asyncValues","__makeTemplateObject","cooked","__setModuleDefault","__importStar","mod","__importDefault","default","__classPrivateFieldGet","receiver","has","__classPrivateFieldSet","__classPrivateFieldIn","__addDisposableResource","env","async","dispose","inner","asyncDispose","stack","_SuppressedError","SuppressedError","suppressed","__disposeResources","fail","hasError","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","definition","toStringTag"],"sourceRoot":""}