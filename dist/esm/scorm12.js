const global_constants={SCORM_TRUE:"true",SCORM_FALSE:"false",STATE_NOT_INITIALIZED:0,STATE_INITIALIZED:1,STATE_TERMINATED:2};const scorm12_constants={cmi_children:"core,suspend_data,launch_data,comments,objectives,student_data,student_preference,interactions",core_children:"student_id,student_name,lesson_location,credit,lesson_status,entry,score,total_time,lesson_mode,exit,session_time",score_children:"raw,min,max",objectives_children:"id,score,status",correct_responses_children:"pattern",student_data_children:"mastery_score,max_time_allowed,time_limit_action",student_preference_children:"audio,language,speed,text",interactions_children:"id,objectives,time,type,correct_responses,weighting,student_response,result,latency",error_descriptions:{101:{basicMessage:"General Exception",detailMessage:"No specific error code exists to describe the error. Use LMSGetDiagnostic for more information"},201:{basicMessage:"Invalid argument error",detailMessage:"Indicates that an argument represents an invalid data model element or is otherwise incorrect."},202:{basicMessage:"Element cannot have children",detailMessage:'Indicates that LMSGetValue was called with a data model element name that ends in "_children" for a data model element that does not support the "_children" suffix.'},203:{basicMessage:"Element not an array - cannot have count",detailMessage:'Indicates that LMSGetValue was called with a data model element name that ends in "_count" for a data model element that does not support the "_count" suffix.'},301:{basicMessage:"Not initialized",detailMessage:"Indicates that an API call was made before the call to lmsInitialize."},401:{basicMessage:"Not implemented error",detailMessage:"The data model element indicated in a call to LMSGetValue or LMSSetValue is valid, but was not implemented by this LMS. SCORM 1.2 defines a set of data model elements as being optional for an LMS to implement."},402:{basicMessage:"Invalid set value, element is a keyword",detailMessage:'Indicates that LMSSetValue was called on a data model element that represents a keyword (elements that end in "_children" and "_count").'},403:{basicMessage:"Element is read only",detailMessage:"LMSSetValue was called with a data model element that can only be read."},404:{basicMessage:"Element is write only",detailMessage:"LMSGetValue was called on a data model element that can only be written to."},405:{basicMessage:"Incorrect Data Type",detailMessage:"LMSSetValue was called with a value that is not consistent with the data format of the supplied data model element."},407:{basicMessage:"Element Value Out Of Range",detailMessage:"The numeric value supplied to a LMSSetValue call is outside of the numeric range allowed for the supplied data model element."},408:{basicMessage:"Data Model Dependency Not Established",detailMessage:"Some data model elements cannot be set until another data model element was set. This error condition indicates that the prerequisite element was not set before the dependent element."}}};const global_errors={GENERAL:101,INITIALIZATION_FAILED:101,INITIALIZED:101,TERMINATED:101,TERMINATION_FAILURE:101,TERMINATION_BEFORE_INIT:101,MULTIPLE_TERMINATION:101,RETRIEVE_BEFORE_INIT:101,RETRIEVE_AFTER_TERM:101,STORE_BEFORE_INIT:101,STORE_AFTER_TERM:101,COMMIT_BEFORE_INIT:101,COMMIT_AFTER_TERM:101,ARGUMENT_ERROR:101,CHILDREN_ERROR:101,COUNT_ERROR:101,GENERAL_GET_FAILURE:101,GENERAL_SET_FAILURE:101,GENERAL_COMMIT_FAILURE:101,UNDEFINED_DATA_MODEL:101,UNIMPLEMENTED_ELEMENT:101,VALUE_NOT_INITIALIZED:101,INVALID_SET_VALUE:101,READ_ONLY_ELEMENT:101,WRITE_ONLY_ELEMENT:101,TYPE_MISMATCH:101,VALUE_OUT_OF_RANGE:101,DEPENDENCY_NOT_ESTABLISHED:101};const scorm12_errors$1={...global_errors,RETRIEVE_BEFORE_INIT:301,STORE_BEFORE_INIT:301,COMMIT_BEFORE_INIT:301,ARGUMENT_ERROR:201,CHILDREN_ERROR:202,COUNT_ERROR:203,UNDEFINED_DATA_MODEL:401,UNIMPLEMENTED_ELEMENT:401,VALUE_NOT_INITIALIZED:301,INVALID_SET_VALUE:402,READ_ONLY_ELEMENT:403,WRITE_ONLY_ELEMENT:404,TYPE_MISMATCH:405,VALUE_OUT_OF_RANGE:407,DEPENDENCY_NOT_ESTABLISHED:408};const scorm12_regex={CMIString256:"^.{0,255}$",CMIString4096:"^.{0,4096}$",CMITime:"^(?:[01]\\d|2[0123]):(?:[012345]\\d):(?:[012345]\\d)$",CMITimespan:"^([0-9]{2,}):([0-9]{2}):([0-9]{2})(.[0-9]{1,2})?$",CMISInteger:"^-?([0-9]+)$",CMIDecimal:"^-?([0-9]{0,3})(.[0-9]*)?$",CMIIdentifier:"^[\\u0021-\\u007E\\s]{0,255}$",CMIFeedback:"^.{0,255}$",CMIStatus:"^(passed|completed|failed|incomplete|browsed)$",CMIStatus2:"^(passed|completed|failed|incomplete|browsed|not attempted)$",CMIExit:"^(time-out|suspend|logout|)$",CMIType:"^(true-false|choice|fill-in|matching|performance|sequencing|likert|numeric)$",CMIResult:"^(correct|wrong|unanticipated|neutral|([0-9]{0,3})?(\\.[0-9]*)?)$",NAVEvent:"^(previous|continue)$",score_range:"0#100",audio_range:"-1#100",speed_range:"-100#100",weighting_range:"-100#100",text_range:"-1#1"};class BaseScormValidationError extends Error{constructor(CMIElement,errorCode){super(`${CMIElement} : ${errorCode.toString()}`);this._errorCode=errorCode;Object.setPrototypeOf(this,BaseScormValidationError.prototype)}get errorCode(){return this._errorCode}}class ValidationError extends BaseScormValidationError{constructor(CMIElement,errorCode,errorMessage,detailedMessage){super(CMIElement,errorCode);this._detailedMessage="";this.message=`${CMIElement} : ${errorMessage}`;this._errorMessage=errorMessage;if(detailedMessage){this._detailedMessage=detailedMessage}Object.setPrototypeOf(this,ValidationError.prototype)}get errorMessage(){return this._errorMessage}get detailedMessage(){return this._detailedMessage}}const scorm12_errors=scorm12_constants.error_descriptions;class Scorm12ValidationError extends ValidationError{constructor(CMIElement,errorCode){if({}.hasOwnProperty.call(scorm12_errors,String(errorCode))){super(CMIElement,errorCode,scorm12_errors[String(errorCode)].basicMessage,scorm12_errors[String(errorCode)].detailMessage)}else{super(CMIElement,101,scorm12_errors["101"].basicMessage,scorm12_errors["101"].detailMessage)}Object.setPrototypeOf(this,Scorm12ValidationError.prototype)}}class BaseCMI{constructor(cmi_element){this.jsonString=false;this._initialized=false;this._cmi_element=cmi_element}get initialized(){return this._initialized}get start_time(){return this._start_time}initialize(){this._initialized=true}setStartTime(){this._start_time=(new Date).getTime()}}class BaseRootCMI extends BaseCMI{}const SECONDS_PER_MINUTE=60;const SECONDS_PER_HOUR=60*SECONDS_PER_MINUTE;const getSecondsAsHHMMSS=memoize((totalSeconds=>{if(!totalSeconds||totalSeconds<=0){return"00:00:00"}const hours=Math.floor(totalSeconds/SECONDS_PER_HOUR);const dateObj=new Date(totalSeconds*1e3);const minutes=dateObj.getUTCMinutes();const seconds=dateObj.getSeconds();const ms=totalSeconds%1;let msStr="";if(countDecimals(ms)>0){if(countDecimals(ms)>2){msStr=ms.toFixed(2)}else{msStr=String(ms)}msStr="."+msStr.split(".")[1]}return(hours+":"+minutes+":"+seconds).replace(/\b\d\b/g,"0$&")+msStr}));const getTimeAsSeconds=memoize(((timeString,timeRegex)=>{if(typeof timeString==="number"||typeof timeString==="boolean"){timeString=String(timeString)}if(typeof timeRegex==="string"){timeRegex=new RegExp(timeRegex)}if(!timeString||!timeString?.match?.(timeRegex)){return 0}const parts=timeString.split(":");const hours=Number(parts[0]);const minutes=Number(parts[1]);const seconds=Number(parts[2]);return hours*3600+minutes*60+seconds}),((timeString,timeRegex)=>{const timeStr=typeof timeString==="string"?timeString:String(timeString??"");const regexStr=typeof timeRegex==="string"?timeRegex:timeRegex?.toString()??"";return`${timeStr}:${regexStr}`}));function addHHMMSSTimeStrings(first,second,timeRegex){if(typeof timeRegex==="string"){timeRegex=new RegExp(timeRegex)}return getSecondsAsHHMMSS(getTimeAsSeconds(first,timeRegex)+getTimeAsSeconds(second,timeRegex))}function flatten(data){const result={};function recurse(cur,prop){if(Object(cur)!==cur){result[prop]=cur}else if(Array.isArray(cur)){cur.forEach(((item,i)=>{recurse(item,`${prop}[${i}]`)}));if(cur.length===0)result[prop]=[]}else{const keys=Object.keys(cur).filter((p=>Object.prototype.hasOwnProperty.call(cur,p)));const isEmpty=keys.length===0;keys.forEach((p=>{recurse(cur[p],prop?`${prop}.${p}`:p)}));if(isEmpty&&prop)result[prop]={}}}recurse(data,"");return result}function unflatten(data){if(Object(data)!==data||Array.isArray(data))return data;const result={};const pattern=/\.?([^.[\]]+)|\[(\d+)]/g;Object.keys(data).filter((p=>Object.prototype.hasOwnProperty.call(data,p))).forEach((p=>{let cur=result;let prop="";const regex=new RegExp(pattern);Array.from({length:p.match(new RegExp(pattern,"g"))?.length??0},(()=>regex.exec(p))).forEach((m=>{if(m){cur=cur[prop]??(cur[prop]=m[2]?[]:{});prop=m[2]||m[1]}}));cur[prop]=data[p]}));return result[""]??result}function countDecimals(num){if(Math.floor(num)===num||String(num)?.indexOf?.(".")<0)return 0;const parts=num.toString().split(".")?.[1];return parts?.length??0}function formatMessage(functionName,message,CMIElement){const baseLength=20;const paddedFunction=functionName.padEnd(baseLength);let messageString=`${paddedFunction}: `;if(CMIElement){const CMIElementBaseLength=70;messageString+=CMIElement;messageString=messageString.padEnd(CMIElementBaseLength)}messageString+=message??"";return messageString}function stringMatches(str,tester){return str?.match(tester)!==null}function memoize(fn,keyFn){const cache=new Map;return function(){for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key]}const key=keyFn?keyFn(...args):JSON.stringify(args);return cache.has(key)?cache.get(key):(()=>{const result=fn(...args);cache.set(key,result);return result})()}}const checkValidFormat=memoize(((CMIElement,value,regexPattern,errorCode,errorClass,allowEmptyString)=>{if(typeof value!=="string"){return false}const formatRegex=new RegExp(regexPattern);const matches=value.match(formatRegex);if(allowEmptyString&&value===""){return true}if(value===void 0||!matches||matches[0]===""){throw new errorClass(CMIElement,errorCode)}return true}),((CMIElement,value,regexPattern,errorCode,_errorClass,allowEmptyString)=>{const valueKey=typeof value==="string"?value:`[${typeof value}]`;return`${CMIElement}:${valueKey}:${regexPattern}:${errorCode}:${allowEmptyString||false}`}));const checkValidRange=memoize(((CMIElement,value,rangePattern,errorCode,errorClass)=>{const ranges=rangePattern.split("#");value=value*1;if(value>=ranges[0]){if(ranges[1]==="*"||value<=ranges[1]){return true}else{throw new errorClass(CMIElement,errorCode)}}else{throw new errorClass(CMIElement,errorCode)}}),((CMIElement,value,rangePattern,errorCode,_errorClass)=>`${CMIElement}:${value}:${rangePattern}:${errorCode}`));function check12ValidFormat(CMIElement,value,regexPattern,allowEmptyString){return checkValidFormat(CMIElement,value,regexPattern,scorm12_errors$1.TYPE_MISMATCH,Scorm12ValidationError,allowEmptyString)}function check12ValidRange(CMIElement,value,rangePattern,allowEmptyString){if(value===""){throw new Scorm12ValidationError(CMIElement,scorm12_errors$1.VALUE_OUT_OF_RANGE)}return checkValidRange(CMIElement,value,rangePattern,scorm12_errors$1.VALUE_OUT_OF_RANGE,Scorm12ValidationError)}class ValidationService{validateScore(CMIElement,value,decimalRegex,scoreRange,invalidTypeCode,invalidRangeCode,errorClass){return checkValidFormat(CMIElement,value,decimalRegex,invalidTypeCode,errorClass)&&(!scoreRange||checkValidRange(CMIElement,value,scoreRange,invalidRangeCode,errorClass))}validateScorm12Audio(CMIElement,value){return check12ValidFormat(CMIElement,value,scorm12_regex.CMISInteger)&&check12ValidRange(CMIElement,value,scorm12_regex.audio_range)}validateScorm12Language(CMIElement,value){return check12ValidFormat(CMIElement,value,scorm12_regex.CMIString256)}validateScorm12Speed(CMIElement,value){return check12ValidFormat(CMIElement,value,scorm12_regex.CMISInteger)&&check12ValidRange(CMIElement,value,scorm12_regex.speed_range)}validateScorm12Text(CMIElement,value){return check12ValidFormat(CMIElement,value,scorm12_regex.CMISInteger)&&check12ValidRange(CMIElement,value,scorm12_regex.text_range)}validateReadOnly(CMIElement,initialized){if(initialized){throw new Scorm12ValidationError(CMIElement,scorm12_errors$1.READ_ONLY_ELEMENT)}}}const validationService=new ValidationService;class CMIScore extends BaseCMI{constructor(params){super(params.CMIElement);this._raw="";this._min="";this.__children=params.score_children||scorm12_constants.score_children;this.__score_range=!params.score_range?false:scorm12_regex.score_range;this._max=params.max||params.max===""?params.max:"100";this.__invalid_error_code=params.invalidErrorCode||scorm12_errors$1.INVALID_SET_VALUE;this.__invalid_type_code=params.invalidTypeCode||scorm12_errors$1.TYPE_MISMATCH;this.__invalid_range_code=params.invalidRangeCode||scorm12_errors$1.VALUE_OUT_OF_RANGE;this.__decimal_regex=params.decimalRegex||scorm12_regex.CMIDecimal;this.__error_class=params.errorClass}reset(){this._initialized=false}get _children(){return this.__children}set _children(_children){throw new this.__error_class(this._cmi_element+"._children",this.__invalid_error_code)}get raw(){return this._raw}set raw(raw){if(validationService.validateScore(this._cmi_element+".raw",raw,this.__decimal_regex,this.__score_range,this.__invalid_type_code,this.__invalid_range_code,this.__error_class)){this._raw=raw}}get min(){return this._min}set min(min){if(validationService.validateScore(this._cmi_element+".min",min,this.__decimal_regex,this.__score_range,this.__invalid_type_code,this.__invalid_range_code,this.__error_class)){this._min=min}}get max(){return this._max}set max(max){if(validationService.validateScore(this._cmi_element+".max",max,this.__decimal_regex,this.__score_range,this.__invalid_type_code,this.__invalid_range_code,this.__error_class)){this._max=max}}toJSON(){this.jsonString=true;const result={raw:this.raw,min:this.min,max:this.max};delete this.jsonString;return result}}class CMICore extends BaseCMI{constructor(){super("cmi.core");this.__children=scorm12_constants.core_children;this._student_id="";this._student_name="";this._lesson_location="";this._credit="";this._lesson_status="not attempted";this._entry="";this._total_time="";this._lesson_mode="normal";this._exit="";this._session_time="00:00:00";this._suspend_data="";this.score=new CMIScore({CMIElement:"cmi.core.score",score_children:scorm12_constants.score_children,score_range:scorm12_regex.score_range,invalidErrorCode:scorm12_errors$1.INVALID_SET_VALUE,invalidTypeCode:scorm12_errors$1.TYPE_MISMATCH,invalidRangeCode:scorm12_errors$1.VALUE_OUT_OF_RANGE,errorClass:Scorm12ValidationError})}initialize(){super.initialize();this.score?.initialize()}reset(){this._initialized=false;this._exit="";this._entry="";this._session_time="00:00:00";this.score?.reset()}get _children(){return this.__children}set _children(_children){throw new Scorm12ValidationError(this._cmi_element+"._children",scorm12_errors$1.INVALID_SET_VALUE)}get student_id(){return this._student_id}set student_id(student_id){if(this.initialized){throw new Scorm12ValidationError(this._cmi_element+".student_id",scorm12_errors$1.READ_ONLY_ELEMENT)}else{this._student_id=student_id}}get student_name(){return this._student_name}set student_name(student_name){if(this.initialized){throw new Scorm12ValidationError(this._cmi_element+".student_name",scorm12_errors$1.READ_ONLY_ELEMENT)}else{this._student_name=student_name}}get lesson_location(){return this._lesson_location}set lesson_location(lesson_location){if(check12ValidFormat(this._cmi_element+".lesson_location",lesson_location,scorm12_regex.CMIString256,true)){this._lesson_location=lesson_location}}get credit(){return this._credit}set credit(credit){if(this.initialized){throw new Scorm12ValidationError(this._cmi_element+".credit",scorm12_errors$1.READ_ONLY_ELEMENT)}else{this._credit=credit}}get lesson_status(){return this._lesson_status}set lesson_status(lesson_status){if(this.initialized){if(check12ValidFormat(this._cmi_element+".lesson_status",lesson_status,scorm12_regex.CMIStatus)){this._lesson_status=lesson_status}}else{if(check12ValidFormat(this._cmi_element+".lesson_status",lesson_status,scorm12_regex.CMIStatus2)){this._lesson_status=lesson_status}}}get entry(){return this._entry}set entry(entry){if(this.initialized){throw new Scorm12ValidationError(this._cmi_element+".entry",scorm12_errors$1.READ_ONLY_ELEMENT)}else{this._entry=entry}}get total_time(){return this._total_time}set total_time(total_time){if(this.initialized){throw new Scorm12ValidationError(this._cmi_element+".total_time",scorm12_errors$1.READ_ONLY_ELEMENT)}else{this._total_time=total_time}}get lesson_mode(){return this._lesson_mode}set lesson_mode(lesson_mode){if(this.initialized){throw new Scorm12ValidationError(this._cmi_element+".lesson_mode",scorm12_errors$1.READ_ONLY_ELEMENT)}else{this._lesson_mode=lesson_mode}}get exit(){if(!this.jsonString){throw new Scorm12ValidationError(this._cmi_element+".exit",scorm12_errors$1.WRITE_ONLY_ELEMENT)}return this._exit}set exit(exit){if(check12ValidFormat(this._cmi_element+".exit",exit,scorm12_regex.CMIExit,true)){this._exit=exit}}get session_time(){if(!this.jsonString){throw new Scorm12ValidationError(this._cmi_element+".session_time",scorm12_errors$1.WRITE_ONLY_ELEMENT)}return this._session_time}set session_time(session_time){if(check12ValidFormat(this._cmi_element+".session_time",session_time,scorm12_regex.CMITimespan)){this._session_time=session_time}}get suspend_data(){return this._suspend_data}set suspend_data(suspend_data){if(check12ValidFormat(this._cmi_element+".suspend_data",suspend_data,scorm12_regex.CMIString4096,true)){this._suspend_data=suspend_data}}getCurrentTotalTime(start_time){let sessionTime=this._session_time;const startTime=start_time;if(typeof startTime!=="undefined"&&startTime!==null){const seconds=(new Date).getTime()-startTime;sessionTime=getSecondsAsHHMMSS(seconds/1e3)}return addHHMMSSTimeStrings(this._total_time,sessionTime,new RegExp(scorm12_regex.CMITimespan))}toJSON(){this.jsonString=true;const result={student_id:this.student_id,student_name:this.student_name,lesson_location:this.lesson_location,credit:this.credit,lesson_status:this.lesson_status,entry:this.entry,lesson_mode:this.lesson_mode,exit:this.exit,session_time:this.session_time,score:this.score};delete this.jsonString;return result}}class CMIArray extends BaseCMI{constructor(params){super(params.CMIElement);this.__children=params.children;this._errorCode=params.errorCode||scorm12_errors$1.GENERAL;this._errorClass=params.errorClass||BaseScormValidationError;this.childArray=[]}reset(){let wipe=arguments.length>0&&arguments[0]!==undefined?arguments[0]:false;this._initialized=false;if(wipe){this.childArray=[]}else{for(let i=0;i<this.childArray.length;i++){this.childArray[i].reset()}}}get _children(){return this.__children}set _children(_children){throw new this._errorClass(this._cmi_element+"._children",this._errorCode)}get _count(){return this.childArray.length}set _count(_count){throw new this._errorClass(this._cmi_element+"._count",this._errorCode)}toJSON(){this.jsonString=true;const result={};for(let i=0;i<this.childArray.length;i++){result[i+""]=this.childArray[i]}delete this.jsonString;return result}}class CMIObjectives extends CMIArray{constructor(){super({CMIElement:"cmi.objectives",children:scorm12_constants.objectives_children,errorCode:scorm12_errors$1.INVALID_SET_VALUE,errorClass:Scorm12ValidationError})}}class CMIObjectivesObject extends BaseCMI{constructor(){super("cmi.objectives.n");this._id="";this._status="";this.score=new CMIScore({CMIElement:"cmi.objectives.n.score",score_children:scorm12_constants.score_children,score_range:scorm12_regex.score_range,invalidErrorCode:scorm12_errors$1.INVALID_SET_VALUE,invalidTypeCode:scorm12_errors$1.TYPE_MISMATCH,invalidRangeCode:scorm12_errors$1.VALUE_OUT_OF_RANGE,errorClass:Scorm12ValidationError})}reset(){this._initialized=false;this._id="";this._status="";this.score?.reset()}get id(){return this._id}set id(id){if(check12ValidFormat(this._cmi_element+".id",id,scorm12_regex.CMIIdentifier)){this._id=id}}get status(){return this._status}set status(status){if(check12ValidFormat(this._cmi_element+".status",status,scorm12_regex.CMIStatus2)){this._status=status}}toJSON(){this.jsonString=true;const result={id:this.id,status:this.status,score:this.score};delete this.jsonString;return result}}class CMIStudentData extends BaseCMI{constructor(student_data_children){super("cmi.student_data");this._mastery_score="";this._max_time_allowed="";this._time_limit_action="";this.__children=student_data_children?student_data_children:scorm12_constants.student_data_children}reset(){this._initialized=false}get _children(){return this.__children}set _children(_children){throw new Scorm12ValidationError(this._cmi_element+"._children",scorm12_errors$1.INVALID_SET_VALUE)}get mastery_score(){return this._mastery_score}set mastery_score(mastery_score){validationService.validateReadOnly(this._cmi_element+".mastery_score",this.initialized);this._mastery_score=mastery_score}get max_time_allowed(){return this._max_time_allowed}set max_time_allowed(max_time_allowed){validationService.validateReadOnly(this._cmi_element+".max_time_allowed",this.initialized);this._max_time_allowed=max_time_allowed}get time_limit_action(){return this._time_limit_action}set time_limit_action(time_limit_action){validationService.validateReadOnly(this._cmi_element+".time_limit_action",this.initialized);this._time_limit_action=time_limit_action}toJSON(){this.jsonString=true;const result={mastery_score:this.mastery_score,max_time_allowed:this.max_time_allowed,time_limit_action:this.time_limit_action};delete this.jsonString;return result}}class CMIStudentPreference extends BaseCMI{constructor(student_preference_children){super("cmi.student_preference");this._audio="";this._language="";this._speed="";this._text="";this.__children=student_preference_children?student_preference_children:scorm12_constants.student_preference_children}reset(){this._initialized=false}get _children(){return this.__children}set _children(_children){throw new Scorm12ValidationError(this._cmi_element+"._children",scorm12_errors$1.INVALID_SET_VALUE)}get audio(){return this._audio}set audio(audio){if(validationService.validateScorm12Audio(this._cmi_element+".audio",audio)){this._audio=audio}}get language(){return this._language}set language(language){if(validationService.validateScorm12Language(this._cmi_element+".language",language)){this._language=language}}get speed(){return this._speed}set speed(speed){if(validationService.validateScorm12Speed(this._cmi_element+".speed",speed)){this._speed=speed}}get text(){return this._text}set text(text){if(validationService.validateScorm12Text(this._cmi_element+".text",text)){this._text=text}}toJSON(){this.jsonString=true;const result={audio:this.audio,language:this.language,speed:this.speed,text:this.text};delete this.jsonString;return result}}class CMIInteractions extends CMIArray{constructor(){super({CMIElement:"cmi.interactions",children:scorm12_constants.interactions_children,errorCode:scorm12_errors$1.INVALID_SET_VALUE,errorClass:Scorm12ValidationError})}}class CMIInteractionsObject extends BaseCMI{constructor(){super("cmi.interactions.n");this._id="";this._time="";this._type="";this._weighting="";this._student_response="";this._result="";this._latency="";this.objectives=new CMIArray({CMIElement:"cmi.interactions.n.objectives",errorCode:scorm12_errors$1.INVALID_SET_VALUE,errorClass:Scorm12ValidationError,children:scorm12_constants.objectives_children});this.correct_responses=new CMIArray({CMIElement:"cmi.interactions.correct_responses",errorCode:scorm12_errors$1.INVALID_SET_VALUE,errorClass:Scorm12ValidationError,children:scorm12_constants.correct_responses_children})}initialize(){super.initialize();this.objectives?.initialize();this.correct_responses?.initialize()}reset(){this._initialized=false;this._id="";this._time="";this._type="";this._weighting="";this._student_response="";this._result="";this._latency="";this.objectives?.reset();this.correct_responses?.reset()}get id(){if(!this.jsonString){throw new Scorm12ValidationError(this._cmi_element+".id",scorm12_errors$1.WRITE_ONLY_ELEMENT)}return this._id}set id(id){if(check12ValidFormat(this._cmi_element+".id",id,scorm12_regex.CMIIdentifier)){this._id=id}}get time(){if(!this.jsonString){throw new Scorm12ValidationError(this._cmi_element+".time",scorm12_errors$1.WRITE_ONLY_ELEMENT)}return this._time}set time(time){if(check12ValidFormat(this._cmi_element+".time",time,scorm12_regex.CMITime)){this._time=time}}get type(){if(!this.jsonString){throw new Scorm12ValidationError(this._cmi_element+".type",scorm12_errors$1.WRITE_ONLY_ELEMENT)}return this._type}set type(type){if(check12ValidFormat(this._cmi_element+".type",type,scorm12_regex.CMIType)){this._type=type}}get weighting(){if(!this.jsonString){throw new Scorm12ValidationError(this._cmi_element+".weighting",scorm12_errors$1.WRITE_ONLY_ELEMENT)}return this._weighting}set weighting(weighting){if(check12ValidFormat(this._cmi_element+".weighting",weighting,scorm12_regex.CMIDecimal)&&check12ValidRange(this._cmi_element+".weighting",weighting,scorm12_regex.weighting_range)){this._weighting=weighting}}get student_response(){if(!this.jsonString){throw new Scorm12ValidationError(this._cmi_element+".student_response",scorm12_errors$1.WRITE_ONLY_ELEMENT)}return this._student_response}set student_response(student_response){if(check12ValidFormat(this._cmi_element+".student_response",student_response,scorm12_regex.CMIFeedback,true)){this._student_response=student_response}}get result(){if(!this.jsonString){throw new Scorm12ValidationError(this._cmi_element+".result",scorm12_errors$1.WRITE_ONLY_ELEMENT)}return this._result}set result(result){if(check12ValidFormat(this._cmi_element+".result",result,scorm12_regex.CMIResult)){this._result=result}}get latency(){if(!this.jsonString){throw new Scorm12ValidationError(this._cmi_element+".latency",scorm12_errors$1.WRITE_ONLY_ELEMENT)}return this._latency}set latency(latency){if(check12ValidFormat(this._cmi_element+".latency",latency,scorm12_regex.CMITimespan)){this._latency=latency}}toJSON(){this.jsonString=true;const result={id:this.id,time:this.time,type:this.type,weighting:this.weighting,student_response:this.student_response,result:this.result,latency:this.latency,objectives:this.objectives,correct_responses:this.correct_responses};delete this.jsonString;return result}}class CMIInteractionsObjectivesObject extends BaseCMI{constructor(){super("cmi.interactions.n.objectives.n");this._id=""}reset(){this._initialized=false;this._id=""}get id(){return this._id}set id(id){if(check12ValidFormat(this._cmi_element+".id",id,scorm12_regex.CMIIdentifier)){this._id=id}}toJSON(){this.jsonString=true;const result={id:this.id};delete this.jsonString;return result}}class CMIInteractionsCorrectResponsesObject extends BaseCMI{constructor(){super("cmi.interactions.correct_responses.n");this._pattern=""}reset(){this._initialized=false;this._pattern=""}get pattern(){if(!this.jsonString){throw new Scorm12ValidationError(this._cmi_element+".pattern",scorm12_errors$1.WRITE_ONLY_ELEMENT)}return this._pattern}set pattern(pattern){if(check12ValidFormat(this._cmi_element+".pattern",pattern,scorm12_regex.CMIFeedback,true)){this._pattern=pattern}}toJSON(){this.jsonString=true;const result={pattern:this._pattern};delete this.jsonString;return result}}class CMI extends BaseRootCMI{constructor(cmi_children,student_data,initialized){super("cmi");this.__children="";this.__version="3.4";this._launch_data="";this._comments="";this._comments_from_lms="";if(initialized)this.initialize();this.__children=cmi_children?cmi_children:scorm12_constants.cmi_children;this.core=new CMICore;this.objectives=new CMIObjectives;this.student_data=student_data?student_data:new CMIStudentData;this.student_preference=new CMIStudentPreference;this.interactions=new CMIInteractions}reset(){this._initialized=false;this._launch_data="";this._comments="";this.core?.reset();this.objectives=new CMIObjectives;this.interactions=new CMIInteractions;this.student_data?.reset();this.student_preference?.reset()}initialize(){super.initialize();this.core?.initialize();this.objectives?.initialize();this.student_data?.initialize();this.student_preference?.initialize();this.interactions?.initialize()}toJSON(){this.jsonString=true;const result={suspend_data:this.suspend_data,launch_data:this.launch_data,comments:this.comments,comments_from_lms:this.comments_from_lms,core:this.core,objectives:this.objectives,student_data:this.student_data,student_preference:this.student_preference,interactions:this.interactions};delete this.jsonString;return result}get _version(){return this.__version}set _version(_version){throw new Scorm12ValidationError(this._cmi_element+"._version",scorm12_errors$1.INVALID_SET_VALUE)}get _children(){return this.__children}set _children(_children){throw new Scorm12ValidationError(this._cmi_element+"._children",scorm12_errors$1.INVALID_SET_VALUE)}get suspend_data(){return this.core?.suspend_data}set suspend_data(suspend_data){if(this.core){this.core.suspend_data=suspend_data}}get launch_data(){return this._launch_data}set launch_data(launch_data){if(this.initialized){throw new Scorm12ValidationError(this._cmi_element+".launch_data",scorm12_errors$1.READ_ONLY_ELEMENT)}else{this._launch_data=launch_data}}get comments(){return this._comments}set comments(comments){if(check12ValidFormat(this._cmi_element+".comments",comments,scorm12_regex.CMIString4096,true)){this._comments=comments}}get comments_from_lms(){return this._comments_from_lms}set comments_from_lms(comments_from_lms){if(this.initialized){throw new Scorm12ValidationError(this._cmi_element+".comments_from_lms",scorm12_errors$1.READ_ONLY_ELEMENT)}else{this._comments_from_lms=comments_from_lms}}getCurrentTotalTime(){return this.core.getCurrentTotalTime(this.start_time)}}class NAV extends BaseCMI{constructor(){super("cmi.nav");this._event=""}reset(){this._event="";this._initialized=false}get event(){return this._event}set event(event){if(event===""||check12ValidFormat(this._cmi_element+".event",event,scorm12_regex.NAVEvent)){this._event=event}}toJSON(){this.jsonString=true;const result={event:this.event};delete this.jsonString;return result}}const SuccessStatus={PASSED:"passed",FAILED:"failed",UNKNOWN:"unknown"};const CompletionStatus={COMPLETED:"completed",INCOMPLETE:"incomplete",UNKNOWN:"unknown"};const LogLevelEnum={DEBUG:1,INFO:2,WARN:3,ERROR:4,NONE:5};const DefaultSettings={autocommit:false,autocommitSeconds:10,asyncCommit:false,sendFullCommit:true,lmsCommitUrl:false,dataCommitFormat:"json",commitRequestDataType:"application/json;charset=UTF-8",autoProgress:false,logLevel:LogLevelEnum.ERROR,selfReportSessionTime:false,alwaysSendTotalTime:false,renderCommonCommitFields:false,strict_errors:true,xhrHeaders:{},xhrWithCredentials:false,fetchMode:"cors",responseHandler:async function(response){if(typeof response!=="undefined"){let httpResult=null;try{if(typeof response.json==="function"){httpResult=await response.json()}else if(typeof response.text==="function"){const responseText=await response.text();if(responseText){httpResult=JSON.parse(responseText)}}}catch(e){}if(httpResult===null||!{}.hasOwnProperty.call(httpResult,"result")){if(response.status===200){return{result:global_constants.SCORM_TRUE,errorCode:0}}else{return{result:global_constants.SCORM_FALSE,errorCode:101}}}else{return{result:httpResult.result,errorCode:httpResult.errorCode?httpResult.errorCode:httpResult.result===global_constants.SCORM_TRUE?0:101}}}return{result:global_constants.SCORM_FALSE,errorCode:101}},requestHandler:function(commitObject){return commitObject},onLogMessage:defaultLogHandler,scoItemIds:[],scoItemIdValidator:false,globalObjectiveIds:[]};function defaultLogHandler(messageLevel,logMessage){switch(messageLevel){case"4":case 4:case"ERROR":case LogLevelEnum.ERROR:console.error(logMessage);break;case"3":case 3:case"WARN":case LogLevelEnum.WARN:console.warn(logMessage);break;case"2":case 2:case"INFO":case LogLevelEnum.INFO:console.info(logMessage);break;case"1":case 1:case"DEBUG":case LogLevelEnum.DEBUG:if(console.debug){console.debug(logMessage)}else{console.log(logMessage)}break}}class ScheduledCommit{constructor(API,when,callback){this._cancelled=false;this._API=API;this._timeout=setTimeout(this.wrapper.bind(this),when);this._callback=callback}cancel(){this._cancelled=true;if(this._timeout){clearTimeout(this._timeout)}}wrapper(){if(!this._cancelled){(async()=>await this._API.commit(this._callback))()}}}class HttpService{constructor(settings,error_codes){this.settings=settings;this.error_codes=error_codes}async processHttpRequest(url,params){let immediate=arguments.length>2&&arguments[2]!==undefined?arguments[2]:false;let apiLog=arguments.length>3?arguments[3]:undefined;let processListeners=arguments.length>4?arguments[4]:undefined;const genericError={result:global_constants.SCORM_FALSE,errorCode:this.error_codes.GENERAL};if(immediate){this.performFetch(url,params).then((async response=>{await this.transformResponse(response,processListeners)}));return{result:global_constants.SCORM_TRUE,errorCode:0}}const process=async(url2,params2,settings)=>{try{params2=settings.requestHandler(params2);const response=await this.performFetch(url2,params2);return this.transformResponse(response,processListeners)}catch(e){apiLog("processHttpRequest",e,LogLevelEnum.ERROR);processListeners("CommitError");return genericError}};return await process(url,params,this.settings)}async performFetch(url,params){return fetch(url,{method:"POST",mode:this.settings.fetchMode,body:params instanceof Array?params.join("&"):JSON.stringify(params),headers:{...this.settings.xhrHeaders,"Content-Type":this.settings.commitRequestDataType},credentials:this.settings.xhrWithCredentials?"include":void 0,keepalive:true})}async transformResponse(response,processListeners){const result=typeof this.settings.responseHandler==="function"?await this.settings.responseHandler(response):await response.json();if(response.status>=200&&response.status<=299&&(result.result===true||result.result===global_constants.SCORM_TRUE)){processListeners("CommitSuccess");if(!Object.hasOwnProperty.call(result,"errorCode")){result.errorCode=0}}else{if(!Object.hasOwnProperty.call(result,"errorCode")){result.errorCode=this.error_codes.GENERAL}processListeners("CommitError",null,result.errorCode)}return result}updateSettings(settings){this.settings=settings}}class EventService{constructor(apiLog){this.listenerMap=new Map;this.listenerCount=0;this.apiLog=apiLog}parseListenerName(listenerName){const listenerSplit=listenerName.split(".");if(listenerSplit.length===0)return null;const functionName=listenerSplit[0];let CMIElement=null;if(listenerSplit.length>1){CMIElement=listenerName.replace(`${functionName}.`,"")}return{functionName:functionName,CMIElement:CMIElement}}on(listenerName,callback){if(!callback)return;const listenerFunctions=listenerName.split(" ");for(const listenerFunction of listenerFunctions){const parsedListener=this.parseListenerName(listenerFunction);if(!parsedListener)continue;const{functionName:functionName,CMIElement:CMIElement}=parsedListener;const listeners=this.listenerMap.get(functionName)??[];listeners.push({functionName:functionName,CMIElement:CMIElement,callback:callback});this.listenerMap.set(functionName,listeners);this.listenerCount++;this.apiLog("on",`Added event listener: ${this.listenerCount}`,LogLevelEnum.INFO,functionName)}}off(listenerName,callback){if(!callback)return;const listenerFunctions=listenerName.split(" ");for(const listenerFunction of listenerFunctions){const parsedListener=this.parseListenerName(listenerFunction);if(!parsedListener)continue;const{functionName:functionName,CMIElement:CMIElement}=parsedListener;const listeners=this.listenerMap.get(functionName);if(!listeners)continue;const removeIndex=listeners.findIndex((obj=>obj.CMIElement===CMIElement&&obj.callback===callback));if(removeIndex!==-1){listeners.splice(removeIndex,1);this.listenerCount--;if(listeners.length===0){this.listenerMap.delete(functionName)}else{this.listenerMap.set(functionName,listeners)}this.apiLog("off",`Removed event listener: ${this.listenerCount}`,LogLevelEnum.INFO,functionName)}}}clear(listenerName){const listenerFunctions=listenerName.split(" ");for(const listenerFunction of listenerFunctions){const parsedListener=this.parseListenerName(listenerFunction);if(!parsedListener)continue;const{functionName:functionName,CMIElement:CMIElement}=parsedListener;if(this.listenerMap.has(functionName)){const listeners=this.listenerMap.get(functionName);const newListeners=listeners.filter((obj=>obj.CMIElement!==CMIElement));this.listenerCount-=listeners.length-newListeners.length;if(newListeners.length===0){this.listenerMap.delete(functionName)}else{this.listenerMap.set(functionName,newListeners)}}}}processListeners(functionName,CMIElement,value){this.apiLog(functionName,value,LogLevelEnum.INFO,CMIElement);const listeners=this.listenerMap.get(functionName);if(!listeners)return;for(const listener of listeners){const listenerHasCMIElement=!!listener.CMIElement;let CMIElementsMatch=false;if(CMIElement&&listener.CMIElement){if(listener.CMIElement.endsWith("*")){const prefix=listener.CMIElement.slice(0,-1);CMIElementsMatch=CMIElement.startsWith(prefix)}else{CMIElementsMatch=listener.CMIElement===CMIElement}}if(!listenerHasCMIElement||CMIElementsMatch){this.apiLog("processListeners",`Processing listener: ${listener.functionName}`,LogLevelEnum.DEBUG,CMIElement);if(functionName.startsWith("Sequence")){listener.callback(value)}else if(functionName==="CommitError"){listener.callback(value)}else if(functionName==="CommitSuccess"){listener.callback()}else{listener.callback(CMIElement,value)}}}}reset(){this.listenerMap.clear();this.listenerCount=0}}class SerializationService{loadFromFlattenedJSON(json){let CMIElement=arguments.length>1&&arguments[1]!==undefined?arguments[1]:"";let setCMIValue=arguments.length>2?arguments[2]:undefined;let isNotInitialized=arguments.length>3?arguments[3]:undefined;let setStartingData=arguments.length>4?arguments[4]:undefined;if(!isNotInitialized()){console.error("loadFromFlattenedJSON can only be called before the call to lmsInitialize.");return}const int_pattern=/^(cmi\.interactions\.)(\d+)\.(.*)$/;const obj_pattern=/^(cmi\.objectives\.)(\d+)\.(.*)$/;const interactions=[];const objectives=[];const others=[];for(const key in json){if(Object.prototype.hasOwnProperty.call(json,key)){const intMatch=key.match(int_pattern);if(intMatch){interactions.push({key:key,value:json[key],index:Number(intMatch[2]),field:intMatch[3]});continue}const objMatch=key.match(obj_pattern);if(objMatch){objectives.push({key:key,value:json[key],index:Number(objMatch[2]),field:objMatch[3]});continue}others.push({key:key,value:json[key]})}}interactions.sort(((a,b)=>{if(a.index!==b.index){return a.index-b.index}if(a.field==="id")return-1;if(b.field==="id")return 1;if(a.field==="type")return-1;if(b.field==="type")return 1;return a.field.localeCompare(b.field)}));objectives.sort(((a,b)=>{if(a.index!==b.index){return a.index-b.index}if(a.field==="id")return-1;if(b.field==="id")return 1;return a.field.localeCompare(b.field)}));others.sort(((a,b)=>a.key.localeCompare(b.key)));const processItems=items=>{items.forEach((item=>{const obj={};obj[item.key]=item.value;this.loadFromJSON(unflatten(obj),CMIElement,setCMIValue,isNotInitialized,setStartingData)}))};processItems(interactions);processItems(objectives);processItems(others)}loadFromJSON(json){let CMIElement=arguments.length>1&&arguments[1]!==undefined?arguments[1]:"";let setCMIValue=arguments.length>2?arguments[2]:undefined;let isNotInitialized=arguments.length>3?arguments[3]:undefined;let setStartingData=arguments.length>4?arguments[4]:undefined;if(!isNotInitialized()){console.error("loadFromJSON can only be called before the call to lmsInitialize.");return}CMIElement=CMIElement!==void 0?CMIElement:"cmi";setStartingData(json);for(const key in json){if(Object.prototype.hasOwnProperty.call(json,key)&&json[key]){const currentCMIElement=(CMIElement?CMIElement+".":"")+key;const value=json[key];if(value.constructor===Array){for(let i=0;i<value.length;i++){if(value[i]){const item=value[i];const tempCMIElement=`${currentCMIElement}.${i}`;if(item.constructor===Object){this.loadFromJSON(item,tempCMIElement,setCMIValue,isNotInitialized,setStartingData)}else{setCMIValue(tempCMIElement,item)}}}}else if(value.constructor===Object){this.loadFromJSON(value,currentCMIElement,setCMIValue,isNotInitialized,setStartingData)}else{setCMIValue(currentCMIElement,value)}}}}renderCMIToJSONString(cmi,sendFullCommit){if(sendFullCommit){return JSON.stringify({cmi:cmi})}return JSON.stringify({cmi:cmi},((k,v)=>v===void 0?null:v),2)}renderCMIToJSONObject(cmi,sendFullCommit){return JSON.parse(this.renderCMIToJSONString(cmi,sendFullCommit))}getCommitObject(terminateCommit,alwaysSendTotalTime,renderCommonCommitFields,renderCommitObject,renderCommitCMI,apiLogLevel){const shouldTerminateCommit=terminateCommit||alwaysSendTotalTime;const commitObject=renderCommonCommitFields?renderCommitObject(shouldTerminateCommit):renderCommitCMI(shouldTerminateCommit);if([LogLevelEnum.DEBUG,"1",1,"DEBUG"].includes(apiLogLevel)){console.debug("Commit (terminated: "+(terminateCommit?"yes":"no")+"): ");console.debug(commitObject)}return commitObject}}class LoggingService{constructor(){this._logLevel=LogLevelEnum.ERROR;this._logHandler=defaultLogHandler}static getInstance(){if(!LoggingService._instance){LoggingService._instance=new LoggingService}return LoggingService._instance}setLogLevel(level){this._logLevel=level}getLogLevel(){return this._logLevel}setLogHandler(handler){this._logHandler=handler}log(messageLevel,logMessage){if(this.shouldLog(messageLevel)){this._logHandler(messageLevel,logMessage)}}error(logMessage){this.log(LogLevelEnum.ERROR,logMessage)}warn(logMessage){this.log(LogLevelEnum.WARN,logMessage)}info(logMessage){this.log(LogLevelEnum.INFO,logMessage)}debug(logMessage){this.log(LogLevelEnum.DEBUG,logMessage)}shouldLog(messageLevel){const numericMessageLevel=this.getNumericLevel(messageLevel);const numericLogLevel=this.getNumericLevel(this._logLevel);return numericMessageLevel>=numericLogLevel}getNumericLevel(level){if(level===void 0)return LogLevelEnum.NONE;if(typeof level==="number")return level;switch(level){case"1":case"DEBUG":return LogLevelEnum.DEBUG;case"2":case"INFO":return LogLevelEnum.INFO;case"3":case"WARN":return LogLevelEnum.WARN;case"4":case"ERROR":return LogLevelEnum.ERROR;case"5":case"NONE":return LogLevelEnum.NONE;default:return LogLevelEnum.ERROR}}}function getLoggingService(){return LoggingService.getInstance()}class ErrorHandlingService{constructor(errorCodes,apiLog,getLmsErrorMessageDetails,loggingService){this._lastErrorCode="0";this._errorCodes=errorCodes;this._apiLog=apiLog;this._getLmsErrorMessageDetails=getLmsErrorMessageDetails;this._loggingService=loggingService||getLoggingService()}get lastErrorCode(){return this._lastErrorCode}set lastErrorCode(errorCode){this._lastErrorCode=errorCode}throwSCORMError(CMIElement,errorNumber,message){if(!message){message=this._getLmsErrorMessageDetails(errorNumber,true)}const formattedMessage=`SCORM Error ${errorNumber}: ${message}${CMIElement?` [Element: ${CMIElement}]`:""}`;this._apiLog("throwSCORMError",errorNumber+": "+message,LogLevelEnum.ERROR,CMIElement);this._loggingService.error(formattedMessage);this._lastErrorCode=String(errorNumber)}clearSCORMError(success){if(success!==void 0&&success!==global_constants.SCORM_FALSE){this._lastErrorCode="0"}}handleValueAccessException(CMIElement,e,returnValue){if(e instanceof ValidationError){const validationError=e;this._lastErrorCode=String(validationError.errorCode);const errorMessage=`Validation Error ${validationError.errorCode}: ${validationError.message} [Element: ${CMIElement}]`;this._loggingService.warn(errorMessage);returnValue=global_constants.SCORM_FALSE}else if(e instanceof Error){const errorType=e.constructor.name;const errorMessage=`${errorType}: ${e.message} [Element: ${CMIElement}]`;const stackTrace=e.stack||"";this._loggingService.error(`${errorMessage}\n${stackTrace}`);this.throwSCORMError(CMIElement,this._errorCodes.GENERAL,`${errorType}: ${e.message}`)}else{const errorMessage=`Unknown error occurred while accessing [Element: ${CMIElement}]`;this._loggingService.error(errorMessage);try{const errorDetails=JSON.stringify(e);this._loggingService.error(`Error details: ${errorDetails}`)}catch(jsonError){this._loggingService.error("Could not stringify error object for details")}this.throwSCORMError(CMIElement,this._errorCodes.GENERAL,"Unknown error")}return returnValue}get errorCodes(){return this._errorCodes}}function createErrorHandlingService(errorCodes,apiLog,getLmsErrorMessageDetails,loggingService){return new ErrorHandlingService(errorCodes,apiLog,getLmsErrorMessageDetails,loggingService)}class BaseAPI{constructor(error_codes,settings,httpService,eventService,serializationService,cmiDataService,errorHandlingService,loggingService){this._settings=DefaultSettings;if(new.target===BaseAPI){throw new TypeError("Cannot construct BaseAPI instances directly")}this.currentState=global_constants.STATE_NOT_INITIALIZED;this._error_codes=error_codes;if(settings){this.settings=settings}this.apiLogLevel=this.settings.logLevel;this.selfReportSessionTime=this.settings.selfReportSessionTime;if(this.apiLogLevel===void 0){this.apiLogLevel=LogLevelEnum.NONE}this._loggingService=loggingService||getLoggingService();this._loggingService.setLogLevel(this.apiLogLevel);if(this.settings.onLogMessage){this._loggingService.setLogHandler(this.settings.onLogMessage)}this._httpService=httpService||new HttpService(this.settings,this._error_codes);this._eventService=eventService||new EventService(((functionName,message,level,element)=>this.apiLog(functionName,message,level,element)));this._serializationService=serializationService||new SerializationService;this._errorHandlingService=errorHandlingService||createErrorHandlingService(this._error_codes,((functionName,message,level,element)=>this.apiLog(functionName,message,level,element)),((errorNumber,detail)=>this.getLmsErrorMessageDetails(errorNumber,detail)))}get lastErrorCode(){return this._errorHandlingService?.lastErrorCode??"0"}set lastErrorCode(errorCode){if(this._errorHandlingService){this._errorHandlingService.lastErrorCode=errorCode}}commonReset(settings){this.apiLog("reset","Called",LogLevelEnum.INFO);this.settings={...this.settings,...settings};this.clearScheduledCommit();this.currentState=global_constants.STATE_NOT_INITIALIZED;this.lastErrorCode="0";this._eventService.reset();this.startingData=void 0}initialize(callbackName,initializeMessage,terminationMessage){let returnValue=global_constants.SCORM_FALSE;if(this.isInitialized()){this.throwSCORMError("api",this._error_codes.INITIALIZED,initializeMessage)}else if(this.isTerminated()){this.throwSCORMError("api",this._error_codes.TERMINATED,terminationMessage)}else{if(this.selfReportSessionTime){this.cmi.setStartTime()}this.currentState=global_constants.STATE_INITIALIZED;this.lastErrorCode="0";returnValue=global_constants.SCORM_TRUE;this.processListeners(callbackName)}this.apiLog(callbackName,"returned: "+returnValue,LogLevelEnum.INFO);this.clearSCORMError(returnValue);return returnValue}apiLog(functionName,logMessage,messageLevel,CMIElement){logMessage=formatMessage(functionName,logMessage,CMIElement);if(messageLevel>=this.apiLogLevel){this._loggingService.log(messageLevel,logMessage)}}get error_codes(){return this._error_codes}get settings(){return this._settings}set settings(settings){const previousSettings=this._settings;this._settings={...this._settings,...settings};this._httpService?.updateSettings(this._settings);if(settings.logLevel!==void 0&&settings.logLevel!==previousSettings.logLevel){this.apiLogLevel=settings.logLevel;this._loggingService?.setLogLevel(settings.logLevel)}if(settings.onLogMessage!==void 0&&settings.onLogMessage!==previousSettings.onLogMessage){this._loggingService?.setLogHandler(settings.onLogMessage)}}async terminate(callbackName,checkTerminated){let returnValue=global_constants.SCORM_FALSE;if(this.checkState(checkTerminated,this._error_codes.TERMINATION_BEFORE_INIT,this._error_codes.MULTIPLE_TERMINATION)){this.currentState=global_constants.STATE_TERMINATED;const result=await this.storeData(true);if((result.errorCode??0)>0){this.throwSCORMError("api",result.errorCode)}returnValue=result?.result??global_constants.SCORM_FALSE;if(checkTerminated)this.lastErrorCode="0";returnValue=global_constants.SCORM_TRUE;this.processListeners(callbackName)}this.apiLog(callbackName,"returned: "+returnValue,LogLevelEnum.INFO);this.clearSCORMError(returnValue);return returnValue}getValue(callbackName,checkTerminated,CMIElement){let returnValue="";if(this.checkState(checkTerminated,this._error_codes.RETRIEVE_BEFORE_INIT,this._error_codes.RETRIEVE_AFTER_TERM)){try{returnValue=this.getCMIValue(CMIElement)}catch(e){returnValue=this.handleValueAccessException(CMIElement,e,returnValue)}this.processListeners(callbackName,CMIElement)}this.apiLog(callbackName,": returned: "+returnValue,LogLevelEnum.INFO,CMIElement);if(returnValue===void 0){return""}if(this.lastErrorCode==="0"){this.clearSCORMError(returnValue)}return returnValue}setValue(callbackName,commitCallback,checkTerminated,CMIElement,value){if(value!==void 0){value=String(value)}let returnValue=global_constants.SCORM_FALSE;if(this.checkState(checkTerminated,this._error_codes.STORE_BEFORE_INIT,this._error_codes.STORE_AFTER_TERM)){try{returnValue=this.setCMIValue(CMIElement,value)}catch(e){returnValue=this.handleValueAccessException(CMIElement,e,returnValue)}this.processListeners(callbackName,CMIElement,value)}if(returnValue===void 0){returnValue=global_constants.SCORM_FALSE}if(String(this.lastErrorCode)==="0"){if(this.settings.autocommit){this.scheduleCommit(this.settings.autocommitSeconds*1e3,commitCallback)}}this.apiLog(callbackName,": "+value+": result: "+returnValue,LogLevelEnum.INFO,CMIElement);if(this.lastErrorCode==="0"){this.clearSCORMError(returnValue)}return returnValue}async commit(callbackName){let checkTerminated=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;this.clearScheduledCommit();let returnValue=global_constants.SCORM_FALSE;if(this.checkState(checkTerminated,this._error_codes.COMMIT_BEFORE_INIT,this._error_codes.COMMIT_AFTER_TERM)){const result=await this.storeData(false);if((result.errorCode??0)>0){this.throwSCORMError("api",result.errorCode)}returnValue=result?.result??global_constants.SCORM_FALSE;this.apiLog(callbackName," Result: "+returnValue,LogLevelEnum.DEBUG,"HttpRequest");if(checkTerminated)this.lastErrorCode="0";this.processListeners(callbackName)}this.apiLog(callbackName,"returned: "+returnValue,LogLevelEnum.INFO);if(this.lastErrorCode==="0"){this.clearSCORMError(returnValue)}return returnValue}getLastError(callbackName){const returnValue=String(this.lastErrorCode);this.processListeners(callbackName);this.apiLog(callbackName,"returned: "+returnValue,LogLevelEnum.INFO);return returnValue}getErrorString(callbackName,CMIErrorCode){let returnValue="";if(CMIErrorCode!==null&&CMIErrorCode!==""){returnValue=this.getLmsErrorMessageDetails(CMIErrorCode);this.processListeners(callbackName)}this.apiLog(callbackName,"returned: "+returnValue,LogLevelEnum.INFO);return returnValue}getDiagnostic(callbackName,CMIErrorCode){let returnValue="";if(CMIErrorCode!==null&&CMIErrorCode!==""){returnValue=this.getLmsErrorMessageDetails(CMIErrorCode,true);this.processListeners(callbackName)}this.apiLog(callbackName,"returned: "+returnValue,LogLevelEnum.INFO);return returnValue}checkState(checkTerminated,beforeInitError,afterTermError){if(this.isNotInitialized()){this.throwSCORMError("api",beforeInitError);return false}else if(checkTerminated&&this.isTerminated()){this.throwSCORMError("api",afterTermError);return false}return true}getLmsErrorMessageDetails(_errorNumber){throw new Error("The getLmsErrorMessageDetails method has not been implemented")}getCMIValue(_CMIElement){throw new Error("The getCMIValue method has not been implemented")}setCMIValue(_CMIElement,_value){throw new Error("The setCMIValue method has not been implemented")}_commonSetCMIValue(methodName,scorm2004,CMIElement,value){if(!CMIElement||CMIElement===""){return global_constants.SCORM_FALSE}this.lastErrorCode="0";const structure=CMIElement.split(".");let refObject=this;let returnValue=global_constants.SCORM_FALSE;let foundFirstIndex=false;const invalidErrorMessage=`The data model element passed to ${methodName} (${CMIElement}) is not a valid SCORM data model element.`;const invalidErrorCode=scorm2004?this._error_codes.UNDEFINED_DATA_MODEL:this._error_codes.GENERAL;for(let idx=0;idx<structure.length;idx++){const attribute=structure[idx];if(idx===structure.length-1){if(scorm2004&&attribute.substring(0,8)==="{target="){if(this.isInitialized()){this.throwSCORMError(CMIElement,this._error_codes.READ_ONLY_ELEMENT);break}else{refObject={...refObject,attribute:value}}}else if(!this._checkObjectHasProperty(refObject,attribute)){this.throwSCORMError(CMIElement,invalidErrorCode,invalidErrorMessage);break}else{if(stringMatches(CMIElement,"\\.correct_responses\\.\\d+$")&&this.isInitialized()&&attribute!=="pattern"){this.validateCorrectResponse(CMIElement,value);if(this.lastErrorCode!=="0"){this.throwSCORMError(CMIElement,this._error_codes.TYPE_MISMATCH);break}}if(!scorm2004||this._errorHandlingService.lastErrorCode==="0"){refObject[attribute]=value;returnValue=global_constants.SCORM_TRUE}}}else{refObject=refObject[attribute];if(!refObject){this.throwSCORMError(CMIElement,invalidErrorCode,invalidErrorMessage);break}if(refObject instanceof CMIArray){const index=parseInt(structure[idx+1],10);if(!isNaN(index)){const item=refObject.childArray[index];if(item){refObject=item;foundFirstIndex=true}else{const newChild=this.getChildElement(CMIElement,value,foundFirstIndex);foundFirstIndex=true;if(!newChild){if(this.lastErrorCode==="0"){this.throwSCORMError(CMIElement,invalidErrorCode,invalidErrorMessage)}break}else{if(refObject.initialized)newChild.initialize();refObject.childArray[index]=newChild;refObject=newChild}}idx++}}}}if(returnValue===global_constants.SCORM_FALSE){this.apiLog(methodName,`There was an error setting the value for: ${CMIElement}, value of: ${value}`,LogLevelEnum.WARN)}return returnValue}_commonGetCMIValue(methodName,scorm2004,CMIElement){if(!CMIElement||CMIElement===""){return""}const structure=CMIElement.split(".");let refObject=this;let attribute=null;const uninitializedErrorMessage=`The data model element passed to ${methodName} (${CMIElement}) has not been initialized.`;const invalidErrorMessage=`The data model element passed to ${methodName} (${CMIElement}) is not a valid SCORM data model element.`;const invalidErrorCode=scorm2004?this._error_codes.UNDEFINED_DATA_MODEL:this._error_codes.GENERAL;for(let idx=0;idx<structure.length;idx++){attribute=structure[idx];if(!scorm2004){if(idx===structure.length-1){if(!this._checkObjectHasProperty(refObject,attribute)){this.throwSCORMError(CMIElement,invalidErrorCode,invalidErrorMessage);return}}}else{if(String(attribute).substring(0,8)==="{target="&&typeof refObject._isTargetValid=="function"){const target=String(attribute).substring(8,String(attribute).length-9);return refObject._isTargetValid(target)}else if(!this._checkObjectHasProperty(refObject,attribute)){this.throwSCORMError(CMIElement,invalidErrorCode,invalidErrorMessage);return}}refObject=refObject[attribute];if(refObject===void 0){this.throwSCORMError(CMIElement,invalidErrorCode,invalidErrorMessage);break}if(refObject instanceof CMIArray){const index=parseInt(structure[idx+1],10);if(!isNaN(index)){const item=refObject.childArray[index];if(item){refObject=item}else{this.throwSCORMError(CMIElement,this._error_codes.VALUE_NOT_INITIALIZED,uninitializedErrorMessage);break}idx++}}}if(refObject===null||refObject===void 0){if(!scorm2004){if(attribute==="_children"){this.throwSCORMError(CMIElement,this._error_codes.CHILDREN_ERROR,void 0)}else if(attribute==="_count"){this.throwSCORMError(CMIElement,this._error_codes.COUNT_ERROR,void 0)}}}else{return refObject}}isInitialized(){return this.currentState===global_constants.STATE_INITIALIZED}isNotInitialized(){return this.currentState===global_constants.STATE_NOT_INITIALIZED}isTerminated(){return this.currentState===global_constants.STATE_TERMINATED}on(listenerName,callback){this._eventService.on(listenerName,callback)}off(listenerName,callback){this._eventService.off(listenerName,callback)}clear(listenerName){this._eventService.clear(listenerName)}processListeners(functionName,CMIElement,value){this._eventService.processListeners(functionName,CMIElement,value)}throwSCORMError(CMIElement,errorNumber,message){this._errorHandlingService.throwSCORMError(CMIElement,errorNumber,message)}clearSCORMError(success){this._errorHandlingService.clearSCORMError(success)}loadFromFlattenedJSON(json,CMIElement){if(!CMIElement){CMIElement=""}this._serializationService.loadFromFlattenedJSON(json,CMIElement,((CMIElement2,value)=>this.setCMIValue(CMIElement2,value)),(()=>this.isNotInitialized()),(data=>{this.startingData=data}))}loadFromJSON(json){let CMIElement=arguments.length>1&&arguments[1]!==undefined?arguments[1]:"";this._serializationService.loadFromJSON(json,CMIElement,((CMIElement2,value)=>this.setCMIValue(CMIElement2,value)),(()=>this.isNotInitialized()),(data=>{this.startingData=data}))}renderCMIToJSONString(){return this._serializationService.renderCMIToJSONString(this.cmi,this.settings.sendFullCommit)}renderCMIToJSONObject(){return this._serializationService.renderCMIToJSONObject(this.cmi,this.settings.sendFullCommit)}async processHttpRequest(url,params){let immediate=arguments.length>2&&arguments[2]!==undefined?arguments[2]:false;return this._httpService.processHttpRequest(url,params,immediate,((functionName,message,level,element)=>this.apiLog(functionName,message,level,element)),((functionName,CMIElement,value)=>this.processListeners(functionName,CMIElement,value)))}scheduleCommit(when,callback){if(!this._timeout){this._timeout=new ScheduledCommit(this,when,callback);this.apiLog("scheduleCommit","scheduled",LogLevelEnum.DEBUG,"")}}clearScheduledCommit(){if(this._timeout){this._timeout.cancel();this._timeout=void 0;this.apiLog("clearScheduledCommit","cleared",LogLevelEnum.DEBUG,"")}}_checkObjectHasProperty(StringKeyMap2,attribute){return Object.hasOwnProperty.call(StringKeyMap2,attribute)||Object.getOwnPropertyDescriptor(Object.getPrototypeOf(StringKeyMap2),attribute)!=null||attribute in StringKeyMap2}handleValueAccessException(CMIElement,e,returnValue){if(e instanceof ValidationError){this.lastErrorCode=String(e.errorCode);returnValue=global_constants.SCORM_FALSE;this.throwSCORMError(CMIElement,e.errorCode,e.errorMessage)}else{if(e instanceof Error&&e.message){this.throwSCORMError(CMIElement,this._error_codes.GENERAL,e.message)}else{this.throwSCORMError(CMIElement,this._error_codes.GENERAL,"Unknown error")}}return returnValue}getCommitObject(terminateCommit){return this._serializationService.getCommitObject(terminateCommit,this.settings.alwaysSendTotalTime,this.settings.renderCommonCommitFields,(terminateCommit2=>this.renderCommitObject(terminateCommit2)),(terminateCommit2=>this.renderCommitCMI(terminateCommit2)),this.apiLogLevel)}}class Scorm12API extends BaseAPI{constructor(settings){if(settings){if(settings.mastery_override===void 0){settings.mastery_override=false}}super(scorm12_errors$1,settings);this.statusSetByModule=false;this.cmi=new CMI;this.nav=new NAV;this.LMSInitialize=this.lmsInitialize;this.LMSFinish=this.lmsFinish;this.LMSGetValue=this.lmsGetValue;this.LMSSetValue=this.lmsSetValue;this.LMSCommit=this.lmsCommit;this.LMSGetLastError=this.lmsGetLastError;this.LMSGetErrorString=this.lmsGetErrorString;this.LMSGetDiagnostic=this.lmsGetDiagnostic}reset(settings){this.commonReset(settings);this.cmi?.reset();this.nav?.reset()}lmsInitialize(){this.cmi.initialize();if(this.cmi.core.lesson_status){this.statusSetByModule=true}else{this.cmi.core.lesson_status="not attempted"}return this.initialize("LMSInitialize","LMS was already initialized!","LMS is already finished!")}lmsFinish(){(async()=>{await this.internalFinish()})();return global_constants.SCORM_TRUE}async internalFinish(){const result=await this.terminate("LMSFinish",true);if(result===global_constants.SCORM_TRUE){if(this.nav.event!==""){if(this.nav.event==="continue"){this.processListeners("SequenceNext")}else{this.processListeners("SequencePrevious")}}else if(this.settings.autoProgress){this.processListeners("SequenceNext")}}return result}lmsGetValue(CMIElement){return this.getValue("LMSGetValue",false,CMIElement)}lmsSetValue(CMIElement,value){if(CMIElement==="cmi.core.lesson_status"){this.statusSetByModule=true}return this.setValue("LMSSetValue","LMSCommit",false,CMIElement,value)}lmsCommit(){if(this.settings.asyncCommit){this.scheduleCommit(500,"LMSCommit")}else{(async()=>{await this.commit("LMSCommit",false)})()}return global_constants.SCORM_TRUE}lmsGetLastError(){return this.getLastError("LMSGetLastError")}lmsGetErrorString(CMIErrorCode){return this.getErrorString("LMSGetErrorString",CMIErrorCode)}lmsGetDiagnostic(CMIErrorCode){return this.getDiagnostic("LMSGetDiagnostic",CMIErrorCode)}setCMIValue(CMIElement,value){return this._commonSetCMIValue("LMSSetValue",false,CMIElement,value)}getCMIValue(CMIElement){return this._commonGetCMIValue("getCMIValue",false,CMIElement)}getChildElement(CMIElement,_value,foundFirstIndex){if(stringMatches(CMIElement,"cmi\\.objectives\\.\\d+")){return new CMIObjectivesObject}else if(foundFirstIndex&&stringMatches(CMIElement,"cmi\\.interactions\\.\\d+\\.correct_responses\\.\\d+")){return new CMIInteractionsCorrectResponsesObject}else if(foundFirstIndex&&stringMatches(CMIElement,"cmi\\.interactions\\.\\d+\\.objectives\\.\\d+")){return new CMIInteractionsObjectivesObject}else if(!foundFirstIndex&&stringMatches(CMIElement,"cmi\\.interactions\\.\\d+")){return new CMIInteractionsObject}return null}validateCorrectResponse(_CMIElement,_value){}getLmsErrorMessageDetails(errorNumber,detail){let basicMessage="No Error";let detailMessage="No Error";errorNumber=String(errorNumber);if(scorm12_constants.error_descriptions[errorNumber]){basicMessage=scorm12_constants.error_descriptions[errorNumber].basicMessage;detailMessage=scorm12_constants.error_descriptions[errorNumber].detailMessage}return detail?detailMessage:basicMessage}replaceWithAnotherScormAPI(newAPI){this.cmi=newAPI.cmi}renderCommitCMI(terminateCommit){const cmiExport=this.renderCMIToJSONObject();if(terminateCommit){cmiExport.cmi.core.total_time=this.cmi.getCurrentTotalTime()}const result=[];const flattened=flatten(cmiExport);switch(this.settings.dataCommitFormat){case"flattened":return flatten(cmiExport);case"params":for(const item in flattened){if({}.hasOwnProperty.call(flattened,item)){result.push(`${item}=${flattened[item]}`)}}return result;case"json":default:return cmiExport}}renderCommitObject(terminateCommit){const cmiExport=this.renderCommitCMI(terminateCommit);const totalTimeHHMMSS=this.cmi.getCurrentTotalTime();const totalTimeSeconds=getTimeAsSeconds(totalTimeHHMMSS,scorm12_regex.CMITimespan);const lessonStatus=this.cmi.core.lesson_status;let completionStatus=CompletionStatus.UNKNOWN;let successStatus=SuccessStatus.UNKNOWN;if(lessonStatus){completionStatus=lessonStatus==="completed"||lessonStatus==="passed"?CompletionStatus.COMPLETED:CompletionStatus.INCOMPLETE;if(lessonStatus==="passed"){successStatus=SuccessStatus.PASSED}else if(lessonStatus==="failed"){successStatus=SuccessStatus.FAILED}}const score=this.cmi.core.score;let scoreObject=null;if(score){scoreObject={};if(!Number.isNaN(Number.parseFloat(score.raw))){scoreObject.raw=Number.parseFloat(score.raw)}if(!Number.isNaN(Number.parseFloat(score.min))){scoreObject.min=Number.parseFloat(score.min)}if(!Number.isNaN(Number.parseFloat(score.max))){scoreObject.max=Number.parseFloat(score.max)}}const commitObject={successStatus:successStatus,completionStatus:completionStatus,runtimeData:cmiExport,totalTimeSeconds:totalTimeSeconds};if(scoreObject){commitObject.score=scoreObject}return commitObject}async storeData(terminateCommit){if(terminateCommit){const originalStatus=this.cmi.core.lesson_status;if(!this.cmi.core.lesson_status||!this.statusSetByModule&&this.cmi.core.lesson_status==="not attempted"){this.cmi.core.lesson_status="completed"}if(this.cmi.core.lesson_mode==="normal"){if(this.cmi.core.credit==="credit"){if(this.settings.mastery_override&&this.cmi.student_data.mastery_score!==""&&this.cmi.core.score.raw!==""){this.cmi.core.lesson_status=parseFloat(this.cmi.core.score.raw)>=parseFloat(this.cmi.student_data.mastery_score)?"passed":"failed"}}}else if(this.cmi.core.lesson_mode==="browse"){if((this.startingData?.cmi?.core?.lesson_status||"")===""&&originalStatus==="not attempted"){this.cmi.core.lesson_status="browsed"}}}const commitObject=this.getCommitObject(terminateCommit);if(typeof this.settings.lmsCommitUrl==="string"){return await this.processHttpRequest(this.settings.lmsCommitUrl,commitObject,terminateCommit)}else{return{result:global_constants.SCORM_TRUE,errorCode:0}}}}export{Scorm12API as default};
//# sourceMappingURL=scorm12.js.map
