class CrossFrameLMS{constructor(api,targetOrigin){this._targetOrigin="*",this._api=api,targetOrigin&&(this._targetOrigin=targetOrigin),window.addEventListener("message",this._handleMessage.bind(this)),this._setupEventForwarding()}_handleMessage(event){const data=event.data;data&&data.messageId&&data.method&&this._processMessage(data,event.source,event.origin)}_processMessage(data,source,origin){const{messageId:messageId,method:method,params:params,sab:sab}=data;let result,error;try{if("function"!=typeof this._api[method])throw Error(`Method ${method} not found on API`);result=this._api[method](...params)}catch(e){error=e instanceof Error?{message:e.message,stack:e.stack}:{message:e+""}}source.postMessage({messageId:messageId,result:result,error:error,sab:sab},this._targetOrigin,sab?[sab]:void 0)}_setupEventForwarding(){this._api.on("*",((event,...args)=>{Array.from(document.querySelectorAll("iframe")).forEach((frame=>{frame.contentWindow&&frame.contentWindow.postMessage({event:event,args:args},this._targetOrigin)}))}))}}class CrossFrameAPI{constructor(targetOrigin){this._targetOrigin="*",this._pendingRequests=new Map,this._eventListeners=new Map,this._messageIdCounter=0,this._childFrames=new Set,this._isInitialized=!1,this._lastError="0",this._cache=new Map,this._sabBuffers=new Map,targetOrigin&&(this._targetOrigin=targetOrigin),window.addEventListener("message",this._handleMessage.bind(this))}_syncCall(method,params,timeoutMs=5e3){try{const sab=new SharedArrayBuffer(Int32Array.BYTES_PER_ELEMENT),int32=new Int32Array(sab),messageId=`${Date.now()}-sync-${this._messageIdCounter++}`;this._sabBuffers.set(messageId,sab),window.parent.postMessage({messageId:messageId,method:method,params:params,sab:sab},this._targetOrigin,[sab]);const status=Atomics.wait(int32,0,0,timeoutMs);this._sabBuffers.delete(messageId);const pending=this._pendingRequests.get(messageId)||{};if(this._pendingRequests.delete(messageId),"timed-out"===status)throw Error(`SCORM ${method} timeout after ${timeoutMs}ms`);if(pending.error)throw pending.error;return pending.result}catch(e){throw e}}_handleMessage(event){const data=event.data,source=event.source,isFromChildFrame=source!==window.parent&&source!==window;if(!data.messageId||void 0===data.result&&void 0===data.error||isFromChildFrame||this._handleMethodResponse(data),data.messageId&&data.method&&isFromChildFrame){this._childFrames.add(source);const{messageId:messageId,method:method,params:params}=data,forwardedMessageId="forwarded-"+messageId;this._pendingRequests.set(forwardedMessageId,{resolve:result=>{source.postMessage({messageId:messageId,result:result},this._targetOrigin)},reject:error=>{source.postMessage({messageId:messageId,error:error},this._targetOrigin)},source:source}),window.parent.postMessage({messageId:forwardedMessageId,method:method,params:params},this._targetOrigin),setTimeout((()=>{if(this._pendingRequests.has(forwardedMessageId)){const request=this._pendingRequests.get(forwardedMessageId);this._pendingRequests.delete(forwardedMessageId),request?.source&&request.source.postMessage({messageId:messageId,error:{message:"Timeout waiting for response to method "+method}},this._targetOrigin)}}),5e3)}data.event&&!isFromChildFrame&&(this._handleEvent(data.event,...data.args||[]),this._forwardEventToChildFrames(data.event,data.args||[]))}_handleMethodResponse(data){const{messageId:messageId,result:result,error:error}=data;if(data.sab){const int32=new Int32Array(data.sab);Atomics.store(int32,0,1),Atomics.notify(int32,0)}const pendingRequest=this._pendingRequests.get(messageId);if(pendingRequest){const{resolve:resolve,reject:reject}=pendingRequest;error?reject(error):resolve(result),this._pendingRequests.delete(messageId)}}_handleEvent(event,...args){const listeners=this._eventListeners.get(event);listeners&&listeners.forEach((listener=>{try{listener(...args)}catch(e){console.error(`Error in event listener for ${event}:`,e)}}));const allListeners=this._eventListeners.get("*");allListeners&&allListeners.forEach((listener=>{try{listener(event,...args)}catch(e){console.error(`Error in "*" event listener for ${event}:`,e)}}))}_forwardEventToChildFrames(event,args){this._childFrames.forEach((frame=>{try{frame.postMessage({event:event,args:args},this._targetOrigin)}catch(e){console.error("Error forwarding event to child frame:",e)}}))}_sendMessage(method,params=[]){return"undefined"==typeof window||void 0===window.parent||"function"!=typeof window.parent.postMessage?Promise.resolve(""):new Promise(((resolve,reject)=>{const messageId=`${Date.now()}-${this._messageIdCounter++}`;this._pendingRequests.set(messageId,{resolve:resolve,reject:reject});try{window.parent.postMessage({messageId:messageId,method:method,params:params},this._targetOrigin),setTimeout((()=>{this._pendingRequests.has(messageId)&&(this._pendingRequests.delete(messageId),reject(Error("Timeout waiting for response to method "+method)))}),5e3)}catch(e){this._pendingRequests.delete(messageId),reject(e)}}))}async initialize(){const result=await this._sendMessage("lmsInitialize");return this._isInitialized="true"===result,this._isInitialized}lmsInitialize(){try{return this._syncCall("lmsInitialize",[])+""}catch(e){return this._lastError="101","false"}}async Initialize(){return this.initialize()}LMSInitialize(){try{return this._syncCall("LMSInitialize",[])+""}catch(e){return this._lastError="101","false"}}async terminate(){const success="true"===await this._sendMessage("lmsFinish");return success&&(this._isInitialized=!1),success}lmsFinish(){try{return this._syncCall("lmsFinish",[])+""}catch(e){return this._lastError="101","false"}}async Terminate(){return this.terminate()}LMSFinish(){try{return this._syncCall("LMSFinish",[])+""}catch(e){return this._lastError="101","false"}}async getValue(element){try{const value=await this._sendMessage("lmsGetValue",[element])+"";return this._cache.set(element,value),value}catch(e){return this._lastError="101",console.error(`Error in getValue(${element}):`,e),""}}lmsGetValue(element){try{return this._syncCall("lmsGetValue",[element])+""}catch(e){return this._lastError="101",""}}async GetValue(element){return this.getValue(element)}LMSGetValue(element){try{return this._syncCall("LMSGetValue",[element])+""}catch(e){return this._lastError="101",""}}async setValue(element,value){try{const success="true"===await this._sendMessage("lmsSetValue",[element,value]);return success&&this._cache.set(element,value+""),success}catch(e){return this._lastError="101",console.error(`Error in setValue(${element}, ${value}):`,e),!1}}lmsSetValue(element,value){try{return this._syncCall("lmsSetValue",[element,value])+""}catch(e){return this._lastError="101","false"}}async SetValue(element,value){return this.setValue(element,value)}LMSSetValue(element,value){try{return this._syncCall("LMSSetValue",[element,value])+""}catch(e){return this._lastError="101","false"}}async commit(){try{return"true"===await this._sendMessage("lmsCommit")}catch(e){return this._lastError="101",console.error("Error in commit:",e),!1}}lmsCommit(){try{return this._syncCall("lmsCommit",[])+""}catch(e){return this._lastError="101","false"}}async Commit(){return this.commit()}LMSCommit(){try{return this._syncCall("LMSCommit",[])+""}catch(e){return this._lastError="101","false"}}async getLastError(){try{const result=await this._sendMessage("lmsGetLastError");return this._lastError=result+"",this._lastError}catch(e){return console.error("Error in getLastError:",e),"101"}}lmsGetLastError(){try{return this._syncCall("lmsGetLastError",[])+""}catch(e){return"101"}}async GetLastError(){return this.getLastError()}LMSGetLastError(){try{return this._syncCall("LMSGetLastError",[])+""}catch(e){return"101"}}async getErrorString(errorCode){try{const errorString=await this._sendMessage("lmsGetErrorString",[errorCode])+"";return this._cache.set("error_"+errorCode,errorString),errorString}catch(e){return console.error(`Error in getErrorString(${errorCode}):`,e),""}}lmsGetErrorString(errorCode){try{return this._syncCall("lmsGetErrorString",[errorCode])+""}catch(e){return"No error"}}async GetErrorString(errorCode){return this.getErrorString(errorCode)}LMSGetErrorString(errorCode){try{return this._syncCall("LMSGetErrorString",[errorCode])+""}catch(e){return"No error"}}async getDiagnostic(errorCode){try{const diagnostic=await this._sendMessage("lmsGetDiagnostic",[errorCode])+"";return this._cache.set("diagnostic_"+errorCode,diagnostic),diagnostic}catch(e){return console.error(`Error in getDiagnostic(${errorCode}):`,e),""}}lmsGetDiagnostic(errorCode){try{return this._syncCall("lmsGetDiagnostic",[errorCode])+""}catch(e){return"No diagnostic information available"}}async GetDiagnostic(errorCode){return this.getDiagnostic(errorCode)}LMSGetDiagnostic(errorCode){try{return this._syncCall("LMSGetDiagnostic",[errorCode])+""}catch(e){return"No diagnostic information available"}}async isInitialized(){try{const result=await this._sendMessage("isInitialized");return this._isInitialized=!!result,this._isInitialized}catch(e){return console.error("Error in isInitialized:",e),this._isInitialized}}getIsInitialized(){return this._isInitialized}on(event,callback){this._eventListeners.has(event)||this._eventListeners.set(event,new Set);const listeners=this._eventListeners.get(event);listeners&&listeners.add(callback)}off(event,callback){const listeners=this._eventListeners.get(event);listeners&&(listeners.delete(callback),0===listeners.size&&this._eventListeners.delete(event))}}function createCrossFrameServer(api,targetOrigin){return new CrossFrameLMS(api,targetOrigin)}function createCrossFrameClient(targetOrigin){return new CrossFrameAPI(targetOrigin)}export{CrossFrameAPI,CrossFrameLMS,createCrossFrameClient,createCrossFrameServer};
//# sourceMappingURL=cross-frame-facade.min.js.map
