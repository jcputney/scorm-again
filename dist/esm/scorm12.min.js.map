{"version":3,"file":"scorm12.min.js","mappings":"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","sources":["webpack://scorm-again/./src/constants/default_settings.ts","webpack://scorm-again/./src/helpers/scheduled_commit.ts","webpack://scorm-again/./src/BaseAPI.ts","webpack://scorm-again/./src/utilities/debounce.ts","webpack://scorm-again/./src/cmi/common/array.ts","webpack://scorm-again/./src/cmi/common/base_cmi.ts","webpack://scorm-again/./src/cmi/common/score.ts","webpack://scorm-again/./src/cmi/common/validation.ts","webpack://scorm-again/./src/cmi/aicc/core.ts","webpack://scorm-again/./src/cmi/scorm12/cmi.ts","webpack://scorm-again/./src/cmi/scorm12/interactions.ts","webpack://scorm-again/./src/cmi/scorm12/nav.ts","webpack://scorm-again/./src/cmi/scorm12/objectives.ts","webpack://scorm-again/./src/cmi/scorm12/student_data.ts","webpack://scorm-again/./src/cmi/scorm12/student_preference.ts","webpack://scorm-again/./src/cmi/scorm12/validation.ts","webpack://scorm-again/./src/constants/api_constants.ts","webpack://scorm-again/./src/constants/enums.ts","webpack://scorm-again/./src/constants/error_codes.ts","webpack://scorm-again/./src/constants/regex.ts","webpack://scorm-again/./src/exceptions.ts","webpack://scorm-again/./src/utilities.ts","webpack://scorm-again/./node_modules/tslib/tslib.es6.mjs","webpack://scorm-again/webpack/bootstrap","webpack://scorm-again/webpack/runtime/define property getters","webpack://scorm-again/webpack/runtime/hasOwnProperty shorthand","webpack://scorm-again/./src/Scorm12API.ts"],"sourcesContent":["import { ResultObject, Settings } from \"../types/api_types\";\nimport APIConstants from \"./api_constants\";\n\n/**\n * Default settings for the SCORM API\n */\nexport const DefaultSettings: Settings = {\n  autocommit: false,\n  autocommitSeconds: 10,\n  asyncCommit: false,\n  sendFullCommit: true,\n  lmsCommitUrl: false,\n  dataCommitFormat: \"json\",\n  commitRequestDataType: \"application/json;charset=UTF-8\",\n  autoProgress: false,\n  logLevel: APIConstants.global.LOG_LEVEL_ERROR,\n  selfReportSessionTime: false,\n  alwaysSendTotalTime: false,\n  renderCommonCommitFields: false,\n  strict_errors: true,\n  xhrHeaders: {},\n  xhrWithCredentials: false,\n  fetchMode: \"cors\",\n  responseHandler: async function (response: Response): Promise<ResultObject> {\n    if (typeof response !== \"undefined\") {\n      const httpResult = JSON.parse(await response.text());\n      if (\n        httpResult === null ||\n        !{}.hasOwnProperty.call(httpResult, \"result\")\n      ) {\n        if (response.status === 200) {\n          return {\n            result: APIConstants.global.SCORM_TRUE,\n            errorCode: 0,\n          };\n        } else {\n          return {\n            result: APIConstants.global.SCORM_FALSE,\n            errorCode: 101,\n          };\n        }\n      } else {\n        return {\n          result: httpResult.result,\n          errorCode: httpResult.errorCode\n            ? httpResult.errorCode\n            : httpResult.result === APIConstants.global.SCORM_TRUE\n              ? 0\n              : 101,\n        };\n      }\n    }\n    return {\n      result: APIConstants.global.SCORM_FALSE,\n      errorCode: 101,\n    };\n  },\n  requestHandler: function (commitObject) {\n    return commitObject;\n  },\n  onLogMessage: function (messageLevel, logMessage) {\n    switch (messageLevel) {\n      case APIConstants.global.LOG_LEVEL_ERROR:\n        console.error(logMessage);\n        break;\n      case APIConstants.global.LOG_LEVEL_WARNING:\n        console.warn(logMessage);\n        break;\n      case APIConstants.global.LOG_LEVEL_INFO:\n        console.info(logMessage);\n        break;\n      case APIConstants.global.LOG_LEVEL_DEBUG:\n        if (console.debug) {\n          console.debug(logMessage);\n        } else {\n          console.log(logMessage);\n        }\n        break;\n    }\n  },\n  scoItemIds: [],\n  scoItemIdValidator: false,\n};\n","import BaseAPI from \"../BaseAPI\";\n\n/**\n * Private class that wraps a timeout call to the commit() function\n */\nexport class ScheduledCommit {\n  private _API;\n  private _cancelled = false;\n  private readonly _timeout;\n  private readonly _callback;\n\n  /**\n   * Constructor for ScheduledCommit\n   * @param {BaseAPI} API\n   * @param {number} when\n   * @param {string} callback\n   */\n  constructor(API: BaseAPI, when: number, callback: string) {\n    this._API = API;\n    this._timeout = setTimeout(this.wrapper.bind(this), when);\n    this._callback = callback;\n  }\n\n  /**\n   * Cancel any currently scheduled commit\n   */\n  cancel() {\n    this._cancelled = true;\n    if (this._timeout) {\n      clearTimeout(this._timeout);\n    }\n  }\n\n  /**\n   * Wrap the API commit call to check if the call has already been cancelled\n   */\n  wrapper() {\n    if (!this._cancelled) {\n      (async () => await this._API.commit(this._callback))();\n    }\n  }\n}\n","import { CMIArray } from \"./cmi/common/array\";\nimport { ValidationError } from \"./exceptions\";\nimport ErrorCodes, { ErrorCode } from \"./constants/error_codes\";\nimport APIConstants from \"./constants/api_constants\";\nimport { formatMessage, stringMatches, unflatten } from \"./utilities\";\nimport { BaseCMI } from \"./cmi/common/base_cmi\";\nimport { debounce } from \"./utilities/debounce\";\nimport {\n  RefObject,\n  CommitObject,\n  ResultObject,\n  Settings,\n} from \"./types/api_types\";\nimport { DefaultSettings } from \"./constants/default_settings\";\nimport { IBaseAPI } from \"./interfaces/IBaseAPI\";\nimport { ScheduledCommit } from \"./helpers/scheduled_commit\";\n\n/**\n * Base API class for AICC, SCORM 1.2, and SCORM 2004. Should be considered\n * abstract, and never initialized on its own.\n */\nexport default abstract class BaseAPI implements IBaseAPI {\n  private _timeout?: ScheduledCommit;\n  private readonly _error_codes: ErrorCode;\n  private _settings: Settings = DefaultSettings;\n\n  /**\n   * Constructor for Base API class. Sets some shared API fields, as well as\n   * sets up options for the API.\n   * @param {ErrorCode} error_codes\n   * @param {Settings} settings\n   */\n  protected constructor(error_codes: ErrorCode, settings?: Settings) {\n    if (new.target === BaseAPI) {\n      throw new TypeError(\"Cannot construct BaseAPI instances directly\");\n    }\n    this.currentState = APIConstants.global.STATE_NOT_INITIALIZED;\n    this.lastErrorCode = \"0\";\n    this.listenerArray = [];\n\n    this._error_codes = error_codes;\n\n    if (settings) {\n      this.settings = settings;\n    }\n    this.apiLogLevel = this.settings.logLevel;\n    this.selfReportSessionTime = this.settings.selfReportSessionTime;\n  }\n\n  public abstract cmi: BaseCMI;\n  public startingData?: RefObject;\n\n  public currentState: number;\n  public lastErrorCode: string;\n  public listenerArray: any[];\n  public apiLogLevel: number;\n  public selfReportSessionTime: boolean;\n\n  abstract reset(settings?: Settings): void;\n\n  /**\n   * Common reset method for all APIs. New settings are merged with the existing settings.\n   * @param {Settings} settings\n   * @protected\n   */\n  commonReset(settings?: Settings): void {\n    this.settings = { ...this.settings, ...settings };\n\n    this.currentState = APIConstants.global.STATE_NOT_INITIALIZED;\n    this.lastErrorCode = \"0\";\n    this.listenerArray = [];\n  }\n\n  /**\n   * Initialize the API\n   * @param {string} callbackName\n   * @param {string} initializeMessage\n   * @param {string} terminationMessage\n   * @return {string}\n   */\n  initialize(\n    callbackName: string,\n    initializeMessage?: string,\n    terminationMessage?: string,\n  ): string {\n    let returnValue = APIConstants.global.SCORM_FALSE;\n\n    if (this.isInitialized()) {\n      this.throwSCORMError(this._error_codes.INITIALIZED, initializeMessage);\n    } else if (this.isTerminated()) {\n      this.throwSCORMError(this._error_codes.TERMINATED, terminationMessage);\n    } else {\n      if (this.selfReportSessionTime) {\n        this.cmi.setStartTime();\n      }\n\n      this.currentState = APIConstants.global.STATE_INITIALIZED;\n      this.lastErrorCode = \"0\";\n      returnValue = APIConstants.global.SCORM_TRUE;\n      this.processListeners(callbackName);\n    }\n\n    this.apiLog(\n      callbackName,\n      \"returned: \" + returnValue,\n      APIConstants.global.LOG_LEVEL_INFO,\n    );\n    this.clearSCORMError(returnValue);\n\n    return returnValue;\n  }\n\n  abstract lmsInitialize(): string;\n\n  abstract lmsFinish(): string;\n\n  abstract lmsGetValue(CMIElement: string): string;\n\n  abstract lmsSetValue(CMIElement: string, value: any): string;\n\n  abstract lmsCommit(): string;\n\n  abstract lmsGetLastError(): string;\n\n  abstract lmsGetErrorString(CMIErrorCode: string | number): string;\n\n  abstract lmsGetDiagnostic(CMIErrorCode: string | number): string;\n\n  /**\n   * Abstract method for validating that a response is correct.\n   *\n   * @param {string} _CMIElement\n   * @param {any} _value\n   */\n  abstract validateCorrectResponse(_CMIElement: string, _value: any): void;\n\n  /**\n   * Gets or builds a new child element to add to the array.\n   * APIs that inherit BaseAPI should override this method.\n   *\n   * @param {string} _CMIElement - unused\n   * @param {*} _value - unused\n   * @param {boolean} _foundFirstIndex - unused\n   * @return {BaseCMI|null}\n   * @abstract\n   */\n  abstract getChildElement(\n    _CMIElement: string,\n    _value: any,\n    _foundFirstIndex: boolean,\n  ): BaseCMI | null;\n\n  /**\n   * Attempts to store the data to the LMS, logs data if no LMS configured\n   * APIs that inherit BaseAPI should override this function\n   *\n   * @param {boolean} _calculateTotalTime\n   * @return {ResultObject}\n   * @abstract\n   */\n  abstract storeData(_calculateTotalTime: boolean): Promise<ResultObject>;\n\n  /**\n   * Render the cmi object to the proper format for LMS commit\n   * APIs that inherit BaseAPI should override this function\n   *\n   * @param {boolean} _terminateCommit\n   * @return {RefObject|Array}\n   * @abstract\n   */\n  abstract renderCommitCMI(_terminateCommit: boolean): RefObject | Array<any>;\n\n  /**\n   * Render the commit object to the shortened format for LMS commit\n   * @param {boolean} _terminateCommit\n   * @return {CommitObject}\n   */\n  abstract renderCommitObject(_terminateCommit: boolean): CommitObject;\n\n  /**\n   * Logging for all SCORM actions\n   *\n   * @param {string} functionName\n   * @param {string} logMessage\n   * @param {number} messageLevel\n   * @param {string} CMIElement\n   */\n  apiLog(\n    functionName: string,\n    logMessage: string,\n    messageLevel: number,\n    CMIElement?: string,\n  ) {\n    logMessage = formatMessage(functionName, logMessage, CMIElement);\n\n    if (messageLevel >= this.apiLogLevel) {\n      this.settings.onLogMessage(messageLevel, logMessage);\n    }\n  }\n\n  /**\n   * Getter for _error_codes\n   * @return {ErrorCode}\n   */\n  get error_codes(): ErrorCode {\n    return this._error_codes;\n  }\n\n  /**\n   * Getter for _settings\n   * @return {Settings}\n   */\n  get settings(): Settings {\n    return this._settings;\n  }\n\n  /**\n   * Setter for _settings\n   * @param {Settings} settings\n   */\n  set settings(settings: Settings) {\n    this._settings = { ...this._settings, ...settings };\n  }\n\n  /**\n   * Terminates the current run of the API\n   * @param {string} callbackName\n   * @param {boolean} checkTerminated\n   * @return {string}\n   */\n  async terminate(\n    callbackName: string,\n    checkTerminated: boolean,\n  ): Promise<string> {\n    let returnValue = APIConstants.global.SCORM_FALSE;\n\n    if (\n      this.checkState(\n        checkTerminated,\n        this._error_codes.TERMINATION_BEFORE_INIT,\n        this._error_codes.MULTIPLE_TERMINATION,\n      )\n    ) {\n      this.currentState = APIConstants.global.STATE_TERMINATED;\n\n      const result: ResultObject = await this.storeData(true);\n      if (typeof result.errorCode !== \"undefined\" && result.errorCode > 0) {\n        this.throwSCORMError(result.errorCode);\n      }\n      returnValue =\n        typeof result !== \"undefined\" && result.result\n          ? result.result\n          : APIConstants.global.SCORM_FALSE;\n\n      if (checkTerminated) this.lastErrorCode = \"0\";\n\n      returnValue = APIConstants.global.SCORM_TRUE;\n      this.processListeners(callbackName);\n    }\n\n    this.apiLog(\n      callbackName,\n      \"returned: \" + returnValue,\n      APIConstants.global.LOG_LEVEL_INFO,\n    );\n    this.clearSCORMError(returnValue);\n\n    return returnValue;\n  }\n\n  /**\n   * Get the value of the CMIElement.\n   *\n   * @param {string} callbackName\n   * @param {boolean} checkTerminated\n   * @param {string} CMIElement\n   * @return {string}\n   */\n  getValue(\n    callbackName: string,\n    checkTerminated: boolean,\n    CMIElement: string,\n  ): string {\n    let returnValue: string = \"\";\n\n    if (\n      this.checkState(\n        checkTerminated,\n        this._error_codes.RETRIEVE_BEFORE_INIT,\n        this._error_codes.RETRIEVE_AFTER_TERM,\n      )\n    ) {\n      if (checkTerminated) this.lastErrorCode = \"0\";\n      try {\n        returnValue = this.getCMIValue(CMIElement);\n      } catch (e) {\n        returnValue = this.handleValueAccessException(e, returnValue);\n      }\n      this.processListeners(callbackName, CMIElement);\n    }\n\n    this.apiLog(\n      callbackName,\n      \": returned: \" + returnValue,\n      APIConstants.global.LOG_LEVEL_INFO,\n      CMIElement,\n    );\n\n    if (returnValue === undefined) {\n      return \"\";\n    }\n\n    this.clearSCORMError(returnValue);\n\n    return returnValue;\n  }\n\n  /**\n   * Sets the value of the CMIElement.\n   *\n   * @param {string} callbackName\n   * @param {string} commitCallback\n   * @param {boolean} checkTerminated\n   * @param {string} CMIElement\n   * @param {*} value\n   * @return {string}\n   */\n  setValue(\n    callbackName: string,\n    commitCallback: string,\n    checkTerminated: boolean,\n    CMIElement: string,\n    value: any,\n  ): string {\n    if (value !== undefined) {\n      value = String(value);\n    }\n    let returnValue: string = APIConstants.global.SCORM_FALSE;\n\n    if (\n      this.checkState(\n        checkTerminated,\n        this._error_codes.STORE_BEFORE_INIT,\n        this._error_codes.STORE_AFTER_TERM,\n      )\n    ) {\n      if (checkTerminated) this.lastErrorCode = \"0\";\n      try {\n        returnValue = this.setCMIValue(CMIElement, value);\n      } catch (e) {\n        this.handleValueAccessException(e, returnValue);\n      }\n      this.processListeners(callbackName, CMIElement, value);\n    }\n\n    if (returnValue === undefined) {\n      returnValue = APIConstants.global.SCORM_FALSE;\n    }\n\n    // If we didn't have any errors while setting the data, go ahead and\n    // schedule a commit, if autocommit is turned on\n    if (String(this.lastErrorCode) === \"0\") {\n      if (this.settings.autocommit && !this._timeout) {\n        this.scheduleCommit(\n          this.settings.autocommitSeconds * 1000,\n          commitCallback,\n        );\n      }\n    }\n\n    this.apiLog(\n      callbackName,\n      \": \" + value + \": result: \" + returnValue,\n      APIConstants.global.LOG_LEVEL_INFO,\n      CMIElement,\n    );\n    this.clearSCORMError(returnValue);\n\n    return returnValue;\n  }\n\n  /**\n   * Orders LMS to store all content parameters\n   * @param {string} callbackName\n   * @param {boolean} checkTerminated\n   * @return {string}\n   */\n  async commit(\n    callbackName: string,\n    checkTerminated: boolean = false,\n  ): Promise<string> {\n    this.clearScheduledCommit();\n\n    let returnValue = APIConstants.global.SCORM_FALSE;\n\n    if (\n      this.checkState(\n        checkTerminated,\n        this._error_codes.COMMIT_BEFORE_INIT,\n        this._error_codes.COMMIT_AFTER_TERM,\n      )\n    ) {\n      const result = await this.storeData(false);\n      if (result.errorCode && result.errorCode > 0) {\n        this.throwSCORMError(result.errorCode);\n      }\n      returnValue =\n        typeof result !== \"undefined\" && result.result\n          ? result.result\n          : APIConstants.global.SCORM_FALSE;\n\n      this.apiLog(\n        callbackName,\n        \" Result: \" + returnValue,\n        APIConstants.global.LOG_LEVEL_DEBUG,\n        \"HttpRequest\",\n      );\n\n      if (checkTerminated) this.lastErrorCode = \"0\";\n\n      this.processListeners(callbackName);\n    }\n\n    this.apiLog(\n      callbackName,\n      \"returned: \" + returnValue,\n      APIConstants.global.LOG_LEVEL_INFO,\n    );\n    this.clearSCORMError(returnValue);\n\n    return returnValue;\n  }\n\n  /**\n   * Returns last error code\n   * @param {string} callbackName\n   * @return {string}\n   */\n  getLastError(callbackName: string): string {\n    const returnValue = String(this.lastErrorCode);\n\n    this.processListeners(callbackName);\n\n    this.apiLog(\n      callbackName,\n      \"returned: \" + returnValue,\n      APIConstants.global.LOG_LEVEL_INFO,\n    );\n\n    return returnValue;\n  }\n\n  /**\n   * Returns the errorNumber error description\n   *\n   * @param {string} callbackName\n   * @param {(string|number)} CMIErrorCode\n   * @return {string}\n   */\n  getErrorString(callbackName: string, CMIErrorCode: string | number): string {\n    let returnValue = \"\";\n\n    if (CMIErrorCode !== null && CMIErrorCode !== \"\") {\n      returnValue = this.getLmsErrorMessageDetails(CMIErrorCode);\n      this.processListeners(callbackName);\n    }\n\n    this.apiLog(\n      callbackName,\n      \"returned: \" + returnValue,\n      APIConstants.global.LOG_LEVEL_INFO,\n    );\n\n    return returnValue;\n  }\n\n  /**\n   * Returns a comprehensive description of the errorNumber error.\n   *\n   * @param {string} callbackName\n   * @param {(string|number)} CMIErrorCode\n   * @return {string}\n   */\n  getDiagnostic(callbackName: string, CMIErrorCode: string | number): string {\n    let returnValue = \"\";\n\n    if (CMIErrorCode !== null && CMIErrorCode !== \"\") {\n      returnValue = this.getLmsErrorMessageDetails(CMIErrorCode, true);\n      this.processListeners(callbackName);\n    }\n\n    this.apiLog(\n      callbackName,\n      \"returned: \" + returnValue,\n      APIConstants.global.LOG_LEVEL_INFO,\n    );\n\n    return returnValue;\n  }\n\n  /**\n   * Checks the LMS state and ensures it has been initialized.\n   *\n   * @param {boolean} checkTerminated\n   * @param {number} beforeInitError\n   * @param {number} afterTermError\n   * @return {boolean}\n   */\n  checkState(\n    checkTerminated: boolean,\n    beforeInitError: number,\n    afterTermError: number,\n  ): boolean {\n    if (this.isNotInitialized()) {\n      this.throwSCORMError(beforeInitError);\n      return false;\n    } else if (checkTerminated && this.isTerminated()) {\n      this.throwSCORMError(afterTermError);\n      return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Returns the message that corresponds to errorNumber\n   * APIs that inherit BaseAPI should override this function\n   *\n   * @param {(string|number)} _errorNumber\n   * @param {boolean} _detail\n   * @return {string}\n   * @abstract\n   */\n  getLmsErrorMessageDetails(\n    _errorNumber: string | number,\n    _detail: boolean = false,\n  ): string {\n    throw new Error(\n      \"The getLmsErrorMessageDetails method has not been implemented\",\n    );\n  }\n\n  /**\n   * Gets the value for the specific element.\n   * APIs that inherit BaseAPI should override this function\n   *\n   * @param {string} _CMIElement\n   * @return {string}\n   * @abstract\n   */\n  getCMIValue(_CMIElement: string): string {\n    throw new Error(\"The getCMIValue method has not been implemented\");\n  }\n\n  /**\n   * Sets the value for the specific element.\n   * APIs that inherit BaseAPI should override this function\n   *\n   * @param {string} _CMIElement\n   * @param {any} _value\n   * @return {string}\n   * @abstract\n   */\n  setCMIValue(_CMIElement: string, _value: any): string {\n    throw new Error(\"The setCMIValue method has not been implemented\");\n  }\n\n  /**\n   * Shared API method to set a valid for a given element.\n   *\n   * @param {string} methodName\n   * @param {boolean} scorm2004\n   * @param {string} CMIElement\n   * @param {any} value\n   * @return {string}\n   */\n  _commonSetCMIValue(\n    methodName: string,\n    scorm2004: boolean,\n    CMIElement: string,\n    value: any,\n  ): string {\n    if (!CMIElement || CMIElement === \"\") {\n      return APIConstants.global.SCORM_FALSE;\n    }\n\n    const structure = CMIElement.split(\".\");\n    let refObject: RefObject = this;\n    let returnValue = APIConstants.global.SCORM_FALSE;\n    let foundFirstIndex = false;\n\n    const invalidErrorMessage = `The data model element passed to ${methodName} (${CMIElement}) is not a valid SCORM data model element.`;\n    const invalidErrorCode = scorm2004\n      ? this._error_codes.UNDEFINED_DATA_MODEL\n      : this._error_codes.GENERAL;\n\n    for (let idx = 0; idx < structure.length; idx++) {\n      const attribute = structure[idx];\n\n      if (idx === structure.length - 1) {\n        if (scorm2004 && attribute.substring(0, 8) === \"{target=\") {\n          if (this.isInitialized()) {\n            this.throwSCORMError(this._error_codes.READ_ONLY_ELEMENT);\n          } else {\n            refObject = {\n              ...refObject,\n              attribute: value,\n            };\n          }\n        } else if (!this._checkObjectHasProperty(refObject, attribute)) {\n          this.throwSCORMError(invalidErrorCode, invalidErrorMessage);\n        } else {\n          if (\n            stringMatches(CMIElement, \"\\\\.correct_responses\\\\.\\\\d+\") &&\n            this.isInitialized()\n          ) {\n            this.validateCorrectResponse(CMIElement, value);\n          }\n\n          if (!scorm2004 || this.lastErrorCode === \"0\") {\n            refObject[attribute] = value;\n            returnValue = APIConstants.global.SCORM_TRUE;\n          }\n        }\n      } else {\n        refObject = refObject[attribute];\n        if (!refObject) {\n          this.throwSCORMError(invalidErrorCode, invalidErrorMessage);\n          break;\n        }\n\n        if (refObject instanceof CMIArray) {\n          const index = parseInt(structure[idx + 1], 10);\n\n          // SCO is trying to set an item on an array\n          if (!isNaN(index)) {\n            const item = refObject.childArray[index];\n\n            if (item) {\n              refObject = item;\n              foundFirstIndex = true;\n            } else {\n              const newChild = this.getChildElement(\n                CMIElement,\n                value,\n                foundFirstIndex,\n              );\n              foundFirstIndex = true;\n\n              if (!newChild) {\n                this.throwSCORMError(invalidErrorCode, invalidErrorMessage);\n              } else {\n                if (refObject.initialized) newChild.initialize();\n\n                refObject.childArray.push(newChild);\n                refObject = newChild;\n              }\n            }\n\n            // Have to update idx value to skip the array position\n            idx++;\n          }\n        }\n      }\n    }\n\n    if (returnValue === APIConstants.global.SCORM_FALSE) {\n      this.apiLog(\n        methodName,\n        `There was an error setting the value for: ${CMIElement}, value of: ${value}`,\n        APIConstants.global.LOG_LEVEL_WARNING,\n      );\n    }\n\n    return returnValue;\n  }\n\n  /**\n   * Gets a value from the CMI Object\n   *\n   * @param {string} methodName\n   * @param {boolean} scorm2004\n   * @param {string} CMIElement\n   * @return {any}\n   */\n  _commonGetCMIValue(\n    methodName: string,\n    scorm2004: boolean,\n    CMIElement: string,\n  ): any {\n    if (!CMIElement || CMIElement === \"\") {\n      return \"\";\n    }\n\n    const structure = CMIElement.split(\".\");\n    let refObject: RefObject = this;\n    let attribute = null;\n\n    const uninitializedErrorMessage = `The data model element passed to ${methodName} (${CMIElement}) has not been initialized.`;\n    const invalidErrorMessage = `The data model element passed to ${methodName} (${CMIElement}) is not a valid SCORM data model element.`;\n    const invalidErrorCode = scorm2004\n      ? this._error_codes.UNDEFINED_DATA_MODEL\n      : this._error_codes.GENERAL;\n\n    for (let idx = 0; idx < structure.length; idx++) {\n      attribute = structure[idx];\n\n      if (!scorm2004) {\n        if (idx === structure.length - 1) {\n          if (!this._checkObjectHasProperty(refObject, attribute)) {\n            this.throwSCORMError(invalidErrorCode, invalidErrorMessage);\n            return;\n          }\n        }\n      } else {\n        if (\n          String(attribute).substring(0, 8) === \"{target=\" &&\n          typeof refObject._isTargetValid == \"function\"\n        ) {\n          const target = String(attribute).substring(\n            8,\n            String(attribute).length - 9,\n          );\n          return refObject._isTargetValid(target);\n        } else if (!this._checkObjectHasProperty(refObject, attribute)) {\n          this.throwSCORMError(invalidErrorCode, invalidErrorMessage);\n          return;\n        }\n      }\n\n      refObject = refObject[attribute];\n      if (refObject === undefined) {\n        this.throwSCORMError(invalidErrorCode, invalidErrorMessage);\n        break;\n      }\n\n      if (refObject instanceof CMIArray) {\n        const index = parseInt(structure[idx + 1], 10);\n\n        // SCO is trying to set an item on an array\n        if (!isNaN(index)) {\n          const item = refObject.childArray[index];\n\n          if (item) {\n            refObject = item;\n          } else {\n            this.throwSCORMError(\n              this._error_codes.VALUE_NOT_INITIALIZED,\n              uninitializedErrorMessage,\n            );\n            break;\n          }\n\n          // Have to update idx value to skip the array position\n          idx++;\n        }\n      }\n    }\n\n    if (refObject === null || refObject === undefined) {\n      if (!scorm2004) {\n        if (attribute === \"_children\") {\n          this.throwSCORMError(ErrorCodes.scorm12.CHILDREN_ERROR);\n        } else if (attribute === \"_count\") {\n          this.throwSCORMError(ErrorCodes.scorm12.COUNT_ERROR);\n        }\n      }\n    } else {\n      return refObject;\n    }\n  }\n\n  /**\n   * Returns true if the API's current state is STATE_INITIALIZED\n   *\n   * @return {boolean}\n   */\n  isInitialized(): boolean {\n    return this.currentState === APIConstants.global.STATE_INITIALIZED;\n  }\n\n  /**\n   * Returns true if the API's current state is STATE_NOT_INITIALIZED\n   *\n   * @return {boolean}\n   */\n  isNotInitialized(): boolean {\n    return this.currentState === APIConstants.global.STATE_NOT_INITIALIZED;\n  }\n\n  /**\n   * Returns true if the API's current state is STATE_TERMINATED\n   *\n   * @return {boolean}\n   */\n  isTerminated(): boolean {\n    return this.currentState === APIConstants.global.STATE_TERMINATED;\n  }\n\n  /**\n   * Provides a mechanism for attaching to a specific SCORM event\n   *\n   * @param {string} listenerName\n   * @param {function} callback\n   */\n  on(listenerName: string, callback: Function) {\n    if (!callback) return;\n\n    const listenerFunctions = listenerName.split(\" \");\n    for (let i = 0; i < listenerFunctions.length; i++) {\n      const listenerSplit = listenerFunctions[i].split(\".\");\n      if (listenerSplit.length === 0) return;\n\n      const functionName = listenerSplit[0];\n\n      let CMIElement = null;\n      if (listenerSplit.length > 1) {\n        CMIElement = listenerName.replace(functionName + \".\", \"\");\n      }\n\n      this.listenerArray.push({\n        functionName: functionName,\n        CMIElement: CMIElement,\n        callback: callback,\n      });\n\n      this.apiLog(\n        \"on\",\n        `Added event listener: ${this.listenerArray.length}`,\n        APIConstants.global.LOG_LEVEL_INFO,\n        functionName,\n      );\n    }\n  }\n\n  /**\n   * Provides a mechanism for detaching a specific SCORM event listener\n   *\n   * @param {string} listenerName\n   * @param {function} callback\n   */\n  off(listenerName: string, callback: Function) {\n    if (!callback) return;\n\n    const listenerFunctions = listenerName.split(\" \");\n    for (let i = 0; i < listenerFunctions.length; i++) {\n      const listenerSplit = listenerFunctions[i].split(\".\");\n      if (listenerSplit.length === 0) return;\n\n      const functionName = listenerSplit[0];\n\n      let CMIElement = null;\n      if (listenerSplit.length > 1) {\n        CMIElement = listenerName.replace(functionName + \".\", \"\");\n      }\n\n      const removeIndex = this.listenerArray.findIndex(\n        (obj) =>\n          obj.functionName === functionName &&\n          obj.CMIElement === CMIElement &&\n          obj.callback === callback,\n      );\n      if (removeIndex !== -1) {\n        this.listenerArray.splice(removeIndex, 1);\n        this.apiLog(\n          \"off\",\n          `Removed event listener: ${this.listenerArray.length}`,\n          APIConstants.global.LOG_LEVEL_INFO,\n          functionName,\n        );\n      }\n    }\n  }\n\n  /**\n   * Provides a mechanism for clearing all listeners from a specific SCORM event\n   *\n   * @param {string} listenerName\n   */\n  clear(listenerName: string) {\n    const listenerFunctions = listenerName.split(\" \");\n    for (let i = 0; i < listenerFunctions.length; i++) {\n      const listenerSplit = listenerFunctions[i].split(\".\");\n      if (listenerSplit.length === 0) return;\n\n      const functionName = listenerSplit[0];\n\n      let CMIElement = null;\n      if (listenerSplit.length > 1) {\n        CMIElement = listenerName.replace(functionName + \".\", \"\");\n      }\n\n      this.listenerArray = this.listenerArray.filter(\n        (obj) =>\n          obj.functionName !== functionName && obj.CMIElement !== CMIElement,\n      );\n    }\n  }\n\n  /**\n   * Processes any 'on' listeners that have been created\n   *\n   * @param {string} functionName\n   * @param {string} CMIElement\n   * @param {any} value\n   */\n  processListeners(functionName: string, CMIElement?: string, value?: any) {\n    this.apiLog(\n      functionName,\n      value,\n      APIConstants.global.LOG_LEVEL_INFO,\n      CMIElement,\n    );\n    for (let i = 0; i < this.listenerArray.length; i++) {\n      const listener = this.listenerArray[i];\n      const functionsMatch = listener.functionName === functionName;\n      const listenerHasCMIElement = !!listener.CMIElement;\n      let CMIElementsMatch = false;\n      if (\n        CMIElement &&\n        listener.CMIElement &&\n        listener.CMIElement.substring(listener.CMIElement.length - 1) === \"*\"\n      ) {\n        CMIElementsMatch =\n          CMIElement.indexOf(\n            listener.CMIElement.substring(0, listener.CMIElement.length - 1),\n          ) === 0;\n      } else {\n        CMIElementsMatch = listener.CMIElement === CMIElement;\n      }\n\n      if (functionsMatch && (!listenerHasCMIElement || CMIElementsMatch)) {\n        this.apiLog(\n          \"processListeners\",\n          `Processing listener: ${listener.functionName}`,\n          APIConstants.global.LOG_LEVEL_INFO,\n          CMIElement,\n        );\n        listener.callback(CMIElement, value);\n      }\n    }\n  }\n\n  /**\n   * Throws a SCORM error\n   *\n   * @param {number} errorNumber\n   * @param {string} message\n   */\n  throwSCORMError(errorNumber: number, message?: string) {\n    if (!message) {\n      message = this.getLmsErrorMessageDetails(errorNumber);\n    }\n\n    this.apiLog(\n      \"throwSCORMError\",\n      errorNumber + \": \" + message,\n      APIConstants.global.LOG_LEVEL_ERROR,\n    );\n\n    this.lastErrorCode = String(errorNumber);\n  }\n\n  /**\n   * Clears the last SCORM error code on success.\n   *\n   * @param {string} success\n   */\n  clearSCORMError(success: string) {\n    if (success !== undefined && success !== APIConstants.global.SCORM_FALSE) {\n      this.lastErrorCode = \"0\";\n    }\n  }\n\n  /**\n   * Load the CMI from a flattened JSON object\n   * @param {RefObject} json\n   * @param {string} CMIElement\n   */\n  loadFromFlattenedJSON(json: RefObject, CMIElement?: string) {\n    if (!CMIElement) {\n      // by default, we start from a blank string because we're expecting each element to start with `cmi`\n      CMIElement = \"\";\n    }\n    if (!this.isNotInitialized()) {\n      console.error(\n        \"loadFromFlattenedJSON can only be called before the call to lmsInitialize.\",\n      );\n      return;\n    }\n\n    /**\n     * Tests two strings against a given regular expression pattern and determines a numeric or null result based on the matching criterion.\n     *\n     * @param {string} a - The first string to be tested against the pattern.\n     * @param {string} c - The second string to be tested against the pattern.\n     * @param {RegExp} a_pattern - The regular expression pattern to test the strings against.\n     * @return {number | null} A numeric result based on the matching criterion, or null if the strings do not match the pattern.\n     */\n    function testPattern(\n      a: string,\n      c: string,\n      a_pattern: RegExp,\n    ): number | null {\n      const a_match = a.match(a_pattern);\n\n      let c_match;\n      if (a_match !== null && (c_match = c.match(a_pattern)) !== null) {\n        const a_num = Number(a_match[2]);\n        const c_num = Number(c_match[2]);\n        if (a_num === c_num) {\n          if (a_match[3] === \"id\") {\n            return -1;\n          } else if (a_match[3] === \"type\") {\n            if (c_match[3] === \"id\") {\n              return 1;\n            } else {\n              return -1;\n            }\n          } else {\n            return 1;\n          }\n        }\n        return a_num - c_num;\n      }\n\n      return null;\n    }\n\n    const int_pattern = /^(cmi\\.interactions\\.)(\\d+)\\.(.*)$/;\n    const obj_pattern = /^(cmi\\.objectives\\.)(\\d+)\\.(.*)$/;\n\n    const result = Object.keys(json).map(function (key) {\n      return [String(key), json[key]];\n    });\n\n    // CMI interactions need to have id and type loaded before any other fields\n    result.sort(function ([a, _b], [c, _d]) {\n      let test;\n      if ((test = testPattern(a, c, int_pattern)) !== null) {\n        return test;\n      }\n      if ((test = testPattern(a, c, obj_pattern)) !== null) {\n        return test;\n      }\n\n      if (a < c) {\n        return -1;\n      }\n      if (a > c) {\n        return 1;\n      }\n      return 0;\n    });\n\n    let obj: RefObject;\n    result.forEach((element) => {\n      obj = {};\n      obj[element[0]] = element[1];\n      this.loadFromJSON(unflatten(obj), CMIElement);\n    });\n  }\n\n  /**\n   * Loads CMI data from a JSON object.\n   *\n   * @param {RefObject} json\n   * @param {string} CMIElement\n   */\n  loadFromJSON(json: RefObject, CMIElement: string) {\n    if (!this.isNotInitialized()) {\n      console.error(\n        \"loadFromJSON can only be called before the call to lmsInitialize.\",\n      );\n      return;\n    }\n\n    CMIElement = CMIElement !== undefined ? CMIElement : \"cmi\";\n\n    this.startingData = json;\n\n    // could this be refactored down to flatten(json) then setCMIValue on each?\n    for (const key in json) {\n      if ({}.hasOwnProperty.call(json, key) && json[key]) {\n        const currentCMIElement = (CMIElement ? CMIElement + \".\" : \"\") + key;\n        const value = json[key];\n\n        if (value[\"childArray\"]) {\n          for (let i = 0; i < value[\"childArray\"].length; i++) {\n            this.loadFromJSON(\n              value[\"childArray\"][i],\n              currentCMIElement + \".\" + i,\n            );\n          }\n        } else if (value.constructor === Object) {\n          this.loadFromJSON(value, currentCMIElement);\n        } else {\n          this.setCMIValue(currentCMIElement, value);\n        }\n      }\n    }\n  }\n\n  /**\n   * Render the CMI object to JSON for sending to an LMS.\n   *\n   * @return {string}\n   */\n  renderCMIToJSONString(): string {\n    const cmi = this.cmi;\n    // Do we want/need to return fields that have no set value?\n    if (this.settings.sendFullCommit) {\n      return JSON.stringify({ cmi });\n    }\n    return JSON.stringify({ cmi }, (k, v) => (v === undefined ? null : v), 2);\n  }\n\n  /**\n   * Returns a JS object representing the current cmi\n   * @return {object}\n   */\n  renderCMIToJSONObject(): object {\n    return JSON.parse(this.renderCMIToJSONString());\n  }\n\n  /**\n   * Send the request to the LMS\n   * @param {string} url\n   * @param {CommitObject|RefObject|Array} params\n   * @param {boolean} immediate\n   * @return {ResultObject}\n   */\n  async processHttpRequest(\n    url: string,\n    params: CommitObject | RefObject | Array<any>,\n    immediate: boolean = false,\n  ): Promise<ResultObject> {\n    const api = this;\n    const genericError: ResultObject = {\n      result: APIConstants.global.SCORM_FALSE,\n      errorCode: this.error_codes.GENERAL,\n    };\n\n    // if we are terminating the module or closing the browser window/tab, we need to make this fetch ASAP.\n    // Some browsers, especially Chrome, do not like synchronous requests to be made when the window is closing.\n    if (immediate) {\n      this.performFetch(url, params).then(async (response) => {\n        await this.transformResponse(response);\n      });\n      return {\n        result: APIConstants.global.SCORM_TRUE,\n        errorCode: 0,\n      };\n    }\n\n    const process = async (\n      url: string,\n      params: CommitObject | RefObject | Array<any>,\n      settings: Settings,\n    ): Promise<ResultObject> => {\n      try {\n        params = settings.requestHandler(params);\n        const response = await this.performFetch(url, params);\n\n        return this.transformResponse(response);\n      } catch (e) {\n        this.apiLog(\n          \"processHttpRequest\",\n          e,\n          APIConstants.global.LOG_LEVEL_ERROR,\n        );\n        api.processListeners(\"CommitError\");\n        return genericError;\n      }\n    };\n\n    if (this.settings.asyncCommit) {\n      const debouncedProcess = debounce(process, 500, immediate);\n      debouncedProcess(url, params, this.settings);\n\n      return {\n        result: APIConstants.global.SCORM_TRUE,\n        errorCode: 0,\n      };\n    } else {\n      return await process(url, params, this.settings);\n    }\n  }\n\n  /**\n   * Throws a SCORM error\n   *\n   * @param {number} when - the number of milliseconds to wait before committing\n   * @param {string} callback - the name of the commit event callback\n   */\n  scheduleCommit(when: number, callback: string) {\n    this._timeout = new ScheduledCommit(this, when, callback);\n    this.apiLog(\n      \"scheduleCommit\",\n      \"scheduled\",\n      APIConstants.global.LOG_LEVEL_DEBUG,\n      \"\",\n    );\n  }\n\n  /**\n   * Clears and cancels any currently scheduled commits\n   */\n  clearScheduledCommit() {\n    if (this._timeout) {\n      this._timeout.cancel();\n      this._timeout = undefined;\n      this.apiLog(\n        \"clearScheduledCommit\",\n        \"cleared\",\n        APIConstants.global.LOG_LEVEL_DEBUG,\n        \"\",\n      );\n    }\n  }\n\n  /**\n   * Check to see if the specific object has the given property\n   * @param {RefObject} refObject\n   * @param {string} attribute\n   * @return {boolean}\n   * @private\n   */\n  private _checkObjectHasProperty(\n    refObject: RefObject,\n    attribute: string,\n  ): boolean {\n    return (\n      Object.hasOwnProperty.call(refObject, attribute) ||\n      Object.getOwnPropertyDescriptor(\n        Object.getPrototypeOf(refObject),\n        attribute,\n      ) != null ||\n      attribute in refObject\n    );\n  }\n\n  /**\n   * Handles the error that occurs when trying to access a value\n   * @param {any} e\n   * @param {string} returnValue\n   * @return {string}\n   * @private\n   */\n  private handleValueAccessException(e: any, returnValue: string): string {\n    if (e instanceof ValidationError) {\n      this.lastErrorCode = String(e.errorCode);\n      returnValue = APIConstants.global.SCORM_FALSE;\n    } else {\n      if (e instanceof Error && e.message) {\n        console.error(e.message);\n      } else {\n        console.error(e);\n      }\n      this.throwSCORMError(this._error_codes.GENERAL);\n    }\n    return returnValue;\n  }\n\n  /**\n   * Builds the commit object to be sent to the LMS\n   * @param {boolean} terminateCommit\n   * @return {CommitObject|RefObject|Array}\n   * @private\n   */\n  protected getCommitObject(\n    terminateCommit: boolean,\n  ): CommitObject | RefObject | Array<any> {\n    const shouldTerminateCommit =\n      terminateCommit || this.settings.alwaysSendTotalTime;\n    const commitObject = this.settings.renderCommonCommitFields\n      ? this.renderCommitObject(shouldTerminateCommit)\n      : this.renderCommitCMI(shouldTerminateCommit);\n\n    if (this.apiLogLevel === APIConstants.global.LOG_LEVEL_DEBUG) {\n      console.debug(\n        \"Commit (terminated: \" + (terminateCommit ? \"yes\" : \"no\") + \"): \",\n      );\n      console.debug(commitObject);\n    }\n    return commitObject;\n  }\n\n  /**\n   * Perform the fetch request to the LMS\n   * @param {string} url\n   * @param {RefObject|Array} params\n   * @return {Promise<Response>}\n   * @private\n   */\n  private async performFetch(\n    url: string,\n    params: RefObject | Array<any>,\n  ): Promise<Response> {\n    return fetch(url, {\n      method: \"POST\",\n      mode: this.settings.fetchMode,\n      body: params instanceof Array ? params.join(\"&\") : JSON.stringify(params),\n      headers: {\n        ...this.settings.xhrHeaders,\n        \"Content-Type\": this.settings.commitRequestDataType,\n      },\n      credentials: this.settings.xhrWithCredentials ? \"include\" : undefined,\n      keepalive: true,\n    });\n  }\n\n  /**\n   * Transforms the response from the LMS to a ResultObject\n   * @param {Response} response\n   * @return {Promise<ResultObject>}\n   * @private\n   */\n  private async transformResponse(response: Response): Promise<ResultObject> {\n    const result =\n      typeof this.settings.responseHandler === \"function\"\n        ? await this.settings.responseHandler(response)\n        : await response.json();\n\n    if (\n      response.status >= 200 &&\n      response.status <= 299 &&\n      (result.result === true ||\n        result.result === APIConstants.global.SCORM_TRUE)\n    ) {\n      this.processListeners(\"CommitSuccess\");\n    } else {\n      this.processListeners(\"CommitError\");\n    }\n    return result;\n  }\n}\n","/**\n * Debounce function to delay the execution of a given function.\n *\n * @param func - The function to debounce.\n * @param wait - The number of milliseconds to delay.\n * @param immediate - If `true`, the function will be triggered on the leading edge instead of the trailing.\n * @returns A debounced version of the provided function.\n */\nexport function debounce<T extends (...args: any[]) => void>(\n  func: T,\n  wait: number,\n  immediate = false,\n): (...args: Parameters<T>) => void {\n  let timeout: ReturnType<typeof setTimeout> | null;\n\n  return function (this: any, ...args: Parameters<T>) {\n    const context = this;\n\n    const later = () => {\n      timeout = null;\n      if (!immediate) func.apply(context, args);\n    };\n\n    const callNow = immediate && !timeout;\n\n    if (timeout) clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n\n    if (callNow) func.apply(context, args);\n  };\n}\n","import { BaseCMI } from \"./base_cmi\";\nimport ErrorCodes from \"../../constants/error_codes\";\nimport { BaseScormValidationError } from \"../../exceptions\";\n\nexport const scorm12_error_codes = ErrorCodes.scorm12;\n\n/**\n * Base class for cmi *.n objects\n */\nexport class CMIArray extends BaseCMI {\n  private readonly _errorCode: number;\n  private readonly _errorClass: typeof BaseScormValidationError;\n  private readonly __children: string;\n  childArray: any[];\n\n  /**\n   * Constructor cmi *.n arrays\n   * @param {object} params\n   */\n  constructor(params: {\n    children: string;\n    errorCode?: number;\n    errorClass?: typeof BaseScormValidationError;\n  }) {\n    super();\n    this.__children = params.children;\n    this._errorCode = params.errorCode || scorm12_error_codes.GENERAL;\n    this._errorClass = params.errorClass || BaseScormValidationError;\n    this.childArray = [];\n  }\n\n  /**\n   * Getter for _children\n   * @return {string}\n   */\n  get _children(): string {\n    return this.__children;\n  }\n\n  /**\n   * Setter for _children. Just throws an error.\n   * @param {string} _children\n   */\n  set _children(_children: string) {\n    throw new this._errorClass(this._errorCode);\n  }\n\n  /**\n   * Getter for _count\n   * @return {number}\n   */\n  get _count(): number {\n    return this.childArray.length;\n  }\n\n  /**\n   * Setter for _count. Just throws an error.\n   * @param {number} _count\n   */\n  set _count(_count: number) {\n    throw new this._errorClass(this._errorCode);\n  }\n\n  /**\n   * toJSON for *.n arrays\n   * @return {object}\n   */\n  toJSON(): object {\n    this.jsonString = true;\n    const result: { [key: string]: any } = {};\n    for (let i = 0; i < this.childArray.length; i++) {\n      result[i + \"\"] = this.childArray[i];\n    }\n    delete this.jsonString;\n    return result;\n  }\n}\n","/**\n * Base class for API cmi objects\n */\nexport abstract class BaseCMI {\n  jsonString? = false;\n  private _initialized = false;\n  private _start_time: number | undefined;\n\n  /**\n   * Getter for _initialized\n   * @return {boolean}\n   */\n  get initialized(): boolean {\n    return this._initialized;\n  }\n\n  /**\n   * Getter for _start_time\n   * @return {number | undefined}\n   */\n  get start_time(): number | undefined {\n    return this._start_time;\n  }\n\n  /**\n   * Called when the API has been initialized after the CMI has been created\n   */\n  initialize(): void {\n    this._initialized = true;\n  }\n\n  /**\n   * Called when the player should override the 'session_time' provided by\n   * the module\n   */\n  setStartTime(): void {\n    this._start_time = new Date().getTime();\n  }\n}\n\n/**\n * Base class for cmi root objects\n */\nexport abstract class BaseRootCMI extends BaseCMI {\n  abstract getCurrentTotalTime(): string;\n}\n","import APIConstants from \"../../constants/api_constants\";\nimport Regex from \"../../constants/regex\";\nimport { BaseCMI } from \"./base_cmi\";\nimport { checkValidFormat, checkValidRange } from \"./validation\";\nimport ErrorCodes from \"../../constants/error_codes\";\nimport { BaseScormValidationError } from \"../../exceptions\";\n\nconst scorm12_constants = APIConstants.scorm12;\nconst scorm12_regex = Regex.scorm12;\nexport const scorm12_error_codes = ErrorCodes.scorm12;\n\n/**\n * Base class for cmi *.score objects\n */\nexport class CMIScore extends BaseCMI {\n  private readonly __children: string;\n  private readonly __score_range: string | false;\n  private readonly __invalid_error_code: number;\n  private readonly __invalid_type_code: number;\n  private readonly __invalid_range_code: number;\n  private readonly __decimal_regex: string;\n  private readonly __error_class: typeof BaseScormValidationError;\n  private _raw = \"\";\n  private _min = \"\";\n  private _max: string;\n\n  /**\n   * Constructor for *.score\n   * @param {\n   *     score_children: string,\n   *     score_range: string,\n   *     max: string,\n   *     invalidErrorCode: number,\n   *     invalidTypeCode: number,\n   *     invalidRangeCode: number,\n   *     decimalRegex: string,\n   *     errorClass: typeof BaseScormValidationError\n   * } params\n   */\n  constructor(params: {\n    score_children?: string;\n    score_range?: string;\n    max?: string;\n    invalidErrorCode?: number;\n    invalidTypeCode?: number;\n    invalidRangeCode?: number;\n    decimalRegex?: string;\n    errorClass: typeof BaseScormValidationError;\n  }) {\n    super();\n\n    this.__children = params.score_children || scorm12_constants.score_children;\n    this.__score_range = !params.score_range\n      ? false\n      : scorm12_regex.score_range;\n    this._max = params.max || params.max === \"\" ? params.max : \"100\";\n    this.__invalid_error_code =\n      params.invalidErrorCode || scorm12_error_codes.INVALID_SET_VALUE;\n    this.__invalid_type_code =\n      params.invalidTypeCode || scorm12_error_codes.TYPE_MISMATCH;\n    this.__invalid_range_code =\n      params.invalidRangeCode || scorm12_error_codes.VALUE_OUT_OF_RANGE;\n    this.__decimal_regex = params.decimalRegex || scorm12_regex.CMIDecimal;\n    this.__error_class = params.errorClass;\n  }\n\n  /**\n   * Getter for _children\n   * @return {string}\n   */\n  get _children(): string {\n    return this.__children;\n  }\n\n  /**\n   * Setter for _children. Just throws an error.\n   * @param {string} _children\n   */\n  set _children(_children: string) {\n    throw new this.__error_class(this.__invalid_error_code);\n  }\n\n  /**\n   * Getter for _raw\n   * @return {string}\n   */\n  get raw(): string {\n    return this._raw;\n  }\n\n  /**\n   * Setter for _raw\n   * @param {string} raw\n   */\n  set raw(raw: string) {\n    if (\n      checkValidFormat(\n        raw,\n        this.__decimal_regex,\n        this.__invalid_type_code,\n        this.__error_class,\n      ) &&\n      (!this.__score_range ||\n        checkValidRange(\n          raw,\n          this.__score_range,\n          this.__invalid_range_code,\n          this.__error_class,\n        ))\n    ) {\n      this._raw = raw;\n    }\n  }\n\n  /**\n   * Getter for _min\n   * @return {string}\n   */\n  get min(): string {\n    return this._min;\n  }\n\n  /**\n   * Setter for _min\n   * @param {string} min\n   */\n  set min(min: string) {\n    if (\n      checkValidFormat(\n        min,\n        this.__decimal_regex,\n        this.__invalid_type_code,\n        this.__error_class,\n      ) &&\n      (!this.__score_range ||\n        checkValidRange(\n          min,\n          this.__score_range,\n          this.__invalid_range_code,\n          this.__error_class,\n        ))\n    ) {\n      this._min = min;\n    }\n  }\n\n  /**\n   * Getter for _max\n   * @return {string}\n   */\n  get max(): string {\n    return this._max;\n  }\n\n  /**\n   * Setter for _max\n   * @param {string} max\n   */\n  set max(max: string) {\n    if (\n      checkValidFormat(\n        max,\n        this.__decimal_regex,\n        this.__invalid_type_code,\n        this.__error_class,\n      ) &&\n      (!this.__score_range ||\n        checkValidRange(\n          max,\n          this.__score_range,\n          this.__invalid_range_code,\n          this.__error_class,\n        ))\n    ) {\n      this._max = max;\n    }\n  }\n\n  /**\n   * toJSON for *.score\n   * @return {\n   *    {\n   *      min: string,\n   *      max: string,\n   *      raw: string\n   *    }\n   *    }\n   */\n  toJSON(): {\n    min: string;\n    max: string;\n    raw: string;\n  } {\n    this.jsonString = true;\n    const result = {\n      raw: this.raw,\n      min: this.min,\n      max: this.max,\n    };\n    delete this.jsonString;\n    return result;\n  }\n}\n","import { BaseScormValidationError } from \"../../exceptions\";\n\n/**\n * Check if the value matches the proper format. If not, throw proper error code.\n *\n * @param {string} value\n * @param {string} regexPattern\n * @param {number} errorCode\n * @param {typeof BaseScormValidationError} errorClass\n * @param {boolean} [allowEmptyString]\n * @return {boolean}\n */\nexport function checkValidFormat(\n  value: string,\n  regexPattern: string,\n  errorCode: number,\n  errorClass: typeof BaseScormValidationError,\n  allowEmptyString?: boolean,\n): boolean {\n  if (typeof value !== \"string\") {\n    return false;\n  }\n  const formatRegex = new RegExp(regexPattern);\n  const matches = value.match(formatRegex);\n  if (allowEmptyString && value === \"\") {\n    return true;\n  }\n  if (value === undefined || !matches || matches[0] === \"\") {\n    throw new errorClass(errorCode);\n  }\n  return true;\n}\n\n/**\n * Check if the value matches the proper range. If not, throw proper error code.\n *\n * @param {any} value\n * @param {string} rangePattern\n * @param {number} errorCode\n * @param {typeof BaseScormValidationError} errorClass\n * @return {boolean}\n */\nexport function checkValidRange(\n  value: any,\n  rangePattern: string,\n  errorCode: number,\n  errorClass: typeof BaseScormValidationError,\n): boolean {\n  const ranges = rangePattern.split(\"#\");\n  value = value * 1.0;\n  if (value >= ranges[0]) {\n    if (ranges[1] === \"*\" || value <= ranges[1]) {\n      return true;\n    } else {\n      throw new errorClass(errorCode);\n    }\n  } else {\n    throw new errorClass(errorCode);\n  }\n}\n","import { BaseCMI } from \"../common/base_cmi\";\nimport { CMIScore } from \"../common/score\";\nimport APIConstants from \"../../constants/api_constants\";\nimport Regex from \"../../constants/regex\";\nimport ErrorCodes from \"../../constants/error_codes\";\nimport { Scorm12ValidationError } from \"../../exceptions\";\nimport { check12ValidFormat } from \"../scorm12/validation\";\nimport * as Util from \"../../utilities\";\n\n/**\n * Class representing the `cmi.core` object\n * @extends BaseCMI\n */\nexport class CMICore extends BaseCMI {\n  /**\n   * Constructor for `cmi.core`\n   */\n  constructor() {\n    super();\n    this.score = new CMIScore({\n      score_children: APIConstants.scorm12.score_children,\n      score_range: Regex.scorm12.score_range,\n      invalidErrorCode: ErrorCodes.scorm12.INVALID_SET_VALUE,\n      invalidTypeCode: ErrorCodes.scorm12.TYPE_MISMATCH,\n      invalidRangeCode: ErrorCodes.scorm12.VALUE_OUT_OF_RANGE,\n      errorClass: Scorm12ValidationError,\n    });\n  }\n\n  public readonly score: CMIScore;\n\n  /**\n   * Called when the API has been initialized after the CMI has been created\n   */\n  initialize() {\n    super.initialize();\n    this.score?.initialize();\n  }\n\n  private __children = APIConstants.scorm12.core_children;\n  private _student_id = \"\";\n  private _student_name = \"\";\n  private _lesson_location = \"\";\n  private _credit = \"\";\n  private _lesson_status = \"not attempted\";\n  private _entry = \"\";\n  private _total_time = \"\";\n  private _lesson_mode = \"normal\";\n  private _exit = \"\";\n  private _session_time = \"00:00:00\";\n  private _suspend_data = \"\";\n\n  /**\n   * Getter for __children\n   * @return {string}\n   * @private\n   */\n  get _children(): string {\n    return this.__children;\n  }\n\n  /**\n   * Setter for __children. Just throws an error.\n   * @param {string} _children\n   * @private\n   */\n  set _children(_children: string) {\n    throw new Scorm12ValidationError(ErrorCodes.scorm12.INVALID_SET_VALUE);\n  }\n\n  /**\n   * Getter for _student_id\n   * @return {string}\n   */\n  get student_id(): string {\n    return this._student_id;\n  }\n\n  /**\n   * Setter for _student_id. Can only be called before  initialization.\n   * @param {string} student_id\n   */\n  set student_id(student_id: string) {\n    if (this.initialized) {\n      throw new Scorm12ValidationError(ErrorCodes.scorm12.READ_ONLY_ELEMENT);\n    } else {\n      this._student_id = student_id;\n    }\n  }\n\n  /**\n   * Getter for _student_name\n   * @return {string}\n   */\n  get student_name(): string {\n    return this._student_name;\n  }\n\n  /**\n   * Setter for _student_name. Can only be called before  initialization.\n   * @param {string} student_name\n   */\n  set student_name(student_name: string) {\n    if (this.initialized) {\n      throw new Scorm12ValidationError(ErrorCodes.scorm12.READ_ONLY_ELEMENT);\n    } else {\n      this._student_name = student_name;\n    }\n  }\n\n  /**\n   * Getter for _lesson_location\n   * @return {string}\n   */\n  get lesson_location(): string {\n    return this._lesson_location;\n  }\n\n  /**\n   * Setter for _lesson_location\n   * @param {string} lesson_location\n   */\n  set lesson_location(lesson_location: string) {\n    if (check12ValidFormat(lesson_location, Regex.scorm12.CMIString256, true)) {\n      this._lesson_location = lesson_location;\n    }\n  }\n\n  /**\n   * Getter for _credit\n   * @return {string}\n   */\n  get credit(): string {\n    return this._credit;\n  }\n\n  /**\n   * Setter for _credit. Can only be called before  initialization.\n   * @param {string} credit\n   */\n  set credit(credit: string) {\n    if (this.initialized) {\n      throw new Scorm12ValidationError(ErrorCodes.scorm12.READ_ONLY_ELEMENT);\n    } else {\n      this._credit = credit;\n    }\n  }\n\n  /**\n   * Getter for _lesson_status\n   * @return {string}\n   */\n  get lesson_status(): string {\n    return this._lesson_status;\n  }\n\n  /**\n   * Setter for _lesson_status\n   * @param {string} lesson_status\n   */\n  set lesson_status(lesson_status: string) {\n    if (this.initialized) {\n      if (check12ValidFormat(lesson_status, Regex.scorm12.CMIStatus)) {\n        this._lesson_status = lesson_status;\n      }\n    } else {\n      if (check12ValidFormat(lesson_status, Regex.scorm12.CMIStatus2)) {\n        this._lesson_status = lesson_status;\n      }\n    }\n  }\n\n  /**\n   * Getter for _entry\n   * @return {string}\n   */\n  get entry(): string {\n    return this._entry;\n  }\n\n  /**\n   * Setter for _entry. Can only be called before  initialization.\n   * @param {string} entry\n   */\n  set entry(entry: string) {\n    if (this.initialized) {\n      throw new Scorm12ValidationError(ErrorCodes.scorm12.READ_ONLY_ELEMENT);\n    } else {\n      this._entry = entry;\n    }\n  }\n\n  /**\n   * Getter for _total_time\n   * @return {string}\n   */\n  get total_time(): string {\n    return this._total_time;\n  }\n\n  /**\n   * Setter for _total_time. Can only be called before  initialization.\n   * @param {string} total_time\n   */\n  set total_time(total_time: string) {\n    if (this.initialized) {\n      throw new Scorm12ValidationError(ErrorCodes.scorm12.READ_ONLY_ELEMENT);\n    } else {\n      this._total_time = total_time;\n    }\n  }\n\n  /**\n   * Getter for _lesson_mode\n   * @return {string}\n   */\n  get lesson_mode(): string {\n    return this._lesson_mode;\n  }\n\n  /**\n   * Setter for _lesson_mode. Can only be called before  initialization.\n   * @param {string} lesson_mode\n   */\n  set lesson_mode(lesson_mode: string) {\n    if (this.initialized) {\n      throw new Scorm12ValidationError(ErrorCodes.scorm12.READ_ONLY_ELEMENT);\n    } else {\n      this._lesson_mode = lesson_mode;\n    }\n  }\n\n  /**\n   * Getter for _exit. Should only be called during JSON export.\n   * @return {string}\n   */\n  get exit(): string {\n    if (!this.jsonString) {\n      throw new Scorm12ValidationError(ErrorCodes.scorm12.WRITE_ONLY_ELEMENT);\n    }\n    return this._exit;\n  }\n\n  /**\n   * Setter for _exit\n   * @param {string} exit\n   */\n  set exit(exit: string) {\n    if (check12ValidFormat(exit, Regex.scorm12.CMIExit, true)) {\n      this._exit = exit;\n    }\n  }\n\n  /**\n   * Getter for _session_time. Should only be called during JSON export.\n   * @return {string}\n   */\n  get session_time(): string {\n    if (!this.jsonString) {\n      throw new Scorm12ValidationError(ErrorCodes.scorm12.WRITE_ONLY_ELEMENT);\n    }\n    return this._session_time;\n  }\n\n  /**\n   * Setter for _session_time\n   * @param {string} session_time\n   */\n  set session_time(session_time: string) {\n    if (check12ValidFormat(session_time, Regex.scorm12.CMITimespan)) {\n      this._session_time = session_time;\n    }\n  }\n\n  /**\n   * Getter for _suspend_data\n   * @return {string}\n   */\n  get suspend_data(): string {\n    return this._suspend_data;\n  }\n\n  /**\n   * Setter for _suspend_data\n   * @param {string} suspend_data\n   */\n  set suspend_data(suspend_data: string) {\n    if (check12ValidFormat(suspend_data, Regex.scorm12.CMIString4096, true)) {\n      this._suspend_data = suspend_data;\n    }\n  }\n\n  /**\n   * Adds the current session time to the existing total time.\n   * @param {number} start_time\n   * @return {string}\n   */\n  getCurrentTotalTime(start_time: number | undefined): string {\n    let sessionTime = this._session_time;\n    const startTime = start_time;\n\n    if (typeof startTime !== \"undefined\" && startTime !== null) {\n      const seconds = new Date().getTime() - startTime;\n      sessionTime = Util.getSecondsAsHHMMSS(seconds / 1000);\n    }\n\n    return Util.addHHMMSSTimeStrings(\n      this._total_time,\n      sessionTime,\n      new RegExp(Regex.scorm12.CMITimespan),\n    );\n  }\n\n  /**\n   * toJSON for cmi.core\n   *\n   * @return {\n   *    {\n   *      student_name: string,\n   *      entry: string,\n   *      exit: string,\n   *      score: CMIScore,\n   *      student_id: string,\n   *      lesson_mode: string,\n   *      lesson_location: string,\n   *      lesson_status: string,\n   *      credit: string,\n   *      session_time: string\n   *    }\n   *  }\n   */\n  toJSON(): {\n    student_name: string;\n    entry: string;\n    exit: string;\n    score: CMIScore;\n    student_id: string;\n    lesson_mode: string;\n    lesson_location: string;\n    lesson_status: string;\n    credit: string;\n    session_time: string;\n  } {\n    this.jsonString = true;\n    const result = {\n      student_id: this.student_id,\n      student_name: this.student_name,\n      lesson_location: this.lesson_location,\n      credit: this.credit,\n      lesson_status: this.lesson_status,\n      entry: this.entry,\n      lesson_mode: this.lesson_mode,\n      exit: this.exit,\n      session_time: this.session_time,\n      score: this.score,\n    };\n    delete this.jsonString;\n    return result;\n  }\n}\n","import APIConstants from \"../../constants/api_constants\";\nimport ErrorCodes from \"../../constants/error_codes\";\nimport Regex from \"../../constants/regex\";\nimport { Scorm12ValidationError } from \"../../exceptions\";\nimport { BaseRootCMI } from \"../common/base_cmi\";\nimport { check12ValidFormat } from \"./validation\";\nimport { CMICore } from \"../aicc/core\";\nimport { CMIObjectives } from \"./objectives\";\nimport { CMIStudentData } from \"./student_data\";\nimport { CMIStudentPreference } from \"./student_preference\";\nimport { CMIInteractions } from \"./interactions\";\n\n/**\n * Class representing the cmi object for SCORM 1.2\n */\nexport class CMI extends BaseRootCMI {\n  private readonly __children: string = \"\";\n  private __version: string = \"3.4\";\n  private _launch_data: string = \"\";\n  private _comments: string = \"\";\n  private _comments_from_lms: string = \"\";\n\n  /**\n   * Constructor for the SCORM 1.2 cmi object\n   * @param {string} cmi_children\n   * @param {(CMIStudentData|AICCCMIStudentData)} student_data\n   * @param {boolean} initialized\n   */\n  constructor(\n    cmi_children?: string,\n    student_data?: CMIStudentData,\n    initialized?: boolean,\n  ) {\n    super();\n    if (initialized) this.initialize();\n    this.__children = cmi_children\n      ? cmi_children\n      : APIConstants.scorm12.cmi_children;\n    this.core = new CMICore();\n    this.objectives = new CMIObjectives();\n    this.student_data = student_data ? student_data : new CMIStudentData();\n    this.student_preference = new CMIStudentPreference();\n    this.interactions = new CMIInteractions();\n  }\n\n  public core: CMICore;\n  public objectives: CMIObjectives;\n  public student_data: CMIStudentData;\n  public student_preference: CMIStudentPreference;\n  public interactions: CMIInteractions;\n\n  /**\n   * Called when the API has been initialized after the CMI has been created\n   */\n  initialize() {\n    super.initialize();\n    this.core?.initialize();\n    this.objectives?.initialize();\n    this.student_data?.initialize();\n    this.student_preference?.initialize();\n    this.interactions?.initialize();\n  }\n\n  /**\n   * toJSON for cmi\n   *\n   * @return {\n   *    {\n   *      suspend_data: string,\n   *      launch_data: string,\n   *      comments: string,\n   *      comments_from_lms: string,\n   *      core: CMICore,\n   *      objectives: CMIObjectives,\n   *      student_data: CMIStudentData,\n   *      student_preference: CMIStudentPreference,\n   *      interactions: CMIInteractions\n   *    }\n   *  }\n   */\n  toJSON(): {\n    suspend_data: string;\n    launch_data: string;\n    comments: string;\n    comments_from_lms: string;\n    core: CMICore;\n    objectives: CMIObjectives;\n    student_data: CMIStudentData;\n    student_preference: CMIStudentPreference;\n    interactions: CMIInteractions;\n  } {\n    this.jsonString = true;\n    const result = {\n      suspend_data: this.suspend_data,\n      launch_data: this.launch_data,\n      comments: this.comments,\n      comments_from_lms: this.comments_from_lms,\n      core: this.core,\n      objectives: this.objectives,\n      student_data: this.student_data,\n      student_preference: this.student_preference,\n      interactions: this.interactions,\n    };\n    delete this.jsonString;\n    return result;\n  }\n\n  /**\n   * Getter for __version\n   * @return {string}\n   */\n  get _version(): string {\n    return this.__version;\n  }\n\n  /**\n   * Setter for __version. Just throws an error.\n   * @param {string} _version\n   */\n  set _version(_version: string) {\n    throw new Scorm12ValidationError(ErrorCodes.scorm12.INVALID_SET_VALUE);\n  }\n\n  /**\n   * Getter for __children\n   * @return {string}\n   */\n  get _children(): string {\n    return this.__children;\n  }\n\n  /**\n   * Setter for __version. Just throws an error.\n   * @param {string} _children\n   */\n  set _children(_children: string) {\n    throw new Scorm12ValidationError(ErrorCodes.scorm12.INVALID_SET_VALUE);\n  }\n\n  /**\n   * Getter for _suspend_data\n   * @return {string}\n   */\n  get suspend_data(): string {\n    return this.core?.suspend_data;\n  }\n\n  /**\n   * Setter for _suspend_data\n   * @param {string} suspend_data\n   */\n  set suspend_data(suspend_data: string) {\n    if (this.core) {\n      this.core.suspend_data = suspend_data;\n    }\n  }\n\n  /**\n   * Getter for _launch_data\n   * @return {string}\n   */\n  get launch_data(): string {\n    return this._launch_data;\n  }\n\n  /**\n   * Setter for _launch_data. Can only be called before  initialization.\n   * @param {string} launch_data\n   */\n  set launch_data(launch_data: string) {\n    if (this.initialized) {\n      throw new Scorm12ValidationError(ErrorCodes.scorm12.READ_ONLY_ELEMENT);\n    } else {\n      this._launch_data = launch_data;\n    }\n  }\n\n  /**\n   * Getter for _comments\n   * @return {string}\n   */\n  get comments(): string {\n    return this._comments;\n  }\n\n  /**\n   * Setter for _comments\n   * @param {string} comments\n   */\n  set comments(comments: string) {\n    if (check12ValidFormat(comments, Regex.scorm12.CMIString4096, true)) {\n      this._comments = comments;\n    }\n  }\n\n  /**\n   * Getter for _comments_from_lms\n   * @return {string}\n   */\n  get comments_from_lms(): string {\n    return this._comments_from_lms;\n  }\n\n  /**\n   * Setter for _comments_from_lms. Can only be called before  initialization.\n   * @param {string} comments_from_lms\n   */\n  set comments_from_lms(comments_from_lms: string) {\n    if (this.initialized) {\n      throw new Scorm12ValidationError(ErrorCodes.scorm12.READ_ONLY_ELEMENT);\n    } else {\n      this._comments_from_lms = comments_from_lms;\n    }\n  }\n\n  /**\n   * Adds the current session time to the existing total time.\n   *\n   * @return {string}\n   */\n  getCurrentTotalTime(): string {\n    return this.core.getCurrentTotalTime(this.start_time);\n  }\n}\n","import { CMIArray } from \"../common/array\";\nimport APIConstants from \"../../constants/api_constants\";\nimport ErrorCodes from \"../../constants/error_codes\";\nimport { Scorm12ValidationError } from \"../../exceptions\";\nimport { BaseCMI } from \"../common/base_cmi\";\nimport { check12ValidFormat, check12ValidRange } from \"./validation\";\nimport Regex from \"../../constants/regex\";\n\n/**\n * Class representing the SCORM 1.2 `cmi.interactions`\n * @extends CMIArray\n */\nexport class CMIInteractions extends CMIArray {\n  /**\n   * Constructor for `cmi.interactions`\n   */\n  constructor() {\n    super({\n      children: APIConstants.scorm12.interactions_children,\n      errorCode: ErrorCodes.scorm12.INVALID_SET_VALUE,\n      errorClass: Scorm12ValidationError,\n    });\n  }\n}\n\n/**\n * Class representing SCORM 1.2's cmi.interactions.n object\n * @extends BaseCMI\n */\nexport class CMIInteractionsObject extends BaseCMI {\n  /**\n   * Constructor for cmi.interactions.n object\n   */\n  constructor() {\n    super();\n    this.objectives = new CMIArray({\n      errorCode: ErrorCodes.scorm12.INVALID_SET_VALUE,\n      errorClass: Scorm12ValidationError,\n      children: APIConstants.scorm12.objectives_children,\n    });\n    this.correct_responses = new CMIArray({\n      errorCode: ErrorCodes.scorm12.INVALID_SET_VALUE,\n      errorClass: Scorm12ValidationError,\n      children: APIConstants.scorm12.correct_responses_children,\n    });\n  }\n\n  public readonly objectives: CMIArray;\n  public readonly correct_responses: CMIArray;\n\n  /**\n   * Called when the API has been initialized after the CMI has been created\n   */\n  initialize() {\n    super.initialize();\n    this.objectives?.initialize();\n    this.correct_responses?.initialize();\n  }\n\n  private _id = \"\";\n  private _time = \"\";\n  private _type = \"\";\n  private _weighting = \"\";\n  private _student_response = \"\";\n  private _result = \"\";\n  private _latency = \"\";\n\n  /**\n   * Getter for _id. Should only be called during JSON export.\n   * @return {string}\n   */\n  get id(): string {\n    if (!this.jsonString) {\n      throw new Scorm12ValidationError(ErrorCodes.scorm12.WRITE_ONLY_ELEMENT);\n    }\n    return this._id;\n  }\n\n  /**\n   * Setter for _id\n   * @param {string} id\n   */\n  set id(id: string) {\n    if (check12ValidFormat(id, Regex.scorm12.CMIIdentifier)) {\n      this._id = id;\n    }\n  }\n\n  /**\n   * Getter for _time. Should only be called during JSON export.\n   * @return {string}\n   */\n  get time(): string {\n    if (!this.jsonString) {\n      throw new Scorm12ValidationError(ErrorCodes.scorm12.WRITE_ONLY_ELEMENT);\n    }\n    return this._time;\n  }\n\n  /**\n   * Setter for _time\n   * @param {string} time\n   */\n  set time(time: string) {\n    if (check12ValidFormat(time, Regex.scorm12.CMITime)) {\n      this._time = time;\n    }\n  }\n\n  /**\n   * Getter for _type. Should only be called during JSON export.\n   * @return {string}\n   */\n  get type(): string {\n    if (!this.jsonString) {\n      throw new Scorm12ValidationError(ErrorCodes.scorm12.WRITE_ONLY_ELEMENT);\n    }\n    return this._type;\n  }\n\n  /**\n   * Setter for _type\n   * @param {string} type\n   */\n  set type(type: string) {\n    if (check12ValidFormat(type, Regex.scorm12.CMIType)) {\n      this._type = type;\n    }\n  }\n\n  /**\n   * Getter for _weighting. Should only be called during JSON export.\n   * @return {string}\n   */\n  get weighting(): string {\n    if (!this.jsonString) {\n      throw new Scorm12ValidationError(ErrorCodes.scorm12.WRITE_ONLY_ELEMENT);\n    }\n    return this._weighting;\n  }\n\n  /**\n   * Setter for _weighting\n   * @param {string} weighting\n   */\n  set weighting(weighting: string) {\n    if (\n      check12ValidFormat(weighting, Regex.scorm12.CMIDecimal) &&\n      check12ValidRange(weighting, Regex.scorm12.weighting_range)\n    ) {\n      this._weighting = weighting;\n    }\n  }\n\n  /**\n   * Getter for _student_response. Should only be called during JSON export.\n   * @return {string}\n   */\n  get student_response(): string {\n    if (!this.jsonString) {\n      throw new Scorm12ValidationError(ErrorCodes.scorm12.WRITE_ONLY_ELEMENT);\n    }\n    return this._student_response;\n  }\n\n  /**\n   * Setter for _student_response\n   * @param {string} student_response\n   */\n  set student_response(student_response: string) {\n    if (check12ValidFormat(student_response, Regex.scorm12.CMIFeedback, true)) {\n      this._student_response = student_response;\n    }\n  }\n\n  /**\n   * Getter for _result. Should only be called during JSON export.\n   * @return {string}\n   */\n  get result(): string {\n    if (!this.jsonString) {\n      throw new Scorm12ValidationError(ErrorCodes.scorm12.WRITE_ONLY_ELEMENT);\n    }\n    return this._result;\n  }\n\n  /**\n   * Setter for _result\n   * @param {string} result\n   */\n  set result(result: string) {\n    if (check12ValidFormat(result, Regex.scorm12.CMIResult)) {\n      this._result = result;\n    }\n  }\n\n  /**\n   * Getter for _latency. Should only be called during JSON export.\n   * @return {string}\n   */\n  get latency(): string {\n    if (!this.jsonString) {\n      throw new Scorm12ValidationError(ErrorCodes.scorm12.WRITE_ONLY_ELEMENT);\n    }\n    return this._latency;\n  }\n\n  /**\n   * Setter for _latency\n   * @param {string} latency\n   */\n  set latency(latency: string) {\n    if (check12ValidFormat(latency, Regex.scorm12.CMITimespan)) {\n      this._latency = latency;\n    }\n  }\n\n  /**\n   * toJSON for cmi.interactions.n\n   *\n   * @return {\n   *    {\n   *      id: string,\n   *      time: string,\n   *      type: string,\n   *      weighting: string,\n   *      student_response: string,\n   *      result: string,\n   *      latency: string,\n   *      objectives: CMIArray,\n   *      correct_responses: CMIArray\n   *    }\n   *  }\n   */\n  toJSON(): {\n    id: string;\n    time: string;\n    type: string;\n    weighting: string;\n    student_response: string;\n    result: string;\n    latency: string;\n    objectives: CMIArray;\n    correct_responses: CMIArray;\n  } {\n    this.jsonString = true;\n    const result = {\n      id: this.id,\n      time: this.time,\n      type: this.type,\n      weighting: this.weighting,\n      student_response: this.student_response,\n      result: this.result,\n      latency: this.latency,\n      objectives: this.objectives,\n      correct_responses: this.correct_responses,\n    };\n    delete this.jsonString;\n    return result;\n  }\n}\n\n/**\n * Class representing SCORM 1.2's cmi.interactions.n.objectives.n object\n * @extends BaseCMI\n */\nexport class CMIInteractionsObjectivesObject extends BaseCMI {\n  /**\n   * Constructor for cmi.interactions.n.objectives.n\n   */\n  constructor() {\n    super();\n  }\n\n  private _id = \"\";\n\n  /**\n   * Getter for _id\n   * @return {string}\n   */\n  get id(): string {\n    return this._id;\n  }\n\n  /**\n   * Setter for _id\n   * @param {string} id\n   */\n  set id(id: string) {\n    if (check12ValidFormat(id, Regex.scorm12.CMIIdentifier)) {\n      this._id = id;\n    }\n  }\n\n  /**\n   * toJSON for cmi.interactions.n.objectives.n\n   * @return {\n   *    {\n   *      id: string\n   *    }\n   *  }\n   */\n  toJSON(): {\n    id: string;\n  } {\n    this.jsonString = true;\n    const result = {\n      id: this.id,\n    };\n    delete this.jsonString;\n    return result;\n  }\n}\n\n/**\n * Class representing SCORM 1.2's cmi.interactions.correct_responses.n object\n * @extends BaseCMI\n */\nexport class CMIInteractionsCorrectResponsesObject extends BaseCMI {\n  /**\n   * Constructor for cmi.interactions.correct_responses.n\n   */\n  constructor() {\n    super();\n  }\n\n  private _pattern = \"\";\n\n  /**\n   * Getter for _pattern\n   * @return {string}\n   */\n  get pattern(): string {\n    if (!this.jsonString) {\n      throw new Scorm12ValidationError(ErrorCodes.scorm12.WRITE_ONLY_ELEMENT);\n    }\n    return this._pattern;\n  }\n\n  /**\n   * Setter for _pattern\n   * @param {string} pattern\n   */\n  set pattern(pattern: string) {\n    if (check12ValidFormat(pattern, Regex.scorm12.CMIFeedback, true)) {\n      this._pattern = pattern;\n    }\n  }\n\n  /**\n   * toJSON for cmi.interactions.correct_responses.n\n   * @return {\n   *    {\n   *      pattern: string\n   *    }\n   *  }\n   */\n  toJSON(): {\n    pattern: string;\n  } {\n    this.jsonString = true;\n    const result = {\n      pattern: this._pattern,\n    };\n    delete this.jsonString;\n    return result;\n  }\n}\n","import {BaseCMI} from \"../common/base_cmi\";\nimport {check12ValidFormat} from \"./validation\";\nimport Regex from \"../../constants/regex\";\n\n/**\n * Class for AICC Navigation object\n */\nexport class NAV extends BaseCMI {\n  /**\n   * Constructor for NAV object\n   */\n  constructor() {\n    super();\n  }\n\n  private _event = \"\";\n\n  /**\n   * Getter for _event\n   * @return {string}\n   */\n  get event(): string {\n    return this._event;\n  }\n\n  /**\n   * Setter for _event\n   * @param {string} event\n   */\n  set event(event: string) {\n    if (check12ValidFormat(event, Regex.scorm12.NAVEvent)) {\n      this._event = event;\n    }\n  }\n\n  /**\n   * toJSON for nav object\n   * @return {\n   *    {\n   *      event: string\n   *    }\n   *  }\n   */\n  toJSON(): {\n    event: string;\n  } {\n    this.jsonString = true;\n    const result = {\n      event: this.event,\n    };\n    delete this.jsonString;\n    return result;\n  }\n}","import {BaseCMI} from \"../common/base_cmi\";\nimport {CMIScore} from \"../common/score\";\nimport APIConstants from \"../../constants/api_constants\";\nimport Regex from \"../../constants/regex\";\nimport ErrorCodes from \"../../constants/error_codes\";\nimport {Scorm12ValidationError} from \"../../exceptions\";\nimport {check12ValidFormat} from \"./validation\";\nimport {CMIArray} from \"../common/array\";\n\n/**\n * Class representing SCORM 1.2's `cmi.objectives` object\n * @extends CMIArray\n */\nexport class CMIObjectives extends CMIArray {\n  /**\n   * Constructor for `cmi.objectives`\n   */\n  constructor() {\n    super({\n      children: APIConstants.scorm12.objectives_children,\n      errorCode: ErrorCodes.scorm12.INVALID_SET_VALUE,\n      errorClass: Scorm12ValidationError,\n    });\n  }\n}\n\n/**\n * Class representing SCORM 1.2's cmi.objectives.n object\n * @extends BaseCMI\n */\nexport class CMIObjectivesObject extends BaseCMI {\n  /**\n   * Constructor for cmi.objectives.n\n   */\n  constructor() {\n    super();\n    this.score = new CMIScore({\n      score_children: APIConstants.scorm12.score_children,\n      score_range: Regex.scorm12.score_range,\n      invalidErrorCode: ErrorCodes.scorm12.INVALID_SET_VALUE,\n      invalidTypeCode: ErrorCodes.scorm12.TYPE_MISMATCH,\n      invalidRangeCode: ErrorCodes.scorm12.VALUE_OUT_OF_RANGE,\n      errorClass: Scorm12ValidationError,\n    });\n  }\n\n  public readonly score: CMIScore;\n\n  private _id = \"\";\n  private _status = \"\";\n\n  /**\n   * Getter for _id\n   * @return {string}\n   */\n  get id(): string {\n    return this._id;\n  }\n\n  /**\n   * Setter for _id\n   * @param {string} id\n   */\n  set id(id: string) {\n    if (check12ValidFormat(id, Regex.scorm12.CMIIdentifier)) {\n      this._id = id;\n    }\n  }\n\n  /**\n   * Getter for _status\n   * @return {string}\n   */\n  get status(): string {\n    return this._status;\n  }\n\n  /**\n   * Setter for _status\n   * @param {string} status\n   */\n  set status(status: string) {\n    if (check12ValidFormat(status, Regex.scorm12.CMIStatus2)) {\n      this._status = status;\n    }\n  }\n\n  /**\n   * toJSON for cmi.objectives.n\n   * @return {\n   *    {\n   *      id: string,\n   *      status: string,\n   *      score: CMIScore\n   *    }\n   *  }\n   */\n  toJSON(): {\n    id: string;\n    status: string;\n    score: CMIScore;\n  } {\n    this.jsonString = true;\n    const result = {\n      id: this.id,\n      status: this.status,\n      score: this.score,\n    };\n    delete this.jsonString;\n    return result;\n  }\n}","import { BaseCMI } from \"../common/base_cmi\";\nimport APIConstants from \"../../constants/api_constants\";\nimport { Scorm12ValidationError } from \"../../exceptions\";\nimport ErrorCodes from \"../../constants/error_codes\";\n\n/**\n * Class representing the SCORM 1.2 cmi.student_data object\n * @extends BaseCMI\n */\nexport class CMIStudentData extends BaseCMI {\n  private readonly __children;\n  private _mastery_score = \"\";\n  private _max_time_allowed = \"\";\n  private _time_limit_action = \"\";\n\n  /**\n   * Constructor for cmi.student_data\n   * @param {string} student_data_children\n   */\n  constructor(student_data_children?: string) {\n    super();\n    this.__children = student_data_children\n      ? student_data_children\n      : APIConstants.scorm12.student_data_children;\n  }\n\n  /**\n   * Getter for __children\n   * @return {string}\n   * @private\n   */\n  get _children(): string {\n    return this.__children;\n  }\n\n  /**\n   * Setter for __children. Just throws an error.\n   * @param {string} _children\n   * @private\n   */\n  set _children(_children: string) {\n    throw new Scorm12ValidationError(ErrorCodes.scorm12.INVALID_SET_VALUE);\n  }\n\n  /**\n   * Getter for _master_score\n   * @return {string}\n   */\n  get mastery_score(): string {\n    return this._mastery_score;\n  }\n\n  /**\n   * Setter for _master_score. Can only be called before  initialization.\n   * @param {string} mastery_score\n   */\n  set mastery_score(mastery_score: string) {\n    if (this.initialized) {\n      throw new Scorm12ValidationError(ErrorCodes.scorm12.READ_ONLY_ELEMENT);\n    } else {\n      this._mastery_score = mastery_score;\n    }\n  }\n\n  /**\n   * Getter for _max_time_allowed\n   * @return {string}\n   */\n  get max_time_allowed(): string {\n    return this._max_time_allowed;\n  }\n\n  /**\n   * Setter for _max_time_allowed. Can only be called before  initialization.\n   * @param {string} max_time_allowed\n   */\n  set max_time_allowed(max_time_allowed: string) {\n    if (this.initialized) {\n      throw new Scorm12ValidationError(ErrorCodes.scorm12.READ_ONLY_ELEMENT);\n    } else {\n      this._max_time_allowed = max_time_allowed;\n    }\n  }\n\n  /**\n   * Getter for _time_limit_action\n   * @return {string}\n   */\n  get time_limit_action(): string {\n    return this._time_limit_action;\n  }\n\n  /**\n   * Setter for _time_limit_action. Can only be called before  initialization.\n   * @param {string} time_limit_action\n   */\n  set time_limit_action(time_limit_action: string) {\n    if (this.initialized) {\n      throw new Scorm12ValidationError(ErrorCodes.scorm12.READ_ONLY_ELEMENT);\n    } else {\n      this._time_limit_action = time_limit_action;\n    }\n  }\n\n  /**\n   * toJSON for cmi.student_data\n   *\n   * @return {\n   *    {\n   *      max_time_allowed: string,\n   *      time_limit_action: string,\n   *      mastery_score: string\n   *    }\n   *  }\n   */\n  toJSON(): {\n    mastery_score: string;\n    max_time_allowed: string;\n    time_limit_action: string;\n  } {\n    this.jsonString = true;\n    const result = {\n      mastery_score: this.mastery_score,\n      max_time_allowed: this.max_time_allowed,\n      time_limit_action: this.time_limit_action,\n    };\n    delete this.jsonString;\n    return result;\n  }\n}\n","import { BaseCMI } from \"../common/base_cmi\";\nimport APIConstants from \"../../constants/api_constants\";\nimport { Scorm12ValidationError } from \"../../exceptions\";\nimport ErrorCodes from \"../../constants/error_codes\";\nimport { check12ValidFormat, check12ValidRange } from \"./validation\";\nimport Regex from \"../../constants/regex\";\n\n/**\n * Class representing the SCORM 1.2 cmi.student_preference object\n * @extends BaseCMI\n */\nexport class CMIStudentPreference extends BaseCMI {\n  private readonly __children;\n\n  /**\n   * Constructor for cmi.student_preference\n   * @param {string} student_preference_children\n   */\n  constructor(student_preference_children?: string) {\n    super();\n    this.__children = student_preference_children\n      ? student_preference_children\n      : APIConstants.scorm12.student_preference_children;\n  }\n\n  private _audio = \"\";\n  private _language = \"\";\n  private _speed = \"\";\n  private _text = \"\";\n\n  /**\n   * Getter for __children\n   * @return {string}\n   * @private\n   */\n  get _children(): string {\n    return this.__children;\n  }\n\n  /**\n   * Setter for __children. Just throws an error.\n   * @param {string} _children\n   * @private\n   */\n  set _children(_children: string) {\n    throw new Scorm12ValidationError(ErrorCodes.scorm12.INVALID_SET_VALUE);\n  }\n\n  /**\n   * Getter for _audio\n   * @return {string}\n   */\n  get audio(): string {\n    return this._audio;\n  }\n\n  /**\n   * Setter for _audio\n   * @param {string} audio\n   */\n  set audio(audio: string) {\n    if (\n      check12ValidFormat(audio, Regex.scorm12.CMISInteger) &&\n      check12ValidRange(audio, Regex.scorm12.audio_range)\n    ) {\n      this._audio = audio;\n    }\n  }\n\n  /**\n   * Getter for _language\n   * @return {string}\n   */\n  get language(): string {\n    return this._language;\n  }\n\n  /**\n   * Setter for _language\n   * @param {string} language\n   */\n  set language(language: string) {\n    if (check12ValidFormat(language, Regex.scorm12.CMIString256)) {\n      this._language = language;\n    }\n  }\n\n  /**\n   * Getter for _speed\n   * @return {string}\n   */\n  get speed(): string {\n    return this._speed;\n  }\n\n  /**\n   * Setter for _speed\n   * @param {string} speed\n   */\n  set speed(speed: string) {\n    if (\n      check12ValidFormat(speed, Regex.scorm12.CMISInteger) &&\n      check12ValidRange(speed, Regex.scorm12.speed_range)\n    ) {\n      this._speed = speed;\n    }\n  }\n\n  /**\n   * Getter for _text\n   * @return {string}\n   */\n  get text(): string {\n    return this._text;\n  }\n\n  /**\n   * Setter for _text\n   * @param {string} text\n   */\n  set text(text: string) {\n    if (\n      check12ValidFormat(text, Regex.scorm12.CMISInteger) &&\n      check12ValidRange(text, Regex.scorm12.text_range)\n    ) {\n      this._text = text;\n    }\n  }\n\n  /**\n   * toJSON for cmi.student_preference\n   *\n   * @return {\n   *    {\n   *      audio: string,\n   *      language: string,\n   *      speed: string,\n   *      text: string\n   *    }\n   *  }\n   */\n  toJSON(): {\n    audio: string;\n    language: string;\n    speed: string;\n    text: string;\n  } {\n    this.jsonString = true;\n    const result = {\n      audio: this.audio,\n      language: this.language,\n      speed: this.speed,\n      text: this.text,\n    };\n    delete this.jsonString;\n    return result;\n  }\n}\n","import {checkValidFormat, checkValidRange} from \"../common/validation\";\nimport ErrorCodes from \"../../constants/error_codes\";\nimport {Scorm12ValidationError} from \"../../exceptions\";\n\n/**\n * Helper method, no reason to have to pass the same error codes every time\n * @param {string} value\n * @param {string} regexPattern\n * @param {boolean} allowEmptyString\n * @return {boolean}\n */\nexport function check12ValidFormat(\n  value: string,\n  regexPattern: string,\n  allowEmptyString?: boolean,\n): boolean {\n  return checkValidFormat(\n    value,\n    regexPattern,\n    ErrorCodes.scorm12.TYPE_MISMATCH,\n    Scorm12ValidationError,\n    allowEmptyString,\n  );\n}\n\n/**\n * Helper method, no reason to have to pass the same error codes every time\n * @param {string} value\n * @param {string} rangePattern\n * @param {boolean} allowEmptyString\n * @return {boolean}\n */\nexport function check12ValidRange(\n  value: any,\n  rangePattern: string,\n  allowEmptyString?: boolean,\n): boolean {\n  if (!allowEmptyString && value === \"\") {\n    throw new Scorm12ValidationError(ErrorCodes.scorm12.VALUE_OUT_OF_RANGE);\n  }\n\n  return checkValidRange(\n    value,\n    rangePattern,\n    ErrorCodes.scorm12.VALUE_OUT_OF_RANGE,\n    Scorm12ValidationError,\n  );\n}","interface ErrorDescription {\n  basicMessage: string;\n  detailMessage: string;\n}\n\ninterface ErrorDescriptions {\n  [key: string]: ErrorDescription;\n}\n\ninterface ScormConstants {\n  cmi_children: string;\n  core_children: string;\n  score_children: string;\n  comments_children: string;\n  objectives_children: string;\n  correct_responses_children: string;\n  student_data_children: string;\n  student_preference_children: string;\n  interactions_children: string;\n  error_descriptions: ErrorDescriptions;\n}\n\ninterface AiccConstants extends ScormConstants {\n  student_demographics_children: string;\n  tries_children: string;\n  attempt_records_children: string;\n  paths_children: string;\n}\n\ninterface Scorm2004Constants {\n  cmi_children: string;\n  comments_children: string;\n  score_children: string;\n  objectives_children: string;\n  correct_responses_children: string;\n  student_data_children: string;\n  student_preference_children: string;\n  interactions_children: string;\n  error_descriptions: ErrorDescriptions;\n}\n\ninterface GlobalConstants {\n  SCORM_TRUE: string;\n  SCORM_FALSE: string;\n  STATE_NOT_INITIALIZED: number;\n  STATE_INITIALIZED: number;\n  STATE_TERMINATED: number;\n  LOG_LEVEL_DEBUG: number;\n  LOG_LEVEL_INFO: number;\n  LOG_LEVEL_WARNING: number;\n  LOG_LEVEL_ERROR: number;\n  LOG_LEVEL_NONE: number;\n}\n\ninterface APIConstants {\n  global: GlobalConstants;\n  scorm12: ScormConstants;\n  aicc: AiccConstants;\n  scorm2004: Scorm2004Constants;\n}\n\nconst global: GlobalConstants = {\n  SCORM_TRUE: \"true\",\n  SCORM_FALSE: \"false\",\n  STATE_NOT_INITIALIZED: 0,\n  STATE_INITIALIZED: 1,\n  STATE_TERMINATED: 2,\n  LOG_LEVEL_DEBUG: 1,\n  LOG_LEVEL_INFO: 2,\n  LOG_LEVEL_WARNING: 3,\n  LOG_LEVEL_ERROR: 4,\n  LOG_LEVEL_NONE: 5,\n};\n\nconst scorm12: ScormConstants = {\n  // Children lists\n  cmi_children:\n    \"core,suspend_data,launch_data,comments,objectives,student_data,student_preference,interactions\",\n  core_children:\n    \"student_id,student_name,lesson_location,credit,lesson_status,entry,score,total_time,lesson_mode,exit,session_time\",\n  score_children: \"raw,min,max\",\n  comments_children: \"content,location,time\",\n  objectives_children: \"id,score,status\",\n  correct_responses_children: \"pattern\",\n  student_data_children: \"mastery_score,max_time_allowed,time_limit_action\",\n  student_preference_children: \"audio,language,speed,text\",\n  interactions_children:\n    \"id,objectives,time,type,correct_responses,weighting,student_response,result,latency\",\n  error_descriptions: {\n    \"101\": {\n      basicMessage: \"General Exception\",\n      detailMessage:\n        \"No specific error code exists to describe the error. Use LMSGetDiagnostic for more information\",\n    },\n    \"201\": {\n      basicMessage: \"Invalid argument error\",\n      detailMessage:\n        \"Indicates that an argument represents an invalid data model element or is otherwise incorrect.\",\n    },\n    \"202\": {\n      basicMessage: \"Element cannot have children\",\n      detailMessage:\n        'Indicates that LMSGetValue was called with a data model element name that ends in \"_children\" for a data model element that does not support the \"_children\" suffix.',\n    },\n    \"203\": {\n      basicMessage: \"Element not an array - cannot have count\",\n      detailMessage:\n        'Indicates that LMSGetValue was called with a data model element name that ends in \"_count\" for a data model element that does not support the \"_count\" suffix.',\n    },\n    \"301\": {\n      basicMessage: \"Not initialized\",\n      detailMessage:\n        \"Indicates that an API call was made before the call to lmsInitialize.\",\n    },\n    \"401\": {\n      basicMessage: \"Not implemented error\",\n      detailMessage:\n        \"The data model element indicated in a call to LMSGetValue or LMSSetValue is valid, but was not implemented by this LMS. SCORM 1.2 defines a set of data model elements as being optional for an LMS to implement.\",\n    },\n    \"402\": {\n      basicMessage: \"Invalid set value, element is a keyword\",\n      detailMessage:\n        'Indicates that LMSSetValue was called on a data model element that represents a keyword (elements that end in \"_children\" and \"_count\").',\n    },\n    \"403\": {\n      basicMessage: \"Element is read only\",\n      detailMessage:\n        \"LMSSetValue was called with a data model element that can only be read.\",\n    },\n    \"404\": {\n      basicMessage: \"Element is write only\",\n      detailMessage:\n        \"LMSGetValue was called on a data model element that can only be written to.\",\n    },\n    \"405\": {\n      basicMessage: \"Incorrect Data Type\",\n      detailMessage:\n        \"LMSSetValue was called with a value that is not consistent with the data format of the supplied data model element.\",\n    },\n    \"407\": {\n      basicMessage: \"Element Value Out Of Range\",\n      detailMessage:\n        \"The numeric value supplied to a LMSSetValue call is outside of the numeric range allowed for the supplied data model element.\",\n    },\n    \"408\": {\n      basicMessage: \"Data Model Dependency Not Established\",\n      detailMessage:\n        \"Some data model elements cannot be set until another data model element was set. This error condition indicates that the prerequisite element was not set before the dependent element.\",\n    },\n  },\n};\nconst aicc: AiccConstants = {\n  ...scorm12,\n  ...{\n    cmi_children:\n      \"core,suspend_data,launch_data,comments,objectives,student_data,student_preference,interactions,evaluation\",\n    student_preference_children:\n      \"audio,language,lesson_type,speed,text,text_color,text_location,text_size,video,windows\",\n    student_data_children:\n      \"attempt_number,tries,mastery_score,max_time_allowed,time_limit_action\",\n    student_demographics_children:\n      \"city,class,company,country,experience,familiar_name,instructor_name,title,native_language,state,street_address,telephone,years_experience\",\n    tries_children: \"time,status,score\",\n    attempt_records_children: \"score,lesson_status\",\n    paths_children: \"location_id,date,time,status,why_left,time_in_element\",\n  },\n};\nconst scorm2004: Scorm2004Constants = {\n  // Children lists\n  cmi_children:\n    \"_version,comments_from_learner,comments_from_lms,completion_status,credit,entry,exit,interactions,launch_data,learner_id,learner_name,learner_preference,location,max_time_allowed,mode,objectives,progress_measure,scaled_passing_score,score,session_time,success_status,suspend_data,time_limit_action,total_time\",\n  comments_children: \"comment,timestamp,location\",\n  score_children: \"max,raw,scaled,min\",\n  objectives_children:\n    \"progress_measure,completion_status,success_status,description,score,id\",\n  correct_responses_children: \"pattern\",\n  student_data_children: \"mastery_score,max_time_allowed,time_limit_action\",\n  student_preference_children:\n    \"audio_level,audio_captioning,delivery_speed,language\",\n  interactions_children:\n    \"id,type,objectives,timestamp,correct_responses,weighting,learner_response,result,latency,description\",\n  error_descriptions: {\n    \"0\": {\n      basicMessage: \"No Error\",\n      detailMessage: \"No error occurred, the previous API call was successful.\",\n    },\n    \"101\": {\n      basicMessage: \"General Exception\",\n      detailMessage:\n        \"No specific error code exists to describe the error. Use GetDiagnostic for more information.\",\n    },\n    \"102\": {\n      basicMessage: \"General Initialization Failure\",\n      detailMessage: \"Call to Initialize failed for an unknown reason.\",\n    },\n    \"103\": {\n      basicMessage: \"Already Initialized\",\n      detailMessage:\n        \"Call to Initialize failed because Initialize was already called.\",\n    },\n    \"104\": {\n      basicMessage: \"Content Instance Terminated\",\n      detailMessage:\n        \"Call to Initialize failed because Terminate was already called.\",\n    },\n    \"111\": {\n      basicMessage: \"General Termination Failure\",\n      detailMessage: \"Call to Terminate failed for an unknown reason.\",\n    },\n    \"112\": {\n      basicMessage: \"Termination Before Initialization\",\n      detailMessage:\n        \"Call to Terminate failed because it was made before the call to Initialize.\",\n    },\n    \"113\": {\n      basicMessage: \"Termination After Termination\",\n      detailMessage:\n        \"Call to Terminate failed because Terminate was already called.\",\n    },\n    \"122\": {\n      basicMessage: \"Retrieve Data Before Initialization\",\n      detailMessage:\n        \"Call to GetValue failed because it was made before the call to Initialize.\",\n    },\n    \"123\": {\n      basicMessage: \"Retrieve Data After Termination\",\n      detailMessage:\n        \"Call to GetValue failed because it was made after the call to Terminate.\",\n    },\n    \"132\": {\n      basicMessage: \"Store Data Before Initialization\",\n      detailMessage:\n        \"Call to SetValue failed because it was made before the call to Initialize.\",\n    },\n    \"133\": {\n      basicMessage: \"Store Data After Termination\",\n      detailMessage:\n        \"Call to SetValue failed because it was made after the call to Terminate.\",\n    },\n    \"142\": {\n      basicMessage: \"Commit Before Initialization\",\n      detailMessage:\n        \"Call to Commit failed because it was made before the call to Initialize.\",\n    },\n    \"143\": {\n      basicMessage: \"Commit After Termination\",\n      detailMessage:\n        \"Call to Commit failed because it was made after the call to Terminate.\",\n    },\n    \"201\": {\n      basicMessage: \"General Argument Error\",\n      detailMessage:\n        \"An invalid argument was passed to an API method (usually indicates that Initialize, Commit or Terminate did not receive the expected empty string argument.\",\n    },\n    \"301\": {\n      basicMessage: \"General Get Failure\",\n      detailMessage:\n        \"Indicates a failed GetValue call where no other specific error code is applicable. Use GetDiagnostic for more information.\",\n    },\n    \"351\": {\n      basicMessage: \"General Set Failure\",\n      detailMessage:\n        \"Indicates a failed SetValue call where no other specific error code is applicable. Use GetDiagnostic for more information.\",\n    },\n    \"391\": {\n      basicMessage: \"General Commit Failure\",\n      detailMessage:\n        \"Indicates a failed Commit call where no other specific error code is applicable. Use GetDiagnostic for more information.\",\n    },\n    \"401\": {\n      basicMessage: \"Undefined Data Model Element\",\n      detailMessage:\n        \"The data model element name passed to GetValue or SetValue is not a valid SCORM data model element.\",\n    },\n    \"402\": {\n      basicMessage: \"Unimplemented Data Model Element\",\n      detailMessage:\n        \"The data model element indicated in a call to GetValue or SetValue is valid, but was not implemented by this LMS. In SCORM 2004, this error would indicate an LMS that is not fully SCORM conformant.\",\n    },\n    \"403\": {\n      basicMessage: \"Data Model Element Value Not Initialized\",\n      detailMessage:\n        \"Attempt to read a data model element that has not been initialized by the LMS or through a SetValue call. This error condition is often reached during normal execution of a SCO.\",\n    },\n    \"404\": {\n      basicMessage: \"Data Model Element Is Read Only\",\n      detailMessage:\n        \"SetValue was called with a data model element that can only be read.\",\n    },\n    \"405\": {\n      basicMessage: \"Data Model Element Is Write Only\",\n      detailMessage:\n        \"GetValue was called on a data model element that can only be written to.\",\n    },\n    \"406\": {\n      basicMessage: \"Data Model Element Type Mismatch\",\n      detailMessage:\n        \"SetValue was called with a value that is not consistent with the data format of the supplied data model element.\",\n    },\n    \"407\": {\n      basicMessage: \"Data Model Element Value Out Of Range\",\n      detailMessage:\n        \"The numeric value supplied to a SetValue call is outside of the numeric range allowed for the supplied data model element.\",\n    },\n    \"408\": {\n      basicMessage: \"Data Model Dependency Not Established\",\n      detailMessage:\n        \"Some data model elements cannot be set until another data model element was set. This error condition indicates that the prerequisite element was not set before the dependent element.\",\n    },\n  },\n};\nconst APIConstants: APIConstants = {\n  global: global,\n  scorm12: scorm12,\n  aicc: aicc,\n  scorm2004: scorm2004,\n};\nexport default APIConstants;\n","export enum NAVBoolean {\n  unknown = \"unknown\",\n  true = \"true\",\n  false = \"false\",\n}\n\nexport enum SuccessStatus {\n  passed = \"passed\",\n  failed = \"failed\",\n  unknown = \"unknown\",\n}\n\nexport enum CompletionStatus {\n  completed = \"completed\",\n  incomplete = \"incomplete\",\n  unknown = \"unknown\",\n}\n","export type ErrorCode = {\n  [key: string]: number;\n};\n\nconst global: ErrorCode = {\n  GENERAL: 101,\n  INITIALIZATION_FAILED: 101,\n  INITIALIZED: 101,\n  TERMINATED: 101,\n  TERMINATION_FAILURE: 101,\n  TERMINATION_BEFORE_INIT: 101,\n  MULTIPLE_TERMINATION: 101,\n  RETRIEVE_BEFORE_INIT: 101,\n  RETRIEVE_AFTER_TERM: 101,\n  STORE_BEFORE_INIT: 101,\n  STORE_AFTER_TERM: 101,\n  COMMIT_BEFORE_INIT: 101,\n  COMMIT_AFTER_TERM: 101,\n  ARGUMENT_ERROR: 101,\n  CHILDREN_ERROR: 101,\n  COUNT_ERROR: 101,\n  GENERAL_GET_FAILURE: 101,\n  GENERAL_SET_FAILURE: 101,\n  GENERAL_COMMIT_FAILURE: 101,\n  UNDEFINED_DATA_MODEL: 101,\n  UNIMPLEMENTED_ELEMENT: 101,\n  VALUE_NOT_INITIALIZED: 101,\n  INVALID_SET_VALUE: 101,\n  READ_ONLY_ELEMENT: 101,\n  WRITE_ONLY_ELEMENT: 101,\n  TYPE_MISMATCH: 101,\n  VALUE_OUT_OF_RANGE: 101,\n  DEPENDENCY_NOT_ESTABLISHED: 101,\n};\n\nconst scorm12: ErrorCode = {\n  ...global,\n  RETRIEVE_BEFORE_INIT: 301,\n  STORE_BEFORE_INIT: 301,\n  COMMIT_BEFORE_INIT: 301,\n  ARGUMENT_ERROR: 201,\n  CHILDREN_ERROR: 202,\n  COUNT_ERROR: 203,\n  UNDEFINED_DATA_MODEL: 401,\n  UNIMPLEMENTED_ELEMENT: 401,\n  VALUE_NOT_INITIALIZED: 301,\n  INVALID_SET_VALUE: 402,\n  READ_ONLY_ELEMENT: 403,\n  WRITE_ONLY_ELEMENT: 404,\n  TYPE_MISMATCH: 405,\n  VALUE_OUT_OF_RANGE: 407,\n  DEPENDENCY_NOT_ESTABLISHED: 408,\n};\n\nconst scorm2004: ErrorCode = {\n  ...global,\n  INITIALIZATION_FAILED: 102,\n  INITIALIZED: 103,\n  TERMINATED: 104,\n  TERMINATION_FAILURE: 111,\n  TERMINATION_BEFORE_INIT: 112,\n  MULTIPLE_TERMINATIONS: 113,\n  RETRIEVE_BEFORE_INIT: 122,\n  RETRIEVE_AFTER_TERM: 123,\n  STORE_BEFORE_INIT: 132,\n  STORE_AFTER_TERM: 133,\n  COMMIT_BEFORE_INIT: 142,\n  COMMIT_AFTER_TERM: 143,\n  ARGUMENT_ERROR: 201,\n  GENERAL_GET_FAILURE: 301,\n  GENERAL_SET_FAILURE: 351,\n  GENERAL_COMMIT_FAILURE: 391,\n  UNDEFINED_DATA_MODEL: 401,\n  UNIMPLEMENTED_ELEMENT: 402,\n  VALUE_NOT_INITIALIZED: 403,\n  READ_ONLY_ELEMENT: 404,\n  WRITE_ONLY_ELEMENT: 405,\n  TYPE_MISMATCH: 406,\n  VALUE_OUT_OF_RANGE: 407,\n  DEPENDENCY_NOT_ESTABLISHED: 408,\n};\n\nconst ErrorCodes = {\n  scorm12,\n  scorm2004,\n};\n\nexport default ErrorCodes;\n","const scorm12 = {\n  CMIString256: \"^.{0,255}$\",\n  CMIString4096: \"^.{0,4096}$\",\n  CMITime: \"^(?:[01]\\\\d|2[0123]):(?:[012345]\\\\d):(?:[012345]\\\\d)$\",\n  CMITimespan: \"^([0-9]{2,}):([0-9]{2}):([0-9]{2})(.[0-9]{1,2})?$\",\n\n  CMIInteger: \"^\\\\d+$\",\n  CMISInteger: \"^-?([0-9]+)$\",\n  CMIDecimal: \"^-?([0-9]{0,3})(.[0-9]*)?$\",\n\n  CMIIdentifier: \"^[\\\\u0021-\\\\u007E\\\\s]{0,255}$\",\n  CMIFeedback: \"^.{0,255}$\",\n  // This must be redefined\n  CMIIndex: \"[._](\\\\d+).\",\n  // Vocabulary Data Type Definition\n  CMIStatus: \"^(passed|completed|failed|incomplete|browsed)$\",\n  CMIStatus2: \"^(passed|completed|failed|incomplete|browsed|not attempted)$\",\n  CMIExit: \"^(time-out|suspend|logout|)$\",\n  CMIType:\n    \"^(true-false|choice|fill-in|matching|performance|sequencing|likert|numeric)$\",\n  CMIResult:\n    \"^(correct|wrong|unanticipated|neutral|([0-9]{0,3})?(\\\\.[0-9]*)?)$\",\n  NAVEvent: \"^(previous|continue)$\",\n  // Data ranges\n  score_range: \"0#100\",\n  audio_range: \"-1#100\",\n  speed_range: \"-100#100\",\n  weighting_range: \"-100#100\",\n  text_range: \"-1#1\",\n};\nconst aicc = {\n  ...scorm12,\n  ...{\n    CMIIdentifier: \"^\\\\w{1,255}$\",\n  },\n};\nconst scorm2004 = {\n  CMIString200: \"^[\\\\u0000-\\\\uFFFF]{0,200}$\",\n  CMIString250: \"^[\\\\u0000-\\\\uFFFF]{0,250}$\",\n  CMIString1000: \"^[\\\\u0000-\\\\uFFFF]{0,1000}$\",\n  CMIString4000: \"^[\\\\u0000-\\\\uFFFF]{0,4000}$\",\n  CMIString64000: \"^[\\\\u0000-\\\\uFFFF]{0,64000}$\",\n  CMILang: \"^([a-zA-Z]{2,3}|i|x)(-[a-zA-Z0-9-]{2,8})?$|^$\",\n\n  CMILangString250:\n    \"^({lang=([a-zA-Z]{2,3}|i|x)(-[a-zA-Z0-9-]{2,8})?})?((?!{.*$).{0,250}$)?$\",\n\n  CMILangcr: \"^(({lang=([a-zA-Z]{2,3}|i|x)?(-[a-zA-Z0-9-]{2,8})?}))(.*?)$\",\n\n  CMILangString250cr:\n    \"^(({lang=([a-zA-Z]{2,3}|i|x)?(-[a-zA-Z0-9-]{2,8})?})?(.{0,250})?)?$\",\n\n  CMILangString4000:\n    \"^({lang=([a-zA-Z]{2,3}|i|x)(-[a-zA-Z0-9-]{2,8})?})?((?!{.*$).{0,4000}$)?$\",\n\n  CMITime:\n    \"^(19[7-9]{1}[0-9]{1}|20[0-2]{1}[0-9]{1}|203[0-8]{1})((-(0[1-9]{1}|1[0-2]{1}))((-(0[1-9]{1}|[1-2]{1}[0-9]{1}|3[0-1]{1}))(T([0-1]{1}[0-9]{1}|2[0-3]{1})((:[0-5]{1}[0-9]{1})((:[0-5]{1}[0-9]{1})((\\\\.[0-9]{1,2})((Z|([+|-]([0-1]{1}[0-9]{1}|2[0-3]{1})))(:[0-5]{1}[0-9]{1})?)?)?)?)?)?)?)?$\",\n  CMITimespan:\n    \"^P(?:([.,\\\\d]+)Y)?(?:([.,\\\\d]+)M)?(?:([.,\\\\d]+)W)?(?:([.,\\\\d]+)D)?(?:T?(?:([.,\\\\d]+)H)?(?:([.,\\\\d]+)M)?(?:([.,\\\\d]+)S)?)?$\",\n  CMIInteger: \"^\\\\d+$\",\n  CMISInteger: \"^-?([0-9]+)$\",\n  CMIDecimal: \"^-?([0-9]{1,5})(\\\\.[0-9]{1,18})?$\",\n  CMIIdentifier: \"^\\\\S{1,250}[a-zA-Z0-9]$\",\n  CMIShortIdentifier: \"^[\\\\w\\\\.\\\\-\\\\_]{1,250}$\",\n  CMILongIdentifier:\n    \"^(?:(?!urn:)\\\\S{1,4000}|urn:[A-Za-z0-9-]{1,31}:\\\\S{1,4000}|.{1,4000})$\",\n  // need to re-examine this\n  CMIFeedback: \"^.*$\",\n  // This must be redefined\n  CMIIndex: \"[._](\\\\d+).\",\n  CMIIndexStore: \".N(\\\\d+).\",\n  // Vocabulary Data Type Definition\n  CMICStatus: \"^(completed|incomplete|not attempted|unknown)$\",\n  CMISStatus: \"^(passed|failed|unknown)$\",\n  CMIExit: \"^(time-out|suspend|logout|normal)$\",\n  CMIType:\n    \"^(true-false|choice|fill-in|long-fill-in|matching|performance|sequencing|likert|numeric|other)$\",\n  CMIResult:\n    \"^(correct|incorrect|unanticipated|neutral|-?([0-9]{1,4})(\\\\.[0-9]{1,18})?)$\",\n  NAVEvent:\n    \"^(previous|continue|exit|exitAll|abandon|abandonAll|suspendAll|_none_|(\\\\{target=\\\\S{0,}[a-zA-Z0-9-_]+})?choice|(\\\\{target=\\\\S{0,}[a-zA-Z0-9-_]+})?jump)$\",\n\n  NAVBoolean: \"^(unknown|true|false$)\",\n  NAVTarget: \"^{target=\\\\S{0,}[a-zA-Z0-9-_]+}$\",\n  // Data ranges\n  scaled_range: \"-1#1\",\n  audio_range: \"0#*\",\n  speed_range: \"0#*\",\n  text_range: \"-1#1\",\n  progress_range: \"0#1\",\n};\nconst Regex = {\n  aicc: aicc,\n  scorm12: scorm12,\n  scorm2004: scorm2004,\n};\nexport default Regex;\n","import APIConstants from \"./constants/api_constants\";\n\nconst scorm12_errors = APIConstants.scorm12.error_descriptions;\nconst aicc_errors = APIConstants.aicc.error_descriptions;\nconst scorm2004_errors = APIConstants.scorm2004.error_descriptions;\n\ntype APIError = {\n  errorCode: number;\n  errorMessage: string;\n  detailedMessage: string;\n};\n\nexport class BaseScormValidationError extends Error {\n  constructor(errorCode: number) {\n    super(errorCode.toString());\n    this._errorCode = errorCode;\n    this.name = \"ScormValidationError\";\n  }\n\n  private readonly _errorCode: number;\n\n  /**\n   * Getter for _errorCode\n   * @return {number}\n   */\n  get errorCode(): number {\n    return this._errorCode;\n  }\n\n  setMessage(message: string) {\n    this.message = message;\n  }\n}\n\n/**\n * Base Validation Exception\n */\nexport class ValidationError\n  extends BaseScormValidationError\n  implements APIError\n{\n  /**\n   * Constructor to take in an error message and code\n   * @param {number} errorCode\n   * @param {string} errorMessage\n   * @param {string} detailedMessage\n   */\n  constructor(\n    errorCode: number,\n    errorMessage: string,\n    detailedMessage?: string,\n  ) {\n    super(errorCode);\n    this.setMessage(errorMessage);\n    this._errorMessage = errorMessage;\n    if (detailedMessage) {\n      this._detailedMessage = detailedMessage;\n    }\n  }\n\n  private readonly _errorMessage: string;\n  private readonly _detailedMessage: string = \"\";\n\n  /**\n   * Getter for _errorMessage\n   * @return {string}\n   */\n  get errorMessage(): string {\n    return this._errorMessage;\n  }\n\n  /**\n   * Getter for _detailedMessage\n   * @return {string}\n   */\n  get detailedMessage(): string {\n    return this._detailedMessage;\n  }\n}\n\n/**\n * SCORM 1.2 Validation Error\n */\nexport class Scorm12ValidationError extends ValidationError {\n  /**\n   * Constructor to take in an error code\n   * @param {number} errorCode\n   */\n  constructor(errorCode: number) {\n    if ({}.hasOwnProperty.call(scorm12_errors, String(errorCode))) {\n      super(\n        errorCode,\n        scorm12_errors[String(errorCode)].basicMessage,\n        scorm12_errors[String(errorCode)].detailMessage,\n      );\n    } else {\n      super(\n        101,\n        scorm12_errors[\"101\"].basicMessage,\n        scorm12_errors[\"101\"].detailMessage,\n      );\n    }\n  }\n}\n\n/**\n * AICC Validation Error\n */\nexport class AICCValidationError extends ValidationError {\n  /**\n   * Constructor to take in an error code\n   * @param {number} errorCode\n   */\n  constructor(errorCode: number) {\n    if ({}.hasOwnProperty.call(aicc_errors, String(errorCode))) {\n      super(\n        errorCode,\n        aicc_errors[String(errorCode)].basicMessage,\n        aicc_errors[String(errorCode)].detailMessage,\n      );\n    } else {\n      super(\n        101,\n        aicc_errors[\"101\"].basicMessage,\n        aicc_errors[\"101\"].detailMessage,\n      );\n    }\n  }\n}\n\n/**\n * SCORM 2004 Validation Error\n */\nexport class Scorm2004ValidationError extends ValidationError {\n  /**\n   * Constructor to take in an error code\n   * @param {number} errorCode\n   */\n  constructor(errorCode: number) {\n    if ({}.hasOwnProperty.call(scorm2004_errors, String(errorCode))) {\n      super(\n        errorCode,\n        scorm2004_errors[String(errorCode)].basicMessage,\n        scorm2004_errors[String(errorCode)].detailMessage,\n      );\n    } else {\n      super(\n        101,\n        scorm2004_errors[\"101\"].basicMessage,\n        scorm2004_errors[\"101\"].detailMessage,\n      );\n    }\n  }\n}\n","export const SECONDS_PER_SECOND = 1.0;\nexport const SECONDS_PER_MINUTE = 60;\nexport const SECONDS_PER_HOUR = 60 * SECONDS_PER_MINUTE;\nexport const SECONDS_PER_DAY = 24 * SECONDS_PER_HOUR;\n\ntype Designation = {\n  [key: string]: number;\n};\n\ntype StringKeyMap = {\n  [key: string]: any;\n};\n\nconst designations: Designation = {\n  D: SECONDS_PER_DAY,\n  H: SECONDS_PER_HOUR,\n  M: SECONDS_PER_MINUTE,\n  S: SECONDS_PER_SECOND,\n};\n\n/**\n * Converts a Number to a String of HH:MM:SS\n *\n * @param {number} totalSeconds\n * @return {string}\n */\nexport function getSecondsAsHHMMSS(totalSeconds: number | null): string {\n  // SCORM spec does not deal with negative durations, give zero back\n  if (!totalSeconds || totalSeconds <= 0) {\n    return \"00:00:00\";\n  }\n\n  const hours = Math.floor(totalSeconds / SECONDS_PER_HOUR);\n  const dateObj = new Date(totalSeconds * 1000);\n  const minutes = dateObj.getUTCMinutes();\n  // make sure we add any possible decimal value\n  const seconds = dateObj.getSeconds();\n  const ms = totalSeconds % 1.0;\n  let msStr = \"\";\n\n  if (countDecimals(ms) > 0) {\n    if (countDecimals(ms) > 2) {\n      msStr = ms.toFixed(2);\n    } else {\n      msStr = String(ms);\n    }\n\n    msStr = \".\" + msStr.split(\".\")[1];\n  }\n\n  return (\n    (hours + \":\" + minutes + \":\" + seconds).replace(/\\b\\d\\b/g, \"0$&\") + msStr\n  );\n}\n\n/**\n * Calculate the number of seconds from ISO 8601 Duration\n *\n * @param {number} seconds\n * @return {string}\n */\nexport function getSecondsAsISODuration(seconds: number | null): string {\n  // SCORM spec does not deal with negative durations, give zero back\n  if (!seconds || seconds <= 0) {\n    return \"PT0S\";\n  }\n\n  let duration = \"P\";\n  let remainder = seconds;\n  for (const designationsKey in designations) {\n    const current_seconds = designations[designationsKey];\n    let value = Math.floor(remainder / current_seconds);\n    remainder = remainder % current_seconds;\n\n    if (countDecimals(remainder) > 2) {\n      remainder = Number(Number(remainder).toFixed(2));\n    }\n\n    // If we have anything left in the remainder, and we're currently adding\n    // seconds to the duration, go ahead and add the decimal to the seconds\n    if (designationsKey === \"S\" && remainder > 0) {\n      value += remainder;\n    }\n\n    if (value) {\n      if (\n        (duration.indexOf(\"D\") > 0 ||\n          designationsKey === \"H\" ||\n          designationsKey === \"M\" ||\n          designationsKey === \"S\") &&\n        duration.indexOf(\"T\") === -1\n      ) {\n        duration += \"T\";\n      }\n\n      duration += `${value}${designationsKey}`;\n    }\n  }\n  return duration;\n}\n\n/**\n * Calculate the number of seconds from HH:MM:SS.DDDDDD\n *\n * @param {string} timeString\n * @param {RegExp} timeRegex\n * @return {number}\n */\nexport function getTimeAsSeconds(\n  timeString: string | number | boolean | null,\n  timeRegex: RegExp | string,\n): number {\n  if (typeof timeString === \"number\" || typeof timeString === \"boolean\") {\n    timeString = String(timeString);\n  }\n  if (typeof timeRegex === \"string\") {\n    timeRegex = new RegExp(timeRegex);\n  }\n  if (!timeString || !timeString.match(timeRegex)) {\n    return 0;\n  }\n\n  const parts = timeString.split(\":\");\n  const hours = Number(parts[0]);\n  const minutes = Number(parts[1]);\n  const seconds = Number(parts[2]);\n  return hours * 3600 + minutes * 60 + seconds;\n}\n\n/**\n * Calculate the number of seconds from ISO 8601 Duration\n *\n * @param {string} duration\n * @param {RegExp} durationRegex\n * @return {number}\n */\nexport function getDurationAsSeconds(\n  duration: string | null,\n  durationRegex: RegExp | string,\n): number {\n  if (typeof durationRegex === \"string\") {\n    durationRegex = new RegExp(durationRegex);\n  }\n\n  if (!duration || !duration.match(durationRegex)) {\n    return 0;\n  }\n\n  const [, years, _, , days, hours, minutes, seconds] =\n    new RegExp(durationRegex).exec(duration) || [];\n  let result = 0.0;\n  result += Number(seconds) || 0.0;\n  result += Number(minutes) * 60.0 || 0.0;\n  result += Number(hours) * 3600.0 || 0.0;\n  result += Number(days) * (60 * 60 * 24.0) || 0.0;\n  result += Number(years) * (60 * 60 * 24 * 365.0) || 0.0;\n  return result;\n}\n\n/**\n * Adds together two ISO8601 Duration strings\n *\n * @param {string} first\n * @param {string} second\n * @param {RegExp|string} durationRegex\n * @return {string}\n */\nexport function addTwoDurations(\n  first: string,\n  second: string,\n  durationRegex: RegExp | string,\n): string {\n  const regex: RegExp =\n    typeof durationRegex === \"string\"\n      ? new RegExp(durationRegex)\n      : durationRegex;\n  return getSecondsAsISODuration(\n    getDurationAsSeconds(first, regex) + getDurationAsSeconds(second, regex),\n  );\n}\n\n/**\n * Add together two HH:MM:SS.DD strings\n *\n * @param {string} first\n * @param {string} second\n * @param {RegExp} timeRegex\n * @return {string}\n */\nexport function addHHMMSSTimeStrings(\n  first: string,\n  second: string,\n  timeRegex: RegExp | string,\n): string {\n  if (typeof timeRegex === \"string\") {\n    timeRegex = new RegExp(timeRegex);\n  }\n  return getSecondsAsHHMMSS(\n    getTimeAsSeconds(first, timeRegex) + getTimeAsSeconds(second, timeRegex),\n  );\n}\n\n/**\n * Flatten a JSON object down to string paths for each values\n * @param {object} data\n * @return {object}\n */\nexport function flatten(data: StringKeyMap): object {\n  const result: StringKeyMap = {};\n\n  /**\n   * Recurse through the object\n   * @param {*} cur\n   * @param {*} prop\n   */\n  function recurse(cur: any, prop: any) {\n    if (Object(cur) !== cur) {\n      result[prop] = cur;\n    } else if (Array.isArray(cur)) {\n      for (let i = 0, l = cur.length; i < l; i++) {\n        recurse(cur[i], prop + \"[\" + i + \"]\");\n        if (l === 0) result[prop] = [];\n      }\n    } else {\n      let isEmpty = true;\n\n      for (const p in cur) {\n        if ({}.hasOwnProperty.call(cur, p)) {\n          isEmpty = false;\n          recurse(cur[p], prop ? prop + \".\" + p : p);\n        }\n      }\n\n      if (isEmpty && prop) result[prop] = {};\n    }\n  }\n\n  recurse(data, \"\");\n  return result;\n}\n\n/**\n * Un-flatten a flat JSON object\n * @param {object} data\n * @return {object}\n */\nexport function unflatten(data: StringKeyMap): object {\n  \"use strict\";\n\n  if (Object(data) !== data || Array.isArray(data)) return data;\n  const regex = /\\.?([^.[\\]]+)|\\[(\\d+)]/g;\n  const result: StringKeyMap = {};\n\n  for (const p in data) {\n    if ({}.hasOwnProperty.call(data, p)) {\n      let cur = result;\n      let prop = \"\";\n      let m = regex.exec(p);\n\n      while (m) {\n        cur = cur[prop] || (cur[prop] = m[2] ? [] : {});\n        prop = m[2] || m[1];\n        m = regex.exec(p);\n      }\n\n      cur[prop] = data[p];\n    }\n  }\n\n  return result[\"\"] || result;\n}\n\n/**\n * Counts the number of decimal places\n * @param {number} num\n * @return {number}\n */\nexport function countDecimals(num: number): number {\n  if (Math.floor(num) === num || String(num).indexOf(\".\") < 0) return 0;\n  const parts = num.toString().split(\".\")[1];\n  return parts.length || 0;\n}\n\n/**\n * Formats the SCORM messages for easy reading\n *\n * @param {string} functionName\n * @param {string} message\n * @param {string} CMIElement\n * @return {string}\n */\nexport function formatMessage(\n  functionName: string,\n  message: string,\n  CMIElement?: string,\n): string {\n  const baseLength = 20;\n  let messageString = \"\";\n\n  messageString += functionName;\n\n  let fillChars = baseLength - messageString.length;\n\n  for (let i = 0; i < fillChars; i++) {\n    messageString += \" \";\n  }\n\n  messageString += \": \";\n\n  if (CMIElement) {\n    const CMIElementBaseLength = 70;\n\n    messageString += CMIElement;\n\n    fillChars = CMIElementBaseLength - messageString.length;\n\n    for (let j = 0; j < fillChars; j++) {\n      messageString += \" \";\n    }\n  }\n\n  if (message) {\n    messageString += message;\n  }\n\n  return messageString;\n}\n\n/**\n * Checks to see if {str} contains {tester}\n *\n * @param {string} str String to check against\n * @param {string} tester String to check for\n * @return {boolean}\n */\nexport function stringMatches(str: string, tester: string): boolean {\n  return str?.match(tester) !== null;\n}\n","/******************************************************************************\nCopyright (c) Microsoft Corporation.\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\nPERFORMANCE OF THIS SOFTWARE.\n***************************************************************************** */\n/* global Reflect, Promise, SuppressedError, Symbol, Iterator */\n\nvar extendStatics = function(d, b) {\n  extendStatics = Object.setPrototypeOf ||\n      ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n      function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n  return extendStatics(d, b);\n};\n\nexport function __extends(d, b) {\n  if (typeof b !== \"function\" && b !== null)\n      throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n  extendStatics(d, b);\n  function __() { this.constructor = d; }\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\n\nexport var __assign = function() {\n  __assign = Object.assign || function __assign(t) {\n      for (var s, i = 1, n = arguments.length; i < n; i++) {\n          s = arguments[i];\n          for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n      return t;\n  }\n  return __assign.apply(this, arguments);\n}\n\nexport function __rest(s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n      t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n      for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n          if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n              t[p[i]] = s[p[i]];\n      }\n  return t;\n}\n\nexport function __decorate(decorators, target, key, desc) {\n  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n}\n\nexport function __param(paramIndex, decorator) {\n  return function (target, key) { decorator(target, key, paramIndex); }\n}\n\nexport function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\n  function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\n  var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\n  var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\n  var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\n  var _, done = false;\n  for (var i = decorators.length - 1; i >= 0; i--) {\n      var context = {};\n      for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\n      for (var p in contextIn.access) context.access[p] = contextIn.access[p];\n      context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\n      var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\n      if (kind === \"accessor\") {\n          if (result === void 0) continue;\n          if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\n          if (_ = accept(result.get)) descriptor.get = _;\n          if (_ = accept(result.set)) descriptor.set = _;\n          if (_ = accept(result.init)) initializers.unshift(_);\n      }\n      else if (_ = accept(result)) {\n          if (kind === \"field\") initializers.unshift(_);\n          else descriptor[key] = _;\n      }\n  }\n  if (target) Object.defineProperty(target, contextIn.name, descriptor);\n  done = true;\n};\n\nexport function __runInitializers(thisArg, initializers, value) {\n  var useValue = arguments.length > 2;\n  for (var i = 0; i < initializers.length; i++) {\n      value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\n  }\n  return useValue ? value : void 0;\n};\n\nexport function __propKey(x) {\n  return typeof x === \"symbol\" ? x : \"\".concat(x);\n};\n\nexport function __setFunctionName(f, name, prefix) {\n  if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\n  return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\n};\n\nexport function __metadata(metadataKey, metadataValue) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\n}\n\nexport function __awaiter(thisArg, _arguments, P, generator) {\n  function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n  return new (P || (P = Promise))(function (resolve, reject) {\n      function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n      function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n      function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n      step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n}\n\nexport function __generator(thisArg, body) {\n  var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === \"function\" ? Iterator : Object).prototype);\n  return g.next = verb(0), g[\"throw\"] = verb(1), g[\"return\"] = verb(2), typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n  function verb(n) { return function (v) { return step([n, v]); }; }\n  function step(op) {\n      if (f) throw new TypeError(\"Generator is already executing.\");\n      while (g && (g = 0, op[0] && (_ = 0)), _) try {\n          if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n          if (y = 0, t) op = [op[0] & 2, t.value];\n          switch (op[0]) {\n              case 0: case 1: t = op; break;\n              case 4: _.label++; return { value: op[1], done: false };\n              case 5: _.label++; y = op[1]; op = [0]; continue;\n              case 7: op = _.ops.pop(); _.trys.pop(); continue;\n              default:\n                  if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                  if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                  if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                  if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                  if (t[2]) _.ops.pop();\n                  _.trys.pop(); continue;\n          }\n          op = body.call(thisArg, _);\n      } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n      if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n  }\n}\n\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n  }\n  Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nexport function __exportStar(m, o) {\n  for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\n}\n\nexport function __values(o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n      next: function () {\n          if (o && i >= o.length) o = void 0;\n          return { value: o && o[i++], done: !o };\n      }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n}\n\nexport function __read(o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o), r, ar = [], e;\n  try {\n      while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  }\n  catch (error) { e = { error: error }; }\n  finally {\n      try {\n          if (r && !r.done && (m = i[\"return\"])) m.call(i);\n      }\n      finally { if (e) throw e.error; }\n  }\n  return ar;\n}\n\n/** @deprecated */\nexport function __spread() {\n  for (var ar = [], i = 0; i < arguments.length; i++)\n      ar = ar.concat(__read(arguments[i]));\n  return ar;\n}\n\n/** @deprecated */\nexport function __spreadArrays() {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n  for (var r = Array(s), k = 0, i = 0; i < il; i++)\n      for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n          r[k] = a[j];\n  return r;\n}\n\nexport function __spreadArray(to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n      if (ar || !(i in from)) {\n          if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n          ar[i] = from[i];\n      }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n}\n\nexport function __await(v) {\n  return this instanceof __await ? (this.v = v, this) : new __await(v);\n}\n\nexport function __asyncGenerator(thisArg, _arguments, generator) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var g = generator.apply(thisArg, _arguments || []), i, q = [];\n  return i = Object.create((typeof AsyncIterator === \"function\" ? AsyncIterator : Object).prototype), verb(\"next\"), verb(\"throw\"), verb(\"return\", awaitReturn), i[Symbol.asyncIterator] = function () { return this; }, i;\n  function awaitReturn(f) { return function (v) { return Promise.resolve(v).then(f, reject); }; }\n  function verb(n, f) { if (g[n]) { i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; if (f) i[n] = f(i[n]); } }\n  function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\n  function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\n  function fulfill(value) { resume(\"next\", value); }\n  function reject(value) { resume(\"throw\", value); }\n  function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\n}\n\nexport function __asyncDelegator(o) {\n  var i, p;\n  return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\n  function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\n}\n\nexport function __asyncValues(o) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var m = o[Symbol.asyncIterator], i;\n  return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n  function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n  function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n}\n\nexport function __makeTemplateObject(cooked, raw) {\n  if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\n  return cooked;\n};\n\nvar __setModuleDefault = Object.create ? (function(o, v) {\n  Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n  o[\"default\"] = v;\n};\n\nexport function __importStar(mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n}\n\nexport function __importDefault(mod) {\n  return (mod && mod.__esModule) ? mod : { default: mod };\n}\n\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n}\n\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n}\n\nexport function __classPrivateFieldIn(state, receiver) {\n  if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\n  return typeof state === \"function\" ? receiver === state : state.has(receiver);\n}\n\nexport function __addDisposableResource(env, value, async) {\n  if (value !== null && value !== void 0) {\n    if (typeof value !== \"object\" && typeof value !== \"function\") throw new TypeError(\"Object expected.\");\n    var dispose, inner;\n    if (async) {\n      if (!Symbol.asyncDispose) throw new TypeError(\"Symbol.asyncDispose is not defined.\");\n      dispose = value[Symbol.asyncDispose];\n    }\n    if (dispose === void 0) {\n      if (!Symbol.dispose) throw new TypeError(\"Symbol.dispose is not defined.\");\n      dispose = value[Symbol.dispose];\n      if (async) inner = dispose;\n    }\n    if (typeof dispose !== \"function\") throw new TypeError(\"Object not disposable.\");\n    if (inner) dispose = function() { try { inner.call(this); } catch (e) { return Promise.reject(e); } };\n    env.stack.push({ value: value, dispose: dispose, async: async });\n  }\n  else if (async) {\n    env.stack.push({ async: true });\n  }\n  return value;\n}\n\nvar _SuppressedError = typeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\n  var e = new Error(message);\n  return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\n};\n\nexport function __disposeResources(env) {\n  function fail(e) {\n    env.error = env.hasError ? new _SuppressedError(e, env.error, \"An error was suppressed during disposal.\") : e;\n    env.hasError = true;\n  }\n  var r, s = 0;\n  function next() {\n    while (r = env.stack.pop()) {\n      try {\n        if (!r.async && s === 1) return s = 0, env.stack.push(r), Promise.resolve().then(next);\n        if (r.dispose) {\n          var result = r.dispose.call(r.value);\n          if (r.async) return s |= 2, Promise.resolve(result).then(next, function(e) { fail(e); return next(); });\n        }\n        else s |= 1;\n      }\n      catch (e) {\n        fail(e);\n      }\n    }\n    if (s === 1) return env.hasError ? Promise.reject(env.error) : Promise.resolve();\n    if (env.hasError) throw env.error;\n  }\n  return next();\n}\n\nexport default {\n  __extends,\n  __assign,\n  __rest,\n  __decorate,\n  __param,\n  __metadata,\n  __awaiter,\n  __generator,\n  __createBinding,\n  __exportStar,\n  __values,\n  __read,\n  __spread,\n  __spreadArrays,\n  __spreadArray,\n  __await,\n  __asyncGenerator,\n  __asyncDelegator,\n  __asyncValues,\n  __makeTemplateObject,\n  __importStar,\n  __importDefault,\n  __classPrivateFieldGet,\n  __classPrivateFieldSet,\n  __classPrivateFieldIn,\n  __addDisposableResource,\n  __disposeResources,\n};\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","import { CMI } from \"./cmi/scorm12/cmi\";\nimport * as Utilities from \"./utilities\";\nimport { stringMatches } from \"./utilities\";\nimport APIConstants from \"./constants/api_constants\";\nimport ErrorCodes from \"./constants/error_codes\";\n\nimport { BaseCMI } from \"./cmi/common/base_cmi\";\nimport { CMIObjectivesObject } from \"./cmi/scorm12/objectives\";\nimport {\n  CMIInteractionsCorrectResponsesObject,\n  CMIInteractionsObject,\n  CMIInteractionsObjectivesObject,\n} from \"./cmi/scorm12/interactions\";\nimport { NAV } from \"./cmi/scorm12/nav\";\nimport {\n  CommitObject,\n  RefObject,\n  ResultObject,\n  ScoreObject,\n  Settings,\n} from \"./types/api_types\";\nimport Regex from \"./constants/regex\";\nimport { CompletionStatus, SuccessStatus } from \"./constants/enums\";\nimport BaseAPI from \"./BaseAPI\";\n\n/**\n * API class for SCORM 1.2\n */\nclass Scorm12Impl extends BaseAPI {\n  /**\n   * Constructor for SCORM 1.2 API\n   * @param {object} settings\n   */\n  constructor(settings?: Settings) {\n    if (settings) {\n      if (settings.mastery_override === undefined) {\n        settings.mastery_override = false;\n      }\n    }\n\n    super(ErrorCodes.scorm12, settings);\n\n    this.cmi = new CMI();\n    this.nav = new NAV();\n\n    // Rename functions to match 1.2 Spec and expose to modules\n    this.LMSInitialize = this.lmsInitialize;\n    this.LMSFinish = this.lmsFinish;\n    this.LMSGetValue = this.lmsGetValue;\n    this.LMSSetValue = this.lmsSetValue;\n    this.LMSCommit = this.lmsCommit;\n    this.LMSGetLastError = this.lmsGetLastError;\n    this.LMSGetErrorString = this.lmsGetErrorString;\n    this.LMSGetDiagnostic = this.lmsGetDiagnostic;\n  }\n\n  public statusSetByModule = false;\n\n  cmi: CMI;\n  nav: NAV;\n\n  LMSInitialize: () => string;\n  LMSFinish: () => string;\n  LMSGetValue: (CMIElement: string) => string;\n  LMSSetValue: (CMIElement: string, value: any) => string;\n  LMSCommit: () => string;\n  LMSGetLastError: () => string;\n  LMSGetErrorString: (CMIErrorCode: string) => string;\n  LMSGetDiagnostic: (CMIErrorCode: string) => string;\n\n  /**\n   * Called when the API needs to be reset\n   */\n  reset(settings?: Settings) {\n    this.commonReset(settings);\n\n    this.cmi = new CMI();\n    this.nav = new NAV();\n  }\n\n  /**\n   * lmsInitialize function from SCORM 1.2 Spec\n   *\n   * @return {string} bool\n   */\n  lmsInitialize(): string {\n    this.cmi.initialize();\n    if (this.cmi.core.lesson_status) {\n      this.statusSetByModule = true;\n    } else {\n      this.cmi.core.lesson_status = \"not attempted\";\n    }\n    return this.initialize(\n      \"LMSInitialize\",\n      \"LMS was already initialized!\",\n      \"LMS is already finished!\",\n    );\n  }\n\n  /**\n   * LMSFinish function from SCORM 1.2 Spec\n   *\n   * @return {string} bool\n   */\n  lmsFinish(): string {\n    (async () => {\n      await this.internalFinish();\n    })();\n    return APIConstants.global.SCORM_TRUE;\n  }\n\n  async internalFinish(): Promise<string> {\n    const result = await this.terminate(\"LMSFinish\", true);\n\n    if (result === APIConstants.global.SCORM_TRUE) {\n      if (this.nav.event !== \"\") {\n        if (this.nav.event === \"continue\") {\n          this.processListeners(\"SequenceNext\");\n        } else {\n          this.processListeners(\"SequencePrevious\");\n        }\n      } else if (this.settings.autoProgress) {\n        this.processListeners(\"SequenceNext\");\n      }\n    }\n\n    return result;\n  }\n\n  /**\n   * LMSGetValue function from SCORM 1.2 Spec\n   *\n   * @param {string} CMIElement\n   * @return {string}\n   */\n  lmsGetValue(CMIElement: string): string {\n    return this.getValue(\"LMSGetValue\", false, CMIElement);\n  }\n\n  /**\n   * LMSSetValue function from SCORM 1.2 Spec\n   *\n   * @param {string} CMIElement\n   * @param {*} value\n   * @return {string}\n   */\n  lmsSetValue(CMIElement: string, value: any): string {\n    if (CMIElement === \"cmi.core.lesson_status\") {\n      this.statusSetByModule = true;\n    }\n    return this.setValue(\"LMSSetValue\", \"LMSCommit\", false, CMIElement, value);\n  }\n\n  /**\n   * LMSCommit function from SCORM 1.2 Spec\n   *\n   * @return {string} bool\n   */\n  lmsCommit(): string {\n    (async () => {\n      await this.commit(\"LMSCommit\", false);\n    })();\n    return APIConstants.global.SCORM_TRUE;\n  }\n\n  /**\n   * LMSGetLastError function from SCORM 1.2 Spec\n   *\n   * @return {string}\n   */\n  lmsGetLastError(): string {\n    return this.getLastError(\"LMSGetLastError\");\n  }\n\n  /**\n   * LMSGetErrorString function from SCORM 1.2 Spec\n   *\n   * @param {string} CMIErrorCode\n   * @return {string}\n   */\n  lmsGetErrorString(CMIErrorCode: string): string {\n    return this.getErrorString(\"LMSGetErrorString\", CMIErrorCode);\n  }\n\n  /**\n   * LMSGetDiagnostic function from SCORM 1.2 Spec\n   *\n   * @param {string} CMIErrorCode\n   * @return {string}\n   */\n  lmsGetDiagnostic(CMIErrorCode: string): string {\n    return this.getDiagnostic(\"LMSGetDiagnostic\", CMIErrorCode);\n  }\n\n  /**\n   * Sets a value on the CMI Object\n   *\n   * @param {string} CMIElement\n   * @param {*} value\n   * @return {string}\n   */\n  setCMIValue(CMIElement: string, value: any): string {\n    return this._commonSetCMIValue(\"LMSSetValue\", false, CMIElement, value);\n  }\n\n  /**\n   * Gets a value from the CMI Object\n   *\n   * @param {string} CMIElement\n   * @return {*}\n   */\n  getCMIValue(CMIElement: string): any {\n    return this._commonGetCMIValue(\"getCMIValue\", false, CMIElement);\n  }\n\n  /**\n   * Gets or builds a new child element to add to the array.\n   *\n   * @param {string} CMIElement\n   * @param {*} _value\n   * @param {boolean} foundFirstIndex\n   * @return {BaseCMI|null}\n   */\n  getChildElement(\n    CMIElement: string,\n    _value: any,\n    foundFirstIndex: boolean,\n  ): BaseCMI | null {\n    if (stringMatches(CMIElement, \"cmi\\\\.objectives\\\\.\\\\d+\")) {\n      return new CMIObjectivesObject();\n    } else if (\n      foundFirstIndex &&\n      stringMatches(\n        CMIElement,\n        \"cmi\\\\.interactions\\\\.\\\\d+\\\\.correct_responses\\\\.\\\\d+\",\n      )\n    ) {\n      return new CMIInteractionsCorrectResponsesObject();\n    } else if (\n      foundFirstIndex &&\n      stringMatches(CMIElement, \"cmi\\\\.interactions\\\\.\\\\d+\\\\.objectives\\\\.\\\\d+\")\n    ) {\n      return new CMIInteractionsObjectivesObject();\n    } else if (\n      !foundFirstIndex &&\n      stringMatches(CMIElement, \"cmi\\\\.interactions\\\\.\\\\d+\")\n    ) {\n      return new CMIInteractionsObject();\n    }\n\n    return null;\n  }\n\n  /**\n   * Validates Correct Response values\n   *\n   * @param {string} _CMIElement\n   * @param {*} _value\n   */\n  validateCorrectResponse(_CMIElement: string, _value: any) {\n    // do nothing\n  }\n\n  /**\n   * Returns the message that corresponds to errorNumber.\n   *\n   * @param {number|string} errorNumber\n   * @param {boolean} detail\n   * @return {string}\n   */\n  getLmsErrorMessageDetails(\n    errorNumber: number | string,\n    detail: boolean,\n  ): string {\n    let basicMessage = \"No Error\";\n    let detailMessage = \"No Error\";\n\n    // Set error number to string since inconsistent from modules if string or number\n    errorNumber = String(errorNumber);\n    if (APIConstants.scorm12.error_descriptions[errorNumber]) {\n      basicMessage =\n        APIConstants.scorm12.error_descriptions[errorNumber].basicMessage;\n      detailMessage =\n        APIConstants.scorm12.error_descriptions[errorNumber].detailMessage;\n    }\n\n    return detail ? detailMessage : basicMessage;\n  }\n\n  /**\n   * Replace the whole API with another\n   *\n   * @param {Scorm12Impl} newAPI\n   */\n  replaceWithAnotherScormAPI(newAPI: Scorm12Impl) {\n    // Data Model\n    this.cmi = newAPI.cmi;\n  }\n\n  /**\n   * Render the cmi object to the proper format for LMS commit\n   *\n   * @param {boolean} terminateCommit\n   * @return {object|Array}\n   */\n  renderCommitCMI(terminateCommit: boolean): object | Array<any> {\n    const cmiExport: RefObject = this.renderCMIToJSONObject();\n\n    if (terminateCommit) {\n      cmiExport.cmi.core.total_time = this.cmi.getCurrentTotalTime();\n    }\n\n    const result = [];\n    const flattened: RefObject = Utilities.flatten(cmiExport);\n    switch (this.settings.dataCommitFormat) {\n      case \"flattened\":\n        return Utilities.flatten(cmiExport);\n      case \"params\":\n        for (const item in flattened) {\n          if ({}.hasOwnProperty.call(flattened, item)) {\n            result.push(`${item}=${flattened[item]}`);\n          }\n        }\n        return result;\n      case \"json\":\n      default:\n        return cmiExport;\n    }\n  }\n\n  /**\n   * Render the cmi object to the proper format for LMS commit\n   * @param {boolean} terminateCommit\n   * @return {CommitObject}\n   */\n  renderCommitObject(terminateCommit: boolean): CommitObject {\n    const cmiExport = this.renderCommitCMI(terminateCommit);\n    const totalTimeHHMMSS = this.cmi.getCurrentTotalTime();\n    const totalTimeSeconds = Utilities.getTimeAsSeconds(\n      totalTimeHHMMSS,\n      Regex.scorm12.CMITimespan,\n    );\n    const lessonStatus = this.cmi.core.lesson_status;\n    let completionStatus = CompletionStatus.unknown;\n    let successStatus = SuccessStatus.unknown;\n    if (lessonStatus) {\n      completionStatus =\n        lessonStatus === \"completed\" || lessonStatus === \"passed\"\n          ? CompletionStatus.completed\n          : CompletionStatus.incomplete;\n      if (lessonStatus === \"passed\") {\n        successStatus = SuccessStatus.passed;\n      } else if (lessonStatus === \"failed\") {\n        successStatus = SuccessStatus.failed;\n      }\n    }\n\n    const score = this.cmi.core.score;\n    let scoreObject: ScoreObject = null;\n    if (score) {\n      scoreObject = {};\n\n      if (!Number.isNaN(Number.parseFloat(score.raw))) {\n        scoreObject.raw = Number.parseFloat(score.raw);\n      }\n      if (!Number.isNaN(Number.parseFloat(score.min))) {\n        scoreObject.min = Number.parseFloat(score.min);\n      }\n      if (!Number.isNaN(Number.parseFloat(score.max))) {\n        scoreObject.max = Number.parseFloat(score.max);\n      }\n    }\n\n    const commitObject: CommitObject = {\n      successStatus: successStatus,\n      completionStatus: completionStatus,\n      runtimeData: cmiExport,\n      totalTimeSeconds: totalTimeSeconds,\n    };\n    if (scoreObject) {\n      commitObject.score = scoreObject;\n    }\n    return commitObject;\n  }\n\n  /**\n   * Attempts to store the data to the LMS\n   *\n   * @param {boolean} terminateCommit\n   * @return {ResultObject}\n   */\n  async storeData(terminateCommit: boolean): Promise<ResultObject> {\n    if (terminateCommit) {\n      const originalStatus = this.cmi.core.lesson_status;\n      if (\n        !this.cmi.core.lesson_status ||\n        (!this.statusSetByModule &&\n          this.cmi.core.lesson_status === \"not attempted\")\n      ) {\n        this.cmi.core.lesson_status = \"completed\";\n      }\n\n      if (this.cmi.core.lesson_mode === \"normal\") {\n        if (this.cmi.core.credit === \"credit\") {\n          if (\n            this.settings.mastery_override &&\n            this.cmi.student_data.mastery_score !== \"\" &&\n            this.cmi.core.score.raw !== \"\"\n          ) {\n            this.cmi.core.lesson_status =\n              parseFloat(this.cmi.core.score.raw) >=\n              parseFloat(this.cmi.student_data.mastery_score)\n                ? \"passed\"\n                : \"failed\";\n          }\n        }\n      } else if (this.cmi.core.lesson_mode === \"browse\") {\n        if (\n          (this.startingData?.cmi?.core?.lesson_status || \"\") === \"\" &&\n          originalStatus === \"not attempted\"\n        ) {\n          this.cmi.core.lesson_status = \"browsed\";\n        }\n      }\n    }\n\n    const commitObject = this.getCommitObject(terminateCommit);\n    if (typeof this.settings.lmsCommitUrl === \"string\") {\n      return await this.processHttpRequest(\n        this.settings.lmsCommitUrl,\n        commitObject,\n        terminateCommit,\n      );\n    } else {\n      return {\n        result: APIConstants.global.SCORM_TRUE,\n        errorCode: 0,\n      };\n    }\n  }\n}\n\nexport { Scorm12Impl };\n"],"names":["DefaultSettings","autocommit","autocommitSeconds","asyncCommit","sendFullCommit","lmsCommitUrl","dataCommitFormat","commitRequestDataType","autoProgress","logLevel","A","global","LOG_LEVEL_ERROR","selfReportSessionTime","alwaysSendTotalTime","renderCommonCommitFields","strict_errors","xhrHeaders","xhrWithCredentials","fetchMode","responseHandler","response","JSON","parse","text","httpResult","hasOwnProperty","call","result","errorCode","SCORM_TRUE","status","SCORM_FALSE","requestHandler","commitObject","onLogMessage","messageLevel","logMessage","console","error","LOG_LEVEL_WARNING","warn","LOG_LEVEL_INFO","info","LOG_LEVEL_DEBUG","debug","log","scoItemIds","scoItemIdValidator","API","when","callback","_cancelled","this","_API","_timeout","setTimeout","wrapper","bind","_callback","cancel","clearTimeout","commit","error_codes","settings","_settings","BaseAPI","TypeError","currentState","STATE_NOT_INITIALIZED","lastErrorCode","listenerArray","_error_codes","apiLogLevel","commonReset","initialize","callbackName","initializeMessage","terminationMessage","returnValue","isInitialized","throwSCORMError","INITIALIZED","isTerminated","TERMINATED","cmi","setStartTime","STATE_INITIALIZED","processListeners","apiLog","clearSCORMError","functionName","CMIElement","terminate","checkTerminated","checkState","TERMINATION_BEFORE_INIT","MULTIPLE_TERMINATION","STATE_TERMINATED","storeData","getValue","RETRIEVE_BEFORE_INIT","RETRIEVE_AFTER_TERM","getCMIValue","e","handleValueAccessException","undefined","setValue","commitCallback","value","String","STORE_BEFORE_INIT","STORE_AFTER_TERM","setCMIValue","scheduleCommit","clearScheduledCommit","COMMIT_BEFORE_INIT","COMMIT_AFTER_TERM","getLastError","getErrorString","CMIErrorCode","getLmsErrorMessageDetails","getDiagnostic","beforeInitError","afterTermError","isNotInitialized","_errorNumber","_detail","Error","_CMIElement","_value","_commonSetCMIValue","methodName","scorm2004","structure","split","refObject","foundFirstIndex","invalidErrorMessage","invalidErrorCode","UNDEFINED_DATA_MODEL","GENERAL","idx","length","attribute","substring","READ_ONLY_ELEMENT","_checkObjectHasProperty","validateCorrectResponse","index","parseInt","isNaN","item","childArray","newChild","getChildElement","initialized","push","_commonGetCMIValue","uninitializedErrorMessage","_isTargetValid","target","VALUE_NOT_INITIALIZED","scorm12","CHILDREN_ERROR","COUNT_ERROR","on","listenerName","listenerFunctions","i","listenerSplit","replace","off","removeIndex","findIndex","obj","splice","clear","filter","listener","functionsMatch","listenerHasCMIElement","CMIElementsMatch","indexOf","errorNumber","message","success","loadFromFlattenedJSON","json","int_pattern","obj_pattern","Object","keys","map","key","sort","test","a","c","testPattern","forEach","element","loadFromJSON","a_pattern","c_match","a_match","match","a_num","Number","c_num","startingData","currentCMIElement","constructor","renderCMIToJSONString","stringify","k","v","renderCMIToJSONObject","processHttpRequest","url","params","immediate","api","genericError","performFetch","then","transformResponse","process","debouncedProcess","func","wait","timeout","context","callNow","apply","args","debounce","ScheduledCommit","getOwnPropertyDescriptor","getPrototypeOf","getCommitObject","terminateCommit","shouldTerminateCommit","renderCommitObject","renderCommitCMI","fetch","method","mode","body","Array","join","headers","credentials","keepalive","scorm12_error_codes","__children","children","_errorCode","_errorClass","errorClass","_children","_count","toJSON","jsonString","_initialized","_start_time","Date","getTime","BaseCMI","scorm12_constants","scorm12_regex","_raw","_min","score_children","__score_range","score_range","_max","max","__invalid_error_code","INVALID_SET_VALUE","__invalid_type_code","invalidTypeCode","TYPE_MISMATCH","__invalid_range_code","invalidRangeCode","VALUE_OUT_OF_RANGE","__decimal_regex","decimalRegex","CMIDecimal","__error_class","raw","min","checkValidFormat","regexPattern","allowEmptyString","formatRegex","RegExp","matches","checkValidRange","rangePattern","ranges","core_children","_student_id","_student_name","_lesson_location","_credit","_lesson_status","_entry","_total_time","_lesson_mode","_exit","_session_time","_suspend_data","score","student_id","student_name","lesson_location","CMIString256","credit","lesson_status","CMIStatus","CMIStatus2","entry","total_time","lesson_mode","WRITE_ONLY_ELEMENT","exit","CMIExit","session_time","CMITimespan","suspend_data","CMIString4096","getCurrentTotalTime","start_time","sessionTime","startTime","seconds","cmi_children","student_data","__version","_launch_data","_comments","_comments_from_lms","core","CMICore","objectives","C","student_preference","interactions","launch_data","comments","comments_from_lms","_version","interactions_children","_id","_time","_type","_weighting","_student_response","_result","_latency","objectives_children","correct_responses","correct_responses_children","id","CMIIdentifier","time","CMITime","type","CMIType","weighting","weighting_range","student_response","CMIFeedback","CMIResult","latency","_pattern","pattern","_event","event","NAVEvent","_status","student_data_children","_mastery_score","_max_time_allowed","_time_limit_action","mastery_score","max_time_allowed","time_limit_action","student_preference_children","_audio","_language","_speed","_text","audio","CMISInteger","audio_range","language","speed","speed_range","text_range","check12ValidFormat","check12ValidRange","comments_children","error_descriptions","basicMessage","detailMessage","APIConstants","LOG_LEVEL_NONE","aicc","student_demographics_children","tries_children","attempt_records_children","paths_children","NAVBoolean","SuccessStatus","CompletionStatus","INITIALIZATION_FAILED","TERMINATION_FAILURE","ARGUMENT_ERROR","GENERAL_GET_FAILURE","GENERAL_SET_FAILURE","GENERAL_COMMIT_FAILURE","UNIMPLEMENTED_ELEMENT","DEPENDENCY_NOT_ESTABLISHED","ErrorCodes","MULTIPLE_TERMINATIONS","CMIInteger","CMIIndex","Regex","CMIString200","CMIString250","CMIString1000","CMIString4000","CMIString64000","CMILang","CMILangString250","CMILangcr","CMILangString250cr","CMILangString4000","CMIShortIdentifier","CMILongIdentifier","CMIIndexStore","CMICStatus","CMISStatus","NAVTarget","scaled_range","progress_range","scorm12_errors","aicc_errors","scorm2004_errors","toString","name","setMessage","errorMessage","detailedMessage","_detailedMessage","_errorMessage","BaseScormValidationError","ValidationError","SECONDS_PER_HOUR","getSecondsAsHHMMSS","totalSeconds","hours","Math","floor","dateObj","minutes","getUTCMinutes","getSeconds","ms","msStr","countDecimals","toFixed","getTimeAsSeconds","timeString","timeRegex","parts","addHHMMSSTimeStrings","first","second","flatten","data","recurse","cur","prop","isArray","l","isEmpty","p","unflatten","regex","m","exec","num","formatMessage","messageString","fillChars","j","stringMatches","str","tester","extendStatics","d","b","setPrototypeOf","__proto__","prototype","__extends","__","create","__assign","assign","t","s","n","arguments","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","next","rejected","done","__generator","f","y","_","label","sent","trys","ops","g","Iterator","verb","Symbol","iterator","op","pop","SuppressedError","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","definition","o","defineProperty","enumerable","get","mastery_override","statusSetByModule","nav","LMSInitialize","lmsInitialize","LMSFinish","lmsFinish","LMSGetValue","lmsGetValue","LMSSetValue","lmsSetValue","LMSCommit","lmsCommit","LMSGetLastError","lmsGetLastError","LMSGetErrorString","lmsGetErrorString","LMSGetDiagnostic","lmsGetDiagnostic","reset","internalFinish","detail","replaceWithAnotherScormAPI","newAPI","cmiExport","flattened","totalTimeHHMMSS","totalTimeSeconds","lessonStatus","completionStatus","unknown","successStatus","completed","incomplete","passed","failed","scoreObject","parseFloat","runtimeData","originalStatus"],"sourceRoot":""}